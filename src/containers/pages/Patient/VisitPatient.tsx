import React, { useEffect, useState, Dispatch, useRef } from "react";
import { connect } from "react-redux";
import "../Patient/AdmitPatient.css";
import { getAllPatient } from "../../../store/actions/Patient";
import AvatarBigImage from './../../../assets/images/mettler_images/AvatarBigImage.png';
import { DataTable } from "primereact/datatable";
import { Column } from "primereact/column";
import { getallPatientVisit } from './../../../store/actions/PatientVisitAdminController'
import moment from "moment";
import CheckBoxgary from "../../../components/CheckBoxgary";
import "././../Staff_Patient/PatientStaffAssignment";
import switchVertical from './../../../assets/images/mettler_images/switch-vertical.svg';
import filterList from './../../../assets/images/mettler_images/filter_list.svg';
import addSymbol from './../../../assets/images/mettler_images/addSymbol.svg';
import searchImage from './../../../assets/images/mettler_images/Search.svg';
import NewVisitData from './../../../assets/data/NewVisitData.json'
import { HttpLogin } from "../../../utils/Http";
import bconData from './../../../assets/data/bconData.json';
import cardioGramImage from './../../../assets/images/mettler_images/cardiogram.svg';
import arrowUpRight from './../../../assets/images/mettler_images/arrowUpRight.svg';
import beatShadowImage from './../../../assets/images/mettler_images/beatShadowImage.svg';
import TemperaturImage from './../../../assets/images/mettler_images/TemperatureImage.svg';
import GrLikeImage from './../../../assets/images/mettler_images/GrLike.svg';
import BpImage from './../../../assets/images/mettler_images/BpImage.svg';
import MaskGroupImage from './../../../assets/images/mettler_images/Mask group.svg';
import downStrokeImage from './../../../assets/images/mettler_images/downStrokeImage.svg';
import GlucoseImage from './../../../assets/images/mettler_images/GlucoseImage.svg';
import TimerImage from './../../../assets/images/mettler_images/TimerImage.svg';
import yogaImage from './../../../assets/images/mettler_images/yogaImage.svg';
import doctorImage from './../../../assets/images/mettler_images/doctor.svg';
import breakFastImage from './../../../assets/images/mettler_images/BreakfastImage.svg';
import WineImage from './../../../assets/images/mettler_images/IoMdWine.svg';
import skinBondImage from './../../../assets/images/mettler_images/skinBondImage.svg';
import BoxOpenImage from './../../../assets/images/mettler_images/BoxOpen.svg';
import dailyProgressImage from './../../../assets/images/mettler_images/dailyProgress.svg';
import dailyProgressAdjustImage from './../../../assets/images/mettler_images/dailyProgressAdjust.svg';
import bloodBag from './../../../assets/images/mettler_images/blood_bag.svg';
import bloodDrop from './../../../assets/images/mettler_images/blood_drop.svg';
import bloodDropNew from './../../../assets/images/mettler_images/blood_dropNew.svg';
import bloodDropNewOne from './../../../assets/images/mettler_images/blood_dropNewOne.svg';
import dotImage from './../../../assets/images/mettler_images/dots-vertical.svg';
import calendarMuiImage from './../../../assets/images/mettler_images/calendarMuiImage.svg';
import AvatarDoctorImage from './../../../assets/images/mettler_images/AvatarDoctor.png';
import dotsvertical from './../../../assets/images/mettler_images/dots-vertical.svg';
import admitpatientGroup from "./../../../assets/images/mettler_images/admitpatientGroup.svg";
import OverviewGroup from "./../../../assets/images/mettler_images/OverviewGroup.svg";
import q15Group from "./../../../assets/images/mettler_images/q15Group.svg";
import Groupss from "../../../assets/images/mettler_images/Groupss.png";
import SecondaryButton from "../../../components/SecondaryButton";
import PrimaryButton from "../../../components/PrimaryButton";
import bottomImage from './../../../assets/images/mettler_images/bg.svg';
import { DialogTitle, DialogContent, DialogContentText } from "@mui/material";
import bconimg from './../../../assets/images/mettler_images/BeconEyeImg.svg';
import Dialog, { DialogProps } from '@mui/material/Dialog';
import BedAssignData from '../../../assets/data/BedAssignData.json';
import { createNewBedAssign, deleteBedAssign } from "../../../store/actions/DynamicBedAssign";
import ArrowForwardImage from './../../../assets/images/mettler_images/IoArrowForward.svg';
import { Button } from "primereact/button";
import Delete from './../../../assets/images/mettler_images/Delete.svg';
import { updateFields } from "../../../store/actions/TreatmentPlan";
import doctimg from './../../../assets/images/mettler_images/doc.png';
import loaddingFile from '../../../../src/assets/images/tenor.gif';
import ReactDOM from "react-dom";
import {
    TextField,
    FormControl,
    InputLabel,
    MenuItem,
    FormHelperText,
    Select,
    Icon,
    RadioGroup,
    FormControlLabel,
    Radio,
    Checkbox,
    colors,
    Container
} from "@mui/material";
import { AdapterDateFns } from "@mui/x-date-pickers/AdapterDateFns";
import AdmitPatientData from "../../../assets/data/AdmitPatientData.json"
import PatientTransferData from "../../../assets/data/PatientTransferData.json";
import PatientDischargeData from "../../../assets/data/PatientDischargeData.json"
import { DateCalendar, DatePicker, LocalizationProvider, MobileDateTimePicker } from "@mui/x-date-pickers";
import { getAllStaff } from "../../../store/actions/Staff";
import { getBedAssignmentByOrgId } from "../../../store/actions/BedAssignment";
import { BrowserQRCodeReader } from "@zxing/library";
import axios from "axios";
import Q15RegistryData from '../../../assets/data/Q15Data.json';
import { createQ15CONFIG } from "../../../store/actions/Q15ConfigController";
import { createPatientAdmit, getPatientAdmit, createDischargePatient, getTransferPatient } from "../../../store/actions/PatientADT";
import { createBrowserHistory } from "history";
import { FormContext } from '../../../FormContext';
import Element from "./../Visacare/Element";
import PatientInfo from "./PatientInfo";

interface IVisitPatientdata { }
interface IVisitPatientdata {
    StaticPage: any;
    getAllPatientData: any;
    dispatch: Dispatch<any>;
    getBedAssignmentByOrgIdData: any;
    getTransferPatientData: any;
    getPatientAdmitData: any;
    getDischargePatientData: any
    getAllStaffData: any;
    createPatientAdmitData: any;
    createDynamicBedAssignData:any;
    createq15configData: any;
    match: any;
    state: {
        nodes: [],
        checked: [],
        expanded: []
    }
}

const VisitPatientdata: React.FC<IVisitPatientdata> = ({
    dispatch, getAllPatientData, getAllStaffData, match, getBedAssignmentByOrgIdData, getPatientAdmitData,
    getTransferPatientData, createPatientAdmitData, createq15configData, getDischargePatientData, createDynamicBedAssignData
}) => {
    let [getPatientDataItems, setGetPatientDataItems] = useState(new Array<any>());
    let [allergyTableData, setAllergyTableData] = useState(new Array<any>());
    let [problemTableData, setProblemTableData] = useState(new Array<any>());
    const history = createBrowserHistory();
    let [vitalsTableData, setVitalsTableData] = useState(null);
    let [immunizationTableData, setImmunizationTableData] = useState(new Array<any>());
    let [labOrderTableData, setLabOrderTableData] = useState(new Array<any>());
    const [selectedValues, setSelectedValues] = useState([]);
    const [selectedRow, setSelectedRow] = useState(0);
    let [selectedPatientName, setSelectedPatientName] = useState("");
    let [encryptPatientid, setEncryptPatientid] = useState(null);
    let [decryptPatientid, setDecryptPatientid] = useState(null);
    let [encryptVisitid, setEncryptVisitid] = useState(null);
    let [decryptVisitid, setDecryptVisitid] = useState(null);
    let [inputOrgData, setInputOrgData] = useState("");
    let [inputVisitId, setInputVisitId] = useState("");
    let [patientAge, setPatientAge] = useState(null);
    let [patientSSN, setPatientSSN] = useState(null);
    let [patientImage, setPatientImage] = useState("");
    let [patientGender, setPatientGender] = useState(null);
    let [patientDateOfBirth, setPatientDateOfBirth] = useState(null);
    let [inputPatientInfo, setInputPatientInfo] = useState(null);
    let [vitalsEnteredDate, setVitalsEnteredDate] = useState("");
    let [allFormName, setAllFormName] = useState([]);
    let [inputAdmitData, setInputAdmitData] = useState(AdmitPatientData);    
    let [inputTransferData, setInputTransferData] = useState(PatientTransferData);
    let [inputDischargeData, setInputDischargeData] = useState(PatientDischargeData);
    let [getStaffDataItems, setGetStaffDataItems] = useState(new Array<any>());
    let [dialogBedView, setDiaglogBedView] = useState(false);
    let [wardNumber, setWardNumber] = useState(null);
    let [roomNumber, setRoomNumber] = useState(null);
    let [NatureOfReactionData, setNatureOfReactionData] = useState(null);
    let [inputBedAllAssignData, setInputBedAllAssignData] = useState(new Array<any>());
    let [displayBedAssignData, setDisplayBedAssignData] = useState([]);
    let [inputOrgId, setInputOrgId] = useState("");
    let [inputBconData, setInputBconData] = useState(bconData);
    let [patientOccupiedName, setPatientOccupiedName] = useState(null);
    let [assignedOccupiedName, setAssignedOccupiedName] = useState(null);
    let [admitOccupiedName, setAdmitOccupiedName] = useState(null);
    let [bedNumber, setBedNumber] = useState("");
    let [allGetPatientDataItems, setAllGetPatientDataItems] = useState(new Array<any>());
    const [containerColors, setContainerColors] = useState({});
    let [inputBedId, setInputBedId] = useState("");
    const [bedAllocateDialog, setBedAllocateDialog] = useState(false);
    const [bedOccupiedDialog, setBedOccupiedDialog] = useState(false);
    let [inputBedData, setInputBedData] = useState("");
    let [inputFormData, setInputFormData] = useState(BedAssignData);
    let [imagingProcedureData, setImagingProcedureData] = useState(new Array<any>());
    let [orderProcedureData, setOrderProcedureData] = useState(new Array<any>());
    let [consultOrderData, setConsultOrderData] = useState(new Array<any>());
    let [inputAdmitId, setInputAdmitId] = useState("");
    const [searchTerm, setSearchTerm] = useState('');
    let [newFormId, setNewFormId] = useState(""); 
    const [elements, setElements] = useState(null);
    const videoRef = useRef(null);
    const codeReader = new BrowserQRCodeReader();
    const [scanning, setScanning] = useState(false);
    const [scannedData, setScannedData] = useState("");
    const [deviceName, setDeviceName] = useState("");
    const [deviceId, setDeviceId] = useState("");
    const [qrCodeScanDialog, setQRCodeScanDialog] = useState(false);   
    const [treatmentDialog, setTreatmentDialog] = useState(false);
    let [treatmentPlanData, setTreatmentPlanData] = useState(new Array<any>());
    const [spinner, setSpinner] = useState(false);
    let [inputUserName, setInputUserName] = useState("");
    let [severityData, setseverityData] = useState(null);
    let [displayData, setDisplayData] = useState(new Array<any>());
    let [displayLocationData, setDisplayLocationData] = useState(new Array<any>());
    let [displayActivityData, setDisplayActivityData] = useState(new Array<any>());
    const [showQ15CheckView, setQ15CheckView] = useState(false);
    let [timeSlotChange, setTimeSlotChange] = useState(1);
    let [ProblemDescription, setProblemDescription] = useState(null);
    let [StatusData, setStatusData] = useState(null);
    let [ImmunizationsData, setImmunizationsData] = useState(null);
    let [AnatomicLocationData, setAnatomicLocationData] = useState(null);
    let [Routess, setRoutes] = useState(null);
    let [LabTestDatas, setLabTestData] = useState(null);
    let [CollectionSampleDatas, setCollectionSampleData] = useState(null);
    let [Speicmens, setSpeicmen] = useState(null);
    let [Urgencydata, setUrgency] = useState(null);
    let [HowOftendatas, setHowOftendata] = useState(null);
    let [calendarChange, setCalendarChange] = useState(4);
    const [displayDialogQ15Data, setDisplayDialogQ15Data] = useState(false);
    let [showCalendarView, setShowCalendarVew] = useState(false);
    let [inputQ15Data, setInputQ15Data] = useState(Q15RegistryData);
    const getAPI = async () => {
        try {
            const res = await axios.get("http://web.mettlerhealth.com:5000/api/getAll");
            console.log(res);
        } catch (error) {
            console.log(error);
        }
    };

    const postAPI = async () => {
        let convertedDId = deviceId;
        convertedDId = convertedDId.replace(/(.{2})/g, "$1:");
        convertedDId = convertedDId.slice(0, -1);
        try {
            const res = await axios.post("http://66.169.158.106:7000/api/beacon", {
                id: "",
                deviceName,
                deviceId: convertedDId
            });
            if (res.data.message === "Beacon details saved successfully..") {
                // window.location.reload();
                closeModal();
                setDeviceId("");
                setDeviceName("");
                getAPI();
                inputAdmitData.deviceId = deviceId;
                setInputAdmitData({ ...inputAdmitData });
            }
        } catch (error) {
            alert("something wrong..");
            setDeviceId("");
            setDeviceName("");
        }
    };
    const startScanning = async () => {
        try {
            setScanning(true);
            const videoInputDevices = await codeReader.listVideoInputDevices();
            const selectedDeviceId = videoInputDevices[0].deviceId;
            let constraints = {
                video: { deviceId: selectedDeviceId },
            };
            codeReader.decodeFromVideoDevice(
                selectedDeviceId,
                videoRef.current,
                (result, err) => {
                    if (result) {
                        setScannedData(result.getText());
                        setDeviceId(result.getText());
                        setScanning(false);

                        // Automatically open the modal
                        const modal = document.getElementById("exampleModal");
                        if (modal) {
                            modal.classList.add("show");
                            modal.style.display = "block";
                        }
                    }
                    if (err && err.name === "NotFoundError") {
                        console.error("No QR code found in the video feed.");
                    }
                    if (err) {
                        console.error("Error during scanning:", err);
                    }
                },
                constraints
            );
        } catch (error) {
            console.error("Error starting the scanner:", error);
        }
    };
    //const [treatmentDialog, setTreatmentDialog] = useState(false);
    const contentRef = useRef(null);

    const handleToggleDialog = () => {
        setTreatmentDialog(!treatmentDialog);
    };

    const handleDocumentClick = (e) => {
        if (contentRef.current && !contentRef.current.contains(e.target)) {
            setTreatmentDialog(false);
        }
    };

    useEffect(() => {
        if (treatmentDialog) {
            document.addEventListener('click', handleDocumentClick);
        } else {
            document.removeEventListener('click', handleDocumentClick);
        }

        return () => {
            document.removeEventListener('click', handleDocumentClick);
        };
    }, [treatmentDialog]);
    useEffect(() => {
        setSpinner(true);
        var encryptInitial = match.params.patientid;
        setEncryptPatientid(encryptInitial);
        var CryptoJS = require("crypto-js");
        let decodePatientid = decodeURIComponent(encryptInitial);
        let decodeFinalPatientid = CryptoJS.AES.decrypt(decodePatientid.toString(), 'secret key 123').toString(CryptoJS.enc.Utf8);
        setDecryptPatientid(decodeFinalPatientid);
        //  console.log(JSON.stringify(decodeFinalPatientid))

        var encryptInitial = match.params.visitId;
        setEncryptVisitid(encryptInitial);
        var CryptoJS = require("crypto-js");
        let decodeVisitid = decodeURIComponent(encryptInitial);
        let decodeFinalVisitid = CryptoJS.AES.decrypt(decodeVisitid.toString(), 'secret key 123').toString(CryptoJS.enc.Utf8);
        setDecryptVisitid(decodeFinalVisitid);
        console.log(JSON.stringify(decodeFinalVisitid))

        var orgData = JSON.parse(window.localStorage.getItem("LOGINDATA"));
        var userNameData = JSON.parse(window.localStorage.getItem("LOGINDATA"));
        userNameData = userNameData.items.data.userType[0] !== "Patient" ? userNameData.loginInput.username : "";


    setInputUserName(userNameData);
        orgData = orgData.loginInput.organization;
        HttpLogin.axios().get("api/org/getById/" + orgData)
            .then((res) => {
                if (res.data.message.code === "MHC - 0200") {
                    setInputOrgId(res.data.data.id);
                    dispatch(getBedAssignmentByOrgId(res.data.data.id));
                    setInputOrgData(res.data.data.organizationdetails[0].name);
                    HttpLogin.axios().get("/api/forms/get")
                        .then((resp) => {
                            if (resp.data.message.code === "MHC - 0200") {
                                setAllFormName(resp.data.data.filter(t => t.name !== "" && t.organization === res.data.data.id));
                            } else {
                                setAllFormName([]);
                            }
                        })
                    HttpLogin.axios().get("/api/filledForm/getByPid/{pid}?pid=" + decodeFinalPatientid)
                        .then((resp) => {
                            if (resp.data.message.code === "MHC - 0200") {
                                var newElementData = resp.data.data.filter(k => k.lastVisit === decodeFinalVisitid).map(l => { return l })
                                setTreatmentPlanData(newElementData);
                            } else {
                                setTreatmentPlanData([]);
                            }
                        })
                } else {
                    alert(res.data.message.description);
                    setInputOrgData("");
                }
            })
        HttpLogin.axios().get("/api/Allergy/getByPatientId/" + decodeFinalPatientid)
            .then((resp) => {
                // console.log(JSON.stringify(resp.data.data.filter(i => i.patientId === decodeFinalPatientid)))

                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.lastVisit === decodeFinalVisitid);
                    setAllergyTableData(newDataAccess);
                }
            })
            console.log(JSON.stringify(window.localStorage.getItem("wardBedInfo")));
        HttpLogin.axios().get("/api/dropdowns/get-all")
            .then((response) => {
                HttpLogin.axios().get("/api/bedConfig/getAll")
                    .then((resp) => {
                        HttpLogin.axios().get("/api/ByOccupiedBed")
                            .then((res) => {
                                if (res.data.message.code === "MHC - 0200") {                                    
                                    setInputBedAllAssignData(res.data.data);
                                    var bedNumberCalc = res.data.data.filter(k => k.pid === decodeFinalPatientid).map(l => { return l.wardBedInfo.slice(2, 8) });
                             
                                    if (bedNumberCalc[0] !== undefined) {
                                        setInputBedData(bedNumberCalc[0]);
                                    }
                                } else {
                                    setInputBedAllAssignData([]);
                                }
                   
                                let LabTestdata = response.data.data.filter(k => k.dropdown === "LabTest").map((i) => { return i.list })
                                setLabTestData(LabTestdata[0]);
                                let CollectionSampledata = response.data.data.filter(k => k.dropdown === "CollectionSample").map((i) => { return i.list })
                                setCollectionSampleData(CollectionSampledata[0]);
                                let Speicmendata = response.data.data.filter(k => k.dropdown === "Speicmen").map((i) => { return i.list })
                                setSpeicmen(Speicmendata[0]);
                                let Urgencydata = response.data.data.filter(k => k.dropdown === "Urgency").map((i) => { return i.list })
                                setUrgency(Urgencydata[0]);
                                let HowOftendata = response.data.data.filter(k => k.dropdown === "HowOften").map((i) => { return i.list })
                                setHowOftendata(HowOftendata[0]);
                                let wardInputData = response.data.data.filter(k => k.dropdown === "wardName").map((i) => { return i.list })
                                setWardNumber(wardInputData[0]);
                                let NatureOfReaction = response.data.data.filter(k => k.dropdown === "natureOfReaction").map((i) => { return i.list })
                                setNatureOfReactionData(NatureOfReaction[0]);
                                let  newSeverity = response.data.data.filter(k=>k.dropdown === "Severity").map((i) => { return i.list })        
                                setseverityData(newSeverity[0]);
                                let ProblemDescriptiondrop = response.data.data.filter(k => k.dropdown === "ProblemDescription").map((i) => { return i.list })
                                setProblemDescription(ProblemDescriptiondrop[0]);
                                let StatusData = response.data.data.filter(k => k.dropdown === "status").map((i) => { return i.list })
                                setStatusData(StatusData[0]);
                                let Immunizations = response.data.data.filter(k => k.dropdown === "Immunization").map((i) => { return i.list })
                                setImmunizationsData(Immunizations[0]);
                                let Routes = response.data.data.filter(k => k.dropdown === "Route").map((i) => { return i.list })
                                setRoutes(Routes[0]);
                                let AnatomicLocation = response.data.data.filter(k => k.dropdown === "anatomicLocation").map((i) => { return i.list })
                                setAnatomicLocationData(AnatomicLocation[0]);
                                let roomInputData = response.data.data.filter(k => k.dropdown === "roomNo").map((i) => { return i.list })
                                if (resp.data.data.length === 0) {
                                    setRoomNumber(roomInputData[0]);
                                } else {
                                    if (res.data.message.code === "MHC - 0200") {
                                        roomInputData = resp.data.data.filter(col => {
                                            return !res.data.data.find(selected => selected.bedId !== "" && col.id === selected.bedId)
                                        })
                                        // console.log(JSON.stringify(res.data.data.filter(k=>k.pid === decodeFinalPatientid).map(k=>{return k.wardBedInfo.slice(2,5)})))
                                        console.log(JSON.stringify(roomInputData));
                                        setRoomNumber(roomInputData);
                                    }
                                }
                            })
                    })
            })
        HttpLogin.axios().get("/api/Problem/getByPatientId/" + decodeFinalPatientid)
            .then((resp) => {
                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.lastVisit === decodeFinalVisitid);
                    setProblemTableData(newDataAccess);
                }
            })

        HttpLogin.axios().get("/api/vital/getLatestVital/" + decodeFinalPatientid)
            .then((resp) => {
                if (resp.data.message.code === "MHC - 0200") {
                    setVitalsEnteredDate(resp.data.data.enteredDate !== null && resp.data.data.enteredDate !== undefined && resp.data.data.enteredDate !== "" ? moment(resp.data.data.enteredDate, "YYYYMMDDHHmm").format("MMM DD, hh:mm A") : "");
                    setVitalsTableData(resp.data.data);
                } else {
                    //    alert(resp.data.message.description);                            
                }

            })
        HttpLogin.axios().get("/api/Immunization/getByPatientId/" + decodeFinalPatientid)
            .then((resp) => {
                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.lastVisit === decodeFinalVisitid);
                    setImmunizationTableData(newDataAccess);
                }
            })
        HttpLogin.axios().get("/api/labimgpro/getAll")
            .then((resp) => {

                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.pid === decodeFinalPatientid && i.lastVisit === decodeFinalVisitid);
                    setImagingProcedureData(newDataAccess);
                }
            })
        HttpLogin.axios().get("/api/labpro/getAll")
            .then((resp) => {
                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.pid === decodeFinalPatientid && i.lastVisit === decodeFinalVisitid);
                    setOrderProcedureData(newDataAccess);
                }
            })
        HttpLogin.axios().get("/api/labConsult/getAll")
            .then((resp) => {
                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.pid === decodeFinalPatientid && i.lastVisit === decodeFinalVisitid);
                    setConsultOrderData(newDataAccess);
                }
            })
        HttpLogin.axios().get("/api/labTest/getAll")
            .then((resp) => {
                console.log(JSON.stringify(resp.data.data.length > 0 && resp.data.data.filter(i => i.pid !== null && i.lastVisit !== null && i.pid === decodeFinalPatientid && i.lastVisit === decodeFinalVisitid)));
                if (resp.data.message.code === "MHC - 0200") {
                    let newDataAccess = resp.data.data.length > 0 && resp.data.data.filter(i => i.pid !== null && i.lastVisit !== null && i.pid === decodeFinalPatientid && i.lastVisit === decodeFinalVisitid);
                    setLabOrderTableData(newDataAccess);
                }
            })
        HttpLogin.axios().get("api/patient/getPatient/" + decodeFinalPatientid)
            .then((res) => {

                if (res.data.message.code === "MHC - 0200") {
                    setSelectedPatientName(res.data.data.basicDetails[0].name[0].given)
                    setInputPatientInfo(res.data.data.basicDetails[0].name[0].given);
                    setPatientImage(res.data.data.basicDetails[0].profile !== "" ? res.data.data.basicDetails[0].profile : "");
                    //  console.log(JSON.stringify(res.data.data.basicDetails[0].birthDate));
                    setPatientDateOfBirth(moment(res.data.data.basicDetails[0].birthDate).format('MMM DD,YYYY'));
                    var genderChanges = res.data.data.basicDetails[0].gender === "M" ? "Male" : res.data.data.basicDetails[0].gender === "fm" ? "Female" : "Not Specify";
                    setPatientGender(genderChanges);
                    var ssnValue = res.data.data.basicDetails[0].ssn != undefined ? res.data.data.basicDetails[0].ssn.slice(6, 9) : "";
                    setPatientSSN(ssnValue);
                    var today = new Date();
                    var birthDate = new Date(moment(res.data.data.basicDetails[0].birthDate, "YYYYMMDD").format("YYYY-MM-DDTHH:mm:ss.000Z"));
                    // create a date object directly from `dob1` argument
                    var age_now = today.getFullYear() - birthDate.getFullYear();
                    var m = today.getMonth() - birthDate.getMonth();
                    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                        age_now--;
                    }
                    setPatientAge(age_now);
                } else {
                    alert(res.data.message.description);
                }
            })
            HttpLogin.axios().get("api/q15form/get/wg2rzH0Yjj")
            .then((newInData) => {
              if (newInData.data.message.code === "MHC - 0200") {
                let newOutData = newInData.data.data.location;
                let entries = Object.entries(newOutData).map(([key, value]) => ({
                  label: `${value}`,
                  value: `${key}`
                }));
                setDisplayLocationData(entries)
              } else {
                alert(newInData.data.message.description);
              }
            })
          HttpLogin.axios().get("api/q15form/get/l6gsqwczMR")
            .then((newInData) => {
              if (newInData.data.message.code === "MHC - 0200") {
                let newOutData = newInData.data.data.activity;
                let entries = Object.entries(newOutData).map(([key, value]) => ({
                  label: `${value}`,
                  value: `${key}`
                }));
                setDisplayActivityData(entries);
              } else {
                alert(newInData.data.message.description);
              }
            })
          HttpLogin.axios().get("api/config/getById/" + decodeFinalPatientid)
            .then((response) => {
              if (response.data.data !== undefined) {
                setDisplayData(response.data.data);
                if (window.localStorage.getItem("CREATEQ15") !== null && window.localStorage.getItem("CREATEQ15") !== "" && window.localStorage.getItem("CREATEQ15") !== "No") {
                  var timeAddSlotChange = parseInt(window.localStorage.getItem("TIMESLOTCHANGE"));
                  setTimeSlotChange(timeAddSlotChange);
                  var newCalendarChange = parseInt(window.localStorage.getItem("Q15CALENDARCHANGE"));
                  setCalendarChange(newCalendarChange);
                  var newCalendarDate = new Date(window.localStorage.getItem("Q15DATE"));
                  setCalendarDate(newCalendarDate);
                  inputQ15Data.q15Date = newCalendarDate;
                  setInputQ15Data({ ...inputQ15Data });
                  window.localStorage.setItem("CREATEQ15", "No");
                  setQ15CheckView(true);
                }
              } else {
                alert(response.data.message.description);
              }
            })

        dispatch(getAllStaff());
        dispatch(getallPatientVisit());
        dispatch(getAllPatient());
        dispatch(getPatientAdmit());
        dispatch(getTransferPatient());
    }, []);

    useEffect(() => {
        if (scanning) {
            startScanning();
        } else {
            codeReader.reset();
        }

        return () => {
            codeReader.reset();
        };
    }, [scanning]);

    const handleDeviceNameChange = (e) => {
        setDeviceName(e.target.value);
    };

    let [increment, setIncrement] = useState(1);

    function incrementValue() {
        return increment++;
    }

    const handleQ15Reports = () =>{
        window.localStorage.setItem("CREATEQ15", "No");
        console.log(JSON.stringify(calendarDate)) ; 
        // if(addData !== "" && addData !== undefined && addData.q15Date !== "" && addData.q15Date !== null) {
        //     HttpLogin.axios().get("/api/PSConfig/getByDate/" + addData.q15Date)
        //     .then((resp) => {
        //         console.log(JSON.stringify(resp.data)) ; 
        //     })
        // }
        if (calendarChange === 4) {
          inputQ15Data.q15Date = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate())), "DDD MMM DD YYYY HH:mm:ss").format("YYYY-MM-DDTHH:mm:ss.000Z")
        }
        setInputQ15Data({ ...inputQ15Data });
        setQ15CheckView(true);
    }
    const closeModal = () => {
        const modal = document.getElementById("exampleModal");
        if (modal) {
            modal.classList.remove("show");
            modal.style.display = "none";
            setDeviceId("");
            setDeviceName("");
            setScannedData("");
            setQRCodeScanDialog(false);
        }
    };

    let newTreatmentPlan = treatmentPlanData !== null && treatmentPlanData.length>0 && treatmentPlanData.map((item)=>{return item.form.name});
   

    let newFormName = allFormName != null && allFormName.length > 0 && allFormName.map((item, i) => {
        return item.name;
    })
    
    let newWardInputData = wardNumber != null && wardNumber.length > 0 && wardNumber.map((item, i) => {
        return (
            <MenuItem key={i} value={item.id}>{item.value}</MenuItem>
        )
    })

    let newNatureOfReactionInputData = NatureOfReactionData != null && NatureOfReactionData.length > 0 && NatureOfReactionData.map((item, i) => {
        return (
            <MenuItem key={i} value={item.id}>{item.value}</MenuItem>
        )
    })
    const [newDialogsConsult, setNewDialogsConsult] = useState(false);
    const [rowDataValuesConsult, setRowDataValuesConsult] = useState(null);
    const ConsultEditChange = (rowData) => {
        setNewDialogsConsult(true);
        setRowDataValuesConsult(rowData);
    }
    const dataConsultEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => ConsultEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "26px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "40px" }} src={dotImage}></img></span>}</a>;
    }
    const [isPageLoaded, setPageLoaded] = useState(false);

    if (!isPageLoaded && !getBedAssignmentByOrgIdData.isLoading) {
        // console.log(JSON.stringify(getBedAssignmentByOrgIdData.items.data));
        if (getBedAssignmentByOrgIdData.items.data != undefined) {
            //console.log(JSON.stringify(getBedAssignmentByOrgIdData.items.data.filter(t=>t.organization === inputOrgId)));
            setDisplayBedAssignData(getBedAssignmentByOrgIdData.items.data.filter(t => t.organization === inputOrgId));
        }
        setPageLoaded(true)
    }
    if (!getBedAssignmentByOrgIdData && getBedAssignmentByOrgIdData.isFormSubmit) {

        setTimeout(() => {
            setPageLoaded(false);

        }, (1000));
    }
    const [isQ15PageLoaded, setQ15PageLoaded] = useState(false);

    if (!isQ15PageLoaded && !createq15configData.isLoading) {
  
      if (createq15configData !== null && createq15configData !== undefined) {
        setInputQ15Data(createq15configData.items.data.savedConfig);
        setQ15PageLoaded(true);
        window.location.reload();
  
        //  setQ15CheckView(true);  
        /* setSpinner(false);
           
        
   
         setQ15CheckView(true);
           setDisplayDialogQ15Data(false);
           setSpinner(false);*/
  
      }
    }
    const [isPatientAdmitPageLoaded, setPatientAdmitPageLoaded] = useState(false);

    if (!isPatientAdmitPageLoaded && !getPatientAdmitData.isLoading) {
        console.log(JSON.stringify(getPatientAdmitData.items.data));
        inputAdmitData.bedId = inputBedData;
        if (getPatientAdmitData.items.data != undefined) {
            //console.log(JSON.stringify(getBedAssignmentByOrgIdData.items.data.filter(t=>t.organization === inputOrgId)));   
            var patientAdmitData = [];
            getPatientAdmitData.items.data = getPatientAdmitData.items.data.filter(t => t.pid === decryptPatientid && t.lastVisit === decryptVisitid);
            //setSpinner(false);
            console.log(JSON.stringify(getPatientAdmitData.items.data));
            if (getPatientAdmitData.items.data.length > 0 && getPatientAdmitData.items.data[0].status === "Admitted") {
                setInputAdmitId(getPatientAdmitData.items.data[0].id);
                getPatientAdmitData.items.data[0].admissionDate = getPatientAdmitData.items.data !== undefined && getPatientAdmitData.items.data[0].admissionDate !== null && getPatientAdmitData.items.data[0].admissionDate !== undefined && getPatientAdmitData.items.data[0].admissionDate !== "" ? new Date(moment(getPatientAdmitData.items.data[0].admissionDate, "YYYYMMDD").format("YYYY-MM-DDTHH:mm:ss.000Z")) : null;
                inputAdmitData = getPatientAdmitData.items.data[0];

                setInputAdmitData({ ...inputAdmitData });

            } else {

                setInputAdmitData({ ...inputAdmitData });
            }
        } else {
            setInputAdmitData({ ...AdmitPatientData });
        }
        setPatientAdmitPageLoaded(true);
    }
    if (!getPatientAdmitData && getPatientAdmitData.isFormSubmit) {

        setTimeout(() => {
            setPatientAdmitPageLoaded(false);

        }, (1000));
    }

    const [isPatientTransferPageLoaded, setPatientTransferPageLoaded] = useState(false);

    if (!isPatientTransferPageLoaded && !getTransferPatientData.isLoading) {
        console.log(JSON.stringify(getTransferPatientData));
        if (getTransferPatientData.items.data != undefined) {
            //console.log(JSON.stringify(getBedAssignmentByOrgIdData.items.data.filter(t=>t.organization === inputOrgId)));   
            var patientAdmitData = [];
            getTransferPatientData.items.data = getTransferPatientData.items.data.filter(t => t.pid === decryptPatientid && t.lastVisit === decryptVisitid);
            console.log(JSON.stringify(getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1]));
            if (getTransferPatientData.items.data !== undefined && getTransferPatientData.items.data.length > 0 && getTransferPatientData.items.data[0].status === "Transfered") {                         
                setInputAdmitId(getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].admitId);
                inputTransferData.wardLocation = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].wardLocation;
                inputTransferData.bedId = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].bedId;
                inputTransferData.facilityTreatingSpeciality1 = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].facilityTreatingSpeciality1;
                inputTransferData.typeOfTransfer = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].typeOfTransfer;
                inputTransferData.transferedDate = getTransferPatientData.items.data !== undefined && getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].transferedDate !== null && getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].transferedDate !== undefined && getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].transferedDate !== "" ? new Date(moment(getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].transferedDate, "YYYYMMDD").format("YYYY-MM-DDTHH:mm:ss.000Z")) : null;                 
                inputTransferData.transferedBy = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].transferedBy;
                inputTransferData.briefDescriptionTransfer = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].briefDescriptionTransfer;
                inputTransferData.attendingPhysician1 = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].attendingPhysician1;
                inputTransferData.primaryPhysician1 = getTransferPatientData.items.data[getTransferPatientData.items.data.length - 1].primaryPhysician1;
                setInputTransferData({ ...inputTransferData });
            } else {

            }
        } else {
            //  setInputAdmitData({...inputAdmitData});
        }
        setPatientTransferPageLoaded(true);
    }
    if (!getTransferPatientData && getTransferPatientData.isFormSubmit) {

        setTimeout(() => {
            setPatientTransferPageLoaded(false);

        }, (1000));
    }

    const [isPatientDischargePageLoaded, setPatientDischargePageLoaded] = useState(false);

    if (!isPatientDischargePageLoaded && !getDischargePatientData.isLoading) {
        console.log(JSON.stringify(getDischargePatientData));
        if (getDischargePatientData.items.data != undefined) {
            getDischargePatientData.items.data = getDischargePatientData.items.data.filter(t => t.pid === decryptPatientid && t.lastVisit === decryptVisitid);
            if (getDischargePatientData.items.data !== undefined && getDischargePatientData.items.data.length > 0 && getDischargePatientData.items.data[0].status === "Discharged") {                         
                inputDischargeData.dischargeBy = getDischargePatientData.items.data.dischargeBy;
                inputDischargeData.dischargeDate = getDischargePatientData.items.data !== undefined && getDischargePatientData.items.data[getDischargePatientData.items.data.length - 1].dischargeDate !== null && getDischargePatientData.items.data[getDischargePatientData.items.data.length - 1].dischargeDate !== undefined && getDischargePatientData.items.data[getDischargePatientData.items.data.length - 1].dischargeDate !== "" ? new Date(moment(getDischargePatientData.items.data[getDischargePatientData.items.data.length - 1].dischargeDate, "YYYYMMDD").format("YYYY-MM-DDTHH:mm:ss.000Z")) : null;                 
                inputDischargeData.dischargeType = getDischargePatientData.items.data.dischargeType;
                inputDischargeData.summaryOfCare = getDischargePatientData.items.data.summaryOfCare;
                setInputDischargeData({...inputDischargeData});
            }
        } else {
            //  setInputAdmitData({...inputAdmitData});
        }
        setPatientDischargePageLoaded(true);
    }
    if (!getDischargePatientData && getDischargePatientData.isFormSubmit) {

        setTimeout(() => {
            setPatientDischargePageLoaded(false);

        }, (1000));
    }

    let [vitalEvent, setVitalEVent] = useState(null);

    const [isPatientPageLoaded, setPatientPageLoaded] = useState(false);

    if (!isPatientPageLoaded && !getAllPatientData.isLoading) {
        if (getAllPatientData.items.message.code === "MHC - 0200") {
            var newPatientInputData = getAllPatientData.items.data.filter(t => t.organization === inputOrgData);
            setAllGetPatientDataItems(newPatientInputData);
            setSpinner(false);
            newPatientInputData = newPatientInputData.filter(val => !(inputBedAllAssignData.map(k => { return k.pid })).includes(val.id))
            // console.log(JSON.stringify(newPatientInputData.filter(val => !(inputBedAllAssignData.map(k=>{return k.pid})).includes(val.id)))) 
            // console.log(JSON.stringify(newPatientInputData))
            setGetPatientDataItems(newPatientInputData);
        } else {
            setGetPatientDataItems([]);
            alert(getAllPatientData.items.message.description);
        }
        setPatientPageLoaded(true);
    }
    if (!getAllPatientData && getAllPatientData.isFormSubmit) {

        setTimeout(() => {
            setPatientPageLoaded(false);

        }, (1000));
    }

    const [isStaffPageLoaded, setStaffPageLoaded] = useState(false);

    if (!isStaffPageLoaded && !getAllStaffData.isLoading) {
        if (getAllStaffData.items.message.code === "MHC - 0200") {
            setGetStaffDataItems(getAllStaffData.items.data.filter(t => t.organization === inputOrgData));
            //setSpinner(false);
            //  console.log(JSON.stringify(getAllStaffData.items.data));
        } else {
            setGetStaffDataItems([]);
            alert(getAllStaffData.items.message.description);
        }
        setStaffPageLoaded(true)
    }
    if (!getAllStaffData && getAllStaffData.isFormSubmit) {

        setTimeout(() => {
            setStaffPageLoaded(false);

        }, (1000));
    }

    const onSelectionChangedData = (rowData) => {
        const value = rowData.value;
        setSelectedValues(value);
        setSelectedRow(rowData.value.length);
    }
    const onRowSelectAllergyData = (event) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(event.data.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        var encryptPatientId = CryptoJS.AES.encrypt(event.data.patientId, 'secret key 123');
        var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
        window.location.href = "/MettlerAddAllergy/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    let [calendarDate, setCalendarDate] = useState(new Date());
    const firstDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 3)), "DDD MMM DD YYYY HH:mm:ss").format("ddd");
    const secondDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 2)), "DDD MMM DD YYYY HH:mm:ss").format("ddd");
    const thirdDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 1)), "DDD MMM DD YYYY HH:mm:ss").format("ddd");
    const forthDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate())), "DDD MMM DD YYYY HH:mm:ss").format("ddd");
    const firstDate = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 3)), "DDD MMM DD YYYY HH:mm:ss").format("DD");
    const secondDate = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 2)), "DDD MMM DD YYYY HH:mm:ss").format("DD");
    const thirdDate = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 1)), "DDD MMM DD YYYY HH:mm:ss").format("DD");
    const forthDate = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate())), "DDD MMM DD YYYY HH:mm:ss").format("DD");
    const fifthDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() + 4)), "DDD MMM DD YYYY HH:mm:ss").format("ddd");
    const sixthDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() + 5)), "DDD MMM DD YYYY HH:mm:ss").format("ddd");
    const seventhDay = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() + 6)), "DDD MMM DD YYYY HH:mm:ss").format("ddd");


    const onRowSelectProblemData = (event) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(event.data.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        var encryptPatientId = CryptoJS.AES.encrypt(event.data.patientId, 'secret key 123');
        var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
        window.location.href = "/MettlerAddPatientProblem/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onRowSelectVitalData = (event) => {
        setIsVisibles(true);
        setVitalEVent(event);

    }

    const handleVitalEventChange = (event) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(event, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        window.location.href = "/MettlerAddPatientVitals/" + encryptPatientid + "/" + encryptVisitid + "/" + setEncryptId;
    }

    const onRowSelectLabOrderData = (event) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(event.data.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        var encryptPatientId = CryptoJS.AES.encrypt(event.data.patientId, 'secret key 123');
        var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
        window.location.href = "/MettlerAddPatientVitals/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const onRowSelectData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerSkinAllergy/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const onRowSelectDatas = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerPatientProblem/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onImagingProcedureData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddImagingProcedure/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const onRowSelectDatasImagingProcedure = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerCtScan/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onRowSelectDatasimmu = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddImmunizationView/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onRowSelectDataslab = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddPatientLabTestview/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onRowChangeTreatmentPlan = (event: any) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(event.data.form.name, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        window.location.href = "/MettlerAIMS/" + encryptPatientid + "/" + setEncryptId + "/" + encryptVisitid;
    }

    const dataOrganization = (rowData: any) => {
        return rowData.form.organization !== null ? <span>{inputOrgData}</span> : <span>--</span>;
    }

    const dataFieldsLength = (rowData: any) => {
        return rowData.form.fields.length > 0 ? rowData.form.fields.length : '--';
    }

    const onLabData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddPatientLabTest/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const onProcedureData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddProcedure/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const onRowSelectDatasProcedure = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerBoneMarrowBiopsy/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onConsultData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddProcedureconsult/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const onRowSelectDatasConsult = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerViewProcedure/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const onRowSelectImmunizationData = (event) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(event.data.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        window.location.href = "/MettlerAddPatientImmunization/" + encryptPatientid + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const handleFixedChange = () => {

    }

    const enterDateAndTime = (rowData: any) => {
        return rowData.enteredDate !== "string" && rowData.enteredDate !== "" && rowData.enteredDate !== null ? <span style={{ whiteSpace: "nowrap", font: "popins", fontSize: "14px", position: "relative", left: "18px" }}> {moment(rowData.enteredDate, "YYYYMMDDHHmm").format('MMM DD, hh:mm A')}</span> : <span>{rowData.enteredDate}</span>
    }

    const dataSelectedPatientName = (rowData: any) => {
        return rowData.id != "" ? <span style={{ font: "popins", fontSize: "14px", position: "relative", left: "36px" }}>{selectedPatientName}</span> : <span></span>
    }

    const dataOnsetDate = (rowData: any) => {
        return rowData.dateOfOnset !== "string" && rowData.dateOfOnset !== "" && rowData.dateOfOnset !== null ? <span style={{ whiteSpace: "nowrap", font: "popins", fontSize: "14px", position: "relative", left: "18px" }}> {moment(rowData.dateOfOnset, "YYYYMMDDHHmm").format("MMM DD, hh:mm A")}</span> : <span>{rowData.dateOfOnset}</span>
    }

    const dataDueDate = (rowData: any) => {
        return rowData.dueDate !== "string" && rowData.dueDate !== "" && rowData.dueDate !== null ? <span style={{ whiteSpace: "nowrap", font: "popins", fontSize: "14px", position: "relative", left: "18px" }}> {moment(rowData.dueDate, "YYYYMMDDHHmm").format("MMM DD, hh:mm A")}</span> : <span>{rowData.dueDate}</span>
    }

    const dataAdminDate = (rowData: any) => {
        return rowData.administrationDate !== "string" && rowData.administrationDate !== "" && rowData.administrationDate !== null ? <span style={{ whiteSpace: "nowrap", font: "popins", fontSize: "14px", position: "relative", left: "18px" }}> {moment(rowData.administrationDate, "YYYYMMDDHHmm").format("MMM DD, hh:mm A")}</span> : <span>{rowData.administrationDate}</span>
    }

    const dataCollectionDate = (rowData: any) => {
        return rowData.collectionDateTime !== "string" && rowData.collectionDateTime !== "" && rowData.collectionDateTime !== null ? <span style={{ whiteSpace: "nowrap", font: "popins", fontSize: "14px", position: "relative", left: "18px" }}> {moment(rowData.collectionDateTime, "YYYYMMDDHHmm").format("MMM DD, hh:mm A")}</span> : <span>{rowData.collectionDateTime}</span>
    }
    const dateDesired = (rowData: any) => {
        return rowData.dateDesired !== "string" && rowData.dateDesired !== "" && rowData.dateDesired !== null ? <span style={{ whiteSpace: "nowrap", font: "popins", fontSize: "14px", position: "relative", left: "18px" }}> {moment(rowData.dateDesired, "YYYYMMDDHHmm").format("MMM DD, hh:mm A")}</span> : <span>{rowData.dateDesired}</span>
    }

    const dataphysicianName = (rowData: any) => {
        var newAllergyType = getStaffDataItems !== undefined && getStaffDataItems.length>0 && getStaffDataItems.filter(i => i.id === rowData.physicianName).map((newData) => {return newData.name[0].given+" "+newData.name[0].family})
        return rowData.physicianName != "" && rowData.physicianName != null ? <span>{newAllergyType}</span> : <span></span>
    }

    const Reaction = (rowData: any) => {
        var newNatureOfReaction = NatureOfReactionData != null && NatureOfReactionData.length > 0 && NatureOfReactionData.filter(k=>k.id === rowData.natureOfReaction).map((item)=>{return item.value})
        return <span>{rowData.natureOfReaction !== undefined && rowData.natureOfReaction !== null ? <span>{newNatureOfReaction}</span> : <span>{rowData.natureOfReaction}</span>}</span>
    }

    const dataAllergySeverity = (rowData:any)=>{
        var newSeverity = severityData != null && severityData.length > 0 && severityData.filter(k=>k.id === rowData.allergySeverity).map((item)=>{return item.value})
        return <span>{rowData.allergySeverity !== undefined && rowData.allergySeverity !== null ? <span>{newSeverity}</span> : <span>{rowData.allergySeverity}</span>}</span>
    }

    const dataProblemDescription = (rowData:any) => {
        var newProblemDescription = ProblemDescription != null && ProblemDescription.length > 0 && ProblemDescription.filter(k=>k.id === rowData.problemDescription).map((item)=>{return item.value})
        return <span>{rowData.problemDescription !== undefined && rowData.problemDescription !== null ? <span>{newProblemDescription}</span> : <span>{rowData.problemDescription}</span>}</span>
    }

    const dataStatus = (rowData:any) => {
        var newProblemStatus = StatusData != null && StatusData.length > 0 && StatusData.filter(k=>k.id === rowData.problemStatus).map((item)=>{return item.value})
        return <span>{rowData.problemStatus !== undefined && rowData.problemStatus !== null ? <span>{newProblemStatus}</span> : <span>{rowData.problemStatus}</span>}</span>
    } 

    const dataImmunization = (rowData: any) => {
        var newImmunization = ImmunizationsData != null && ImmunizationsData.length > 0 && ImmunizationsData.filter(k=>k.id === rowData.immunization).map((item)=>{return item.value})
        return <span>{rowData.immunization !== undefined && rowData.immunization !== null ? <span>{newImmunization}</span> : <span>{rowData.immunization}</span>}</span>
    }

    const dataRoutes = (rowData: any) => {
        var newRoutes = Routess != null && Routess.length > 0 && Routess.filter(k=>k.id === rowData.route).map((item)=>{return item.value})
        return <span>{rowData.route !== undefined && rowData.route !== null ? <span>{newRoutes}</span> : <span>{rowData.route}</span>}</span>
    }

    const dataLocation = (rowData: any)=>{
        var newLocation = AnatomicLocationData != null && AnatomicLocationData.length > 0 && AnatomicLocationData.filter(k=>k.id === rowData.anatomicLocation).map((item)=>{return item.value})
        return <span>{rowData.anatomicLocation !== undefined && rowData.anatomicLocation !== null ? <span>{newLocation}</span> : <span>{rowData.anatomicLocation}</span>}</span>
    }

    const dataOrderUrgency = (rowData: any)=>{
        var newUrgencyData = Urgencydata != null && Urgencydata.length > 0 && Urgencydata.filter(k=>k.id === rowData.urgency).map((item)=>{return item.value})
        return <span>{rowData.urgency !== undefined && rowData.urgency !== null ? <span>{newUrgencyData}</span> : <span>{rowData.urgency}</span>}</span>
    } 

    const dataImagingUrgency = (rowData: any)=>{
        var newUrgencyData = Urgencydata != null && Urgencydata.length > 0 && Urgencydata.filter(k=>k.id === rowData.urgency).map((item)=>{return item.value})
        return <span>{rowData.urgency !== undefined && rowData.urgency !== null ? <span>{newUrgencyData}</span> : <span>{rowData.urgency}</span>}</span>
    } 

    const dataImagingProcedureEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => ImagingProcedureEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "26px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "40px" }} src={dotImage}></img></span>}</a>;
    }
    const datalabEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => LabEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "26px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "40px" }} src={dotImage}></img></span>}</a>;
    }

    const dataLabTest = (rowData) => {
        var testLaBData = LabTestDatas != null && LabTestDatas.length > 0 && LabTestDatas.filter(col => {        
            return rowData.labTest.find(selected=> col.id === selected)
          })
          testLaBData = testLaBData.map(k=>{return k.value})
        //   console.log(JSON.stringify(testLaBData.map(k=>{return k.value})));
        // var newLabTestDatas = LabTestDatas != null && LabTestDatas.length > 0 && LabTestDatas.filter(k=>k.id === rowData.labTest.map(k=>{return k})).map((item)=>{return item.value})
        return <span>{rowData.labTest !== undefined && rowData.labTest !== null && rowData.labTest.length>0 ? <span>{testLaBData.map(function (item, index) { return <span key={`demo_snap_${index}`}>{(index ? ', ' : '') + item}</span>; }) }</span> : <span>{rowData.labTest}</span>}</span>        
    }

    const dataConsultUrgency = (rowData: any)=>{
        var newUrgencyData = Urgencydata != null && Urgencydata.length > 0 && Urgencydata.filter(k=>k.id === rowData.urgency).map((item)=>{return item.value})
        return <span>{rowData.urgency !== undefined && rowData.urgency !== null ? <span>{newUrgencyData}</span> : <span>{rowData.urgency}</span>}</span>
    } 

    const dataSpecimen = (rowData) => {
        var newSpecimen = Speicmens != null && Speicmens.length > 0 && Speicmens.filter(k=>k.id === rowData.specimen).map((item)=>{return item.value})
        return <span>{rowData.specimen !== undefined && rowData.specimen !== null ? <span>{newSpecimen}</span> : <span>{rowData.specimen}</span>}</span>                
    }

    const dataCollectionType = (rowData) => {
        return rowData.collectionType !== "" && rowData.collectionType !== null && rowData.collectionType !== undefined ? rowData.collectionType : "--";
    }

    const dataCollectionSample = (rowData) => {
        var newCollectionSample = CollectionSampleDatas != null && CollectionSampleDatas.length > 0 && CollectionSampleDatas.filter(k=>k.id === rowData.collectionSample).map((item)=>{return item.value})
        return <span>{rowData.collectionSample !== undefined && rowData.collectionSample !== null ? <span>{newCollectionSample}</span> : <span>{rowData.collectionSample}</span>}</span>                               
    }

    const dataUrgency = (rowData) => {
        var newUrgencyData = Urgencydata != null && Urgencydata.length > 0 && Urgencydata.filter(k=>k.id === rowData.urgency).map((item)=>{return item.value})
        return <span>{rowData.urgency !== undefined && rowData.urgency !== null ? <span>{newUrgencyData}</span> : <span>{rowData.urgency}</span>}</span>
    }

    const Status = (rowData: any) => {
        return rowData.status != "" ? <span style={{ borderRadius: "5px", marginLeft: "55px", marginTop: "-15px", textAlign: "center", position: "absolute", width: "71px", height: "29px", backgroundColor: "white", border: rowData.status === "Active" ? "1px solid #65A455" : "1px solid #9CA1BA", color: rowData.status === "Active" ? "#65A455" : "#9CA1BA" }}>{rowData.status}</span> : <span>
        </span>

    }

    const dataMeasurement = (rowData: any) => {


    }
    const dataTempValue = (rowData: any) => {


    }
    const dataUnit = (rowData: any) => {

    }

    let patientList = getPatientDataItems !== null && getPatientDataItems.length > 0 && getPatientDataItems.map((newData, i) => {
        return (
            <MenuItem key={i} value={newData.id}>{newData.basicDetails[0].name[0].given + " " + newData.basicDetails[0].name[0].family}</MenuItem>
        )
    })


    let staffList = getStaffDataItems !== null && getStaffDataItems.length > 0 && getStaffDataItems.map((newData, i) => {
        return (
            <MenuItem key={i} value={newData.id}>{newData.name[0].given + " " + newData.name[0].family}</MenuItem>
        )
    })

    const ReactionDateAndTime = (rowData: any) => {
        return rowData.observedDetails !== null ? (rowData.observedDetails.reactionDateTime !== "Invalid date" ? moment(rowData.observedDetails.reactionDateTime, "YYYYMMDDHHmm").format("MMM DD, hh:mm A") : "") : "";
    }

    const handleMouseEnter = (event) => {
        event.target.style.backgroundColor = '#EFF4FF';
    };

    const handleMouseLeave = (event) => {
        event.target.style.backgroundColor = '';
    }

    const status = NewVisitData[0]?.status || "";


    const getStatusColor = (status: string) => {
        switch (status) {
            case "Active":
                return "#65A455";
            case "Inactive":
                return "#9CA1BA";
            case "Due Now":
                return "#EA7362";
            default:
                return "#65A455";
        }
    };
    const statusColor = getStatusColor(status);

    let [calendarScheduleChange, setCalendarScheduleChange] = useState(4);
    const handleCalendarScheduleChange = (event) => {
        calendarScheduleChange = event;
        setCalendarScheduleChange(event);
    }

    let [patientVisitTab, setPatientVisitTab] = useState(1);
    const handleChangeEvent = (event) => {
        if (patientVisitTab === 3 && !isVisibles) {
            setIsVisibles(true);
        } else {
            setIsVisibles(false);
        }
        patientVisitTab = event;
        setPatientVisitTab(event);
    };
    let [patientMainChangeTab, setPatientMainChangeTab] = useState(1);
    const handleMainChangeEvent = (event) => {
        if (event === 3) {
            patientVisitTab = 5;
            setPatientVisitTab(5);
        } else {
            patientVisitTab = 1;
            setPatientVisitTab(1);
        }
        patientMainChangeTab = event;
        setPatientMainChangeTab(event);
    };
    const [isVisible, setIsVisible] = useState(false);
    const toggleVisibility = () => {
        setIsVisible(true);
        if (isVisible) {
            setIsVisible(false);
        }
    }

    

    const handleContainerClick = (containerId, bedId, newString) => {
        console.log(JSON.stringify(inputAdmitData.bedId))
        if (newString === "Yes") {
            //   console.log(JSON.stringify(containerId));
            setBedOccupiedDialog(true);
            var newOccupiedData = inputBedAllAssignData !== undefined && inputBedAllAssignData !== null && inputBedAllAssignData.length > 0 ? inputBedAllAssignData.filter(i => i.bedId === bedId).map(k => { return k }) : [];
            let newOccupiedData1 = allGetPatientDataItems.filter(object1 => {
                return newOccupiedData.some(object2 => {
                    return object1.id === object2.pid;
                });
            });
            newOccupiedData1 = newOccupiedData1.map(newData => { return newData.basicDetails[0].name[0].given + " " + newData.basicDetails[0].name[0].family })
            setPatientOccupiedName(newOccupiedData1[0]);
            let newOccupiedData2 = getStaffDataItems.filter(object1 => {
                return newOccupiedData.some(object2 => {
                    return object1.id === object2.assignedBy;
                });
            });
            newOccupiedData2 = newOccupiedData2.map(newData => { return newData.name[0].given + " " + newData.name[0].family });
            setAssignedOccupiedName(newOccupiedData2);
            var newAdmitDate = moment(newOccupiedData[0].admitDate).format("MMM DD,YYYY");
            setAdmitOccupiedName(newAdmitDate);
            setBedNumber(containerId);
            //console.log(JSON.stringify(newOccupiedData1.map(newData=>{return newData.basicDetails[0].name[0].given+" "+newData.basicDetails[0].name[0].family})));
            // console.log(JSON.stringify(allGetPatientDataItems.filter(i=>i.id === alterOccupiedData)));
        } else {
            setContainerColors((prevColors) => {
                //  console.log(JSON.stringify(newString));
                const newColors = { ...prevColors };
                if (newColors[containerId] === '#01CDFF') {
                    delete newColors[containerId];
                } else {
                    newColors[containerId] = '#01CDFF';
                }
                setInputBedId(bedId);
                inputFormData.bedId = bedId;
                inputFormData.pid = decryptPatientid;
                inputFormData.admitDate = moment(new Date()).format("YYYYMMDD");
                setInputFormData({ ...inputFormData });
                   console.log(JSON.stringify(inputBedAllAssignData.filter(k=>k.pid === decryptPatientid).length))
                if (inputBedAllAssignData.filter(k => k.pid === decryptPatientid).length === 0 && inputAdmitData.bedId === "") {                  
                    console.log(JSON.stringify(inputFormData))
                    dispatch(createNewBedAssign(inputFormData));
                    alert("Patient Bed Assign Created");
                    setTimeout(() => {
                        setBedAllocateDialog(false);
                    }, 3000)
                } else if (inputBedAllAssignData.filter(k => k.pid === decryptPatientid).length !== 0) {
                    var bedNumberCalc = inputBedAllAssignData.filter(k => k.pid === decryptPatientid).map(l => { return l.wardBedInfo.slice(2, 8) });
                    alert("The current patient have already assigned a bed is " + bedNumberCalc[0]);
                }
                return newColors;
            });
        }
    };


    const handleNewFormChange = (name) => {
        HttpLogin.axios().get("/api/filledForm/getByPid/{pid}?pid="+decryptPatientid)
      .then((response) => {  
        
        var newElementData = response.data.data.filter(k=>k.pid === decryptPatientid && k.form.name === name).map(l=>{return l});
        console.log(JSON.stringify(newElementData))
      if(newElementData !== undefined && newElementData.length>0){
        if(newElementData[0].id !== ""){
          console.log(JSON.stringify(newElementData));
          setNewFormId(newElementData[0].id);
          setElements(newElementData[0].form);
          setSpinner(false);
        }
      
      }else{
        setNewFormId("");
        HttpLogin.axios().get("/api/forms/getByName/"+name)
                    .then((resp) => {
                      if (resp.data.message.code === "MHC - 0200") {
                        setElements(resp.data.data);  
                        setSpinner(false);     
                      }else{
                        setSpinner(false);    
                      }
                    })
                  }
       
      })
        handleMainChangeEvent(9)
    }

    const handleTreatmentChange = (name) => {
        HttpLogin.axios().get("/api/forms/getByName/" + name)
            .then((response) => {
                setElements(response.data.data)
            })
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(name, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        window.location.href = "/MettlerAIMS" + "/" + encryptPatientid + "/" + setEncryptId + "/" + encryptVisitid;
    }

    const { fields, page_label } = elements ?? {}
    const handleSubmit = (event) => {
        setElements(elements);
    
        var obj = {
          "id": newFormId !== "" && newFormId !== undefined ? newFormId: "",
          "pid": decryptPatientid,
          "lastVisit": decryptVisitid,
          "form": elements
        }
        var textCheck =  elements !== undefined && elements !== null && elements.fields.length>0 &&  elements.fields.filter(k=>k.mandatory === true && k.fieldType === 'text' && k.fieldValue === "");
        var selectCheck = elements !== undefined && elements !== null && elements.fields.length>0 &&  elements.fields.filter(k=>k.mandatory === true && k.fieldType === 'select' && k.fieldValue === "");
        var dateCheck = elements !== undefined && elements !== null && elements.fields.length>0 &&  elements.fields.filter(k=>k.mandatory === true && k.fieldType === 'date' && k.fieldValue === "");
        var checkboxCheck = elements !== undefined && elements !== null && elements.fields.length>0 &&  elements.fields.filter(k=>k.mandatory === true && k.fieldType === 'checkbox' && k.fieldValue2 === false);
        var multiSelectCheck = elements !== undefined && elements !== null && elements.fields.length>0 &&  elements.fields.filter(k=>k.mandatory === true && k.fieldType === 'multiselect').map(l=>{return l});
        //multiSelectCheck = multiSelectCheck !== undefined && multiSelectCheck !== null && multiSelectCheck.length>0 && multiSelectCheck[0].filter(k=>k.optionValue === true).length
        console.log(JSON.stringify(multiSelectCheck[0]));
        if(textCheck.length>0 && textCheck !== undefined){
          alert("Enter the "+textCheck[0].fieldLabel+" because it is mandatory");
        }else if(selectCheck.length>0 && selectCheck !== undefined){
          alert("Enter the "+selectCheck[0].fieldLabel+" because it is mandatory");
        }else if(checkboxCheck.length>0 && checkboxCheck !== undefined){
          alert("Select the "+checkboxCheck[0].fieldLabel+" because it is mandatory");
        }else if(dateCheck.length>0 && dateCheck !== undefined){
          alert("Enter the "+dateCheck[0].fieldLabel+" because it is mandatory");
        }else if(multiSelectCheck[0].fieldOptions.length>0 && multiSelectCheck !== undefined && multiSelectCheck[0].fieldOptions !== undefined && multiSelectCheck[0].fieldOptions.filter(m=>m.optionValue !== false).length === 0){
          alert("Select the "+multiSelectCheck[0].fieldLabel+" because it is mandatory");
        }else{
          var url = "/api/filledForm/add";
      HttpLogin.axios().post(url,obj, {
          headers: { 
            'Content-Type': 'application/json',
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "*",
            "Access-Control-Allow-Headers": "*"
          }
        })
        .then(res => {                       
          alert(res.data.message.description);
            console.log("API Response in post " +JSON.stringify(res.data));
            setSpinner(false);
             return res;   
        })
        .catch((e: any) => {
            alert(e.data.message.description);
          //  console.log("Error in post " +JSON.stringify(e));
          return e;               
        });    
        }    
        event.preventDefault();
      }

    const handleChange = (id, event, i) => {
        const newElements = { ...elements }
        newElements.fields.forEach(field => {
            const { fieldType, fieldId } = field;
            if (id === fieldId) {
                switch (fieldType) {

                    case 'select':
                        field['fieldValue'] = event.target.value;
                        break;
                    case 'checkbox':
                        field['fieldValue2'] = event.target.checked;
                        break;
                    default:
                        field['fieldValue'] = event.target.value;
                        break;
                }

            }
            if (fieldType === "multiselect") {
                if (i === field.fieldId) {
                    field.fieldOptions.map((item, k) => {
                        if (item.optionLabel === id && event.target.id === "many") {
                            item['optionValue'] = event.target.checked;
                        } else if (item.optionLabel === id && event.target.id === "one") {
                            for (let i = 0; i < field.fieldOptions.length; i++) {
                                if (field.fieldOptions[i].optionLabel === id) {
                                    field.fieldOptions[i].optionValue = event.target.checked;
                                } else {
                                    field.fieldOptions[i].optionValue = false;
                                }

                            }
                        }
                    });
                }

            }

            if (fieldType === "radio") {
                if (i === field.fieldId) {
                    field.fieldOptions.map((item, k) => {
                        if (item.optionLabel === id) {
                            for (let i = 0; i < field.fieldOptions.length; i++) {
                                if (field.fieldOptions[i].optionLabel === id) {
                                    field.fieldOptions[i].optionValue = event.target.checked;
                                } else {
                                    field.fieldOptions[i].optionValue = false;
                                }
                            }
                        }
                    });
                }

            }
            setElements(newElements)
        });

    }
    const [isNewVisible, setIsNewVisible] = useState(false);
    const containerStyle = {
        left: isVisible ? '486px' : '',
    };
    const toggleNewVisibility = () => {
        setIsNewVisible(true);
        if (isNewVisible) {
            setIsNewVisible(false);
        }

    }
    const [isVisibles, setIsVisibles] = useState(false);
    const Visibility = () => {
        setIsVisibles(false);
        if (patientVisitTab === 3) {
            setIsVisibles(true);
        } else {
            setIsVisibles(false);
        }  
    }
    const handleClickChange = () => {
        if (patientVisitTab === 1) {
            window.location.href = "/MettlerAddAllergy/" + encryptPatientid + "/" + encryptVisitid;;
        } else if (patientVisitTab === 2) {
            window.location.href = "/MettlerAddPatientProblem/" + encryptPatientid + "/" + encryptVisitid;
        } else if (patientVisitTab === 4) {
            window.location.href = "/MettlerAddPatientImmunization/" + encryptPatientid + "/" + encryptVisitid;
        }
    }
    const handleClickChangeorder = () => {
        if (patientVisitTab === 5) {
            window.location.href = "/MettlerAddProcedure/" + encryptPatientid + "/" + encryptVisitid;
        } else if (patientVisitTab === 6) {
            window.location.href = "/MettlerAddImagingProcedure/" + encryptPatientid + "/" + encryptVisitid;
        } else if (patientVisitTab === 8) {
            window.location.href = "/MettlerAddProcedureconsult/" + encryptPatientid + "/" + encryptVisitid;
        } else if (patientVisitTab === 7) {
            window.location.href = "/MettlerAddPatientLabTest/" + encryptPatientid + "/" + encryptVisitid;
        }
    }
    const handleClickChanges = () => {
        if (patientVisitTab === 3) {
            setIsVisibles(true)
            window.location.href = "/MettlerAddPatientVitals/" + encryptPatientid + "/" + encryptVisitid;
        }
    }

    


  const handleShowCalendar = () => {
    setShowCalendarVew(true);
  }


  const handleCalendarChange = (event) => {
    if (event === 1) {
      inputQ15Data.q15Date = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 3)), "DDD MMM DD YYYY HH:mm:ss").format("YYYY-MM-DDTHH:mm:ss.000Z")
    } else if (event === 2) {
      inputQ15Data.q15Date = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 2)), "DDD MMM DD YYYY HH:mm:ss").format("YYYY-MM-DDTHH:mm:ss.000Z")
    } else if (event === 3) {
      inputQ15Data.q15Date = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 1)), "DDD MMM DD YYYY HH:mm:ss").format("YYYY-MM-DDTHH:mm:ss.000Z")
    } else if (event === 4) {
      inputQ15Data.q15Date = moment((new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate())), "DDD MMM DD YYYY HH:mm:ss").format("YYYY-MM-DDTHH:mm:ss.000Z")
    }
    setInputQ15Data({ ...inputQ15Data });
    calendarChange = event;
    setCalendarChange(event);
    setCalendarDate(calendarDate);

    setDisplayDialogQ15Data(false);
  }




  const handleTimeSlotChange = (event) => {
    timeSlotChange = event;
    setTimeSlotChange(event);
  }



  const handleQ15Close = () => {
    window.localStorage.setItem("CREATEQ15", "No");
    setQ15CheckView(false);
  }

  const handleNewClose = () => {
    window.localStorage.setItem("CREATEQ15", "No");
    setQ15CheckView(false);
    setDisplayDialogQ15Data(false);
  }


    let [timeSlotSectionChange, setTimeSlotSectionChange] = useState(null);
  const handleDisplayDialogQ15Data = (event, newString, addData) => {
   
  
   
    if (addData != "") {
      inputQ15Data.id = addData.id;
      inputQ15Data.q15Date = new Date(moment(addData.q15Date, "YYYYMMDD").format("YYYY-MM-DDTHH:mm:ss.000Z"));
      inputQ15Data.q15Slot = addData.q15Slot;
      inputQ15Data.enteredBy = inputUserName;
      inputQ15Data.q15Time = addData.q15Time;
      inputQ15Data.location = addData.location;
      inputQ15Data.activity = addData.activity;
      setInputQ15Data({ ...inputQ15Data });
    } else {
      if (calendarChange === 1) {
        inputQ15Data.q15Date = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 3);
      } else if (calendarChange === 2) {
        inputQ15Data.q15Date = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 2);
      } else if (calendarChange === 3) {
        inputQ15Data.q15Date = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate() - 1);
      } else if (calendarChange === 4) {
        inputQ15Data.q15Date = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), calendarDate.getDate());
      }
      inputQ15Data.q15Slot = event;
      inputQ15Data.q15Time = newString;
      inputQ15Data.location = "";
      inputQ15Data.activity = "";
      inputQ15Data.enteredBy = inputUserName;
      timeSlotSectionChange = event;
      setTimeSlotSectionChange(event);
      setInputQ15Data({ ...inputQ15Data });
    }
    window.localStorage.setItem("TIMESLOTCHANGE", timeSlotChange.toString());
    window.localStorage.setItem("Q15CALENDARCHANGE", calendarChange.toString());
    window.localStorage.setItem("Q15DATE", inputQ15Data.q15Date);

    if (inputUserName !== "") {
      setDisplayDialogQ15Data(true);
    } else {
      setDisplayDialogQ15Data(false);
    }
  }

  const handleQ15ClickChange = () => {
    window.localStorage.setItem("CREATEQ15", "Yes");

    setSpinner(true);
    inputQ15Data.pid = decryptPatientid;
    setInputQ15Data({ ...inputQ15Data });
    if(inputQ15Data.activity === "" && inputQ15Data.location === ""){
      alert("Some datas are missing");
    }else{
      dispatch(createQ15CONFIG(inputQ15Data));
      alert("Slot Created");
    }  
  }
  
    const handleClick = () => {

        if (patientVisitTab === 3 && vitalEvent === null) {
            //  console.log((vitalEvent));
            window.location.href = "/MettlerAddMultiVital/" + encryptPatientid + "/" + encryptVisitid;
        } else if (vitalEvent.data != "") {
            var CryptoJS = require("crypto-js");
            var encryptId = CryptoJS.AES.encrypt(vitalEvent.data.id, 'secret key 123');
            var setEncryptId = encodeURIComponent(encryptId.toString());
            var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
            var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
            var encryptPatientId = CryptoJS.AES.encrypt(vitalEvent.data.patientId, 'secret key 123');
            var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
            //  console.log((vitalEvent));
            window.location.href = "/MettlerAddMultiVital/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
        }
    }
    const [newDialog, setNewDialog] = useState(false);
    const [rowDataValue, setRowDataValue] = useState(null);
    const patientEditChange = (rowData) => {
        setNewDialog(true);
        setRowDataValue(rowData);
    }
    const dataAllergyEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => patientEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "36px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8 }} src={dotImage}></img></span>}</a>;
    }

    const onPatientVisitData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        var encryptPatientId = CryptoJS.AES.encrypt(rowData.patientId, 'secret key 123');
        var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
        window.location.href = "/MettlerAddAllergy/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const [newDialogs, setNewDialogs] = useState(false);
    const [rowDataValues, setRowDataValues] = useState(null);
    const patientProblemEditChange = (rowData) => {
        setNewDialogs(true);
        setRowDataValues(rowData);
    }
    const dataPatientProblemEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => patientProblemEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "52px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8 }} src={dotImage}></img></span>}</a>;
    }

    const onPatientProblemData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        var encryptPatientId = CryptoJS.AES.encrypt(rowData.patientId, 'secret key 123');
        var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
        window.location.href = "/MettlerAddPatientProblem/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
    }
    const [newDialogsimmu, setNewDialogsimmu] = useState(false);
    const [rowDataValuesimmu, setRowDataValuesimmu] = useState(null);
    const ImmunizationEditChange = (rowData) => {
        setNewDialogsimmu(true);
        setRowDataValuesimmu(rowData);
    }
    const dataImmunizationEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => ImmunizationEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "64px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "40px" }} src={dotImage}></img></span>}</a>;
    }
    const [newDialogslab, setNewDialogslab] = useState(false);
    const [rowDataValueslab, setRowDataValueslab] = useState(null);
    const LabEditChange = (rowData) => {
        setNewDialogslab(true);
        setRowDataValueslab(rowData);
    }
    const [newDialogsProcedure, setNewDialogsProcedure] = useState(false);
    const [rowDataValuesProcedure, setRowDataValuesProcedure] = useState(null);
    const ProcedureEditChange = (rowData) => {
        setNewDialogsProcedure(true);
        setRowDataValuesProcedure(rowData);
    }
    const dataProcedureEdit = (rowData) => {
        return <a style={{ cursor: 'pointer' }} onClick={() => ProcedureEditChange(rowData)}>{rowData.id != "" ? <><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "26px" }} src={dotImage}></img>
        </> : <span><img style={{ width: '20px', height: '20px', opacity: 0.8, position: "relative", left: "40px" }} src={dotImage}></img></span>}</a>;
    }
    const [newDialogsImagingProcedure, setNewDialogsImagingProcedure] = useState(false);
    const [rowDataValuesImagingProcedure, setRowDataValuesImagingProcedure] = useState(null);
    const ImagingProcedureEditChange = (rowData) => {
        setNewDialogsImagingProcedure(true);
        setRowDataValuesImagingProcedure(rowData);
    }
  

    const onImmunizationData = (rowData) => {
        var CryptoJS = require("crypto-js");
        var encryptId = CryptoJS.AES.encrypt(rowData.id, 'secret key 123');
        var setEncryptId = encodeURIComponent(encryptId.toString());
        var encryptVisitId = CryptoJS.AES.encrypt(decryptVisitid, 'secret key 123');
        var setEncryptVisitId = encodeURIComponent(encryptVisitId.toString());
        var encryptPatientId = CryptoJS.AES.encrypt(rowData.patientId, 'secret key 123');
        var setEncryptPatientId = encodeURIComponent(encryptPatientId.toString());
        window.location.href = "/MettlerAddPatientImmunization/" + setEncryptPatientId + "/" + setEncryptVisitId + "/" + setEncryptId;
    }

    const [isVisibled, setIsVisibled] = useState(false);
    const toggleVisibilitys = () => {
        setIsVisibled(true);
        if (isVisibled) {
            setIsVisibled(false);
        }

    }
    const [isVisibleds, setIsVisibleds] = useState(false);
    const toggleVisibilityss = () => {
        setIsVisibleds(true);
        if (isVisibleds) {
            setIsVisibleds(false);
        }
        handleMainChangeEvent(10);
    }
    const [isVisibledsf, setIsVisibledsf] = useState(false);
    const toggleVisibilityssf = () => {
        setIsVisibledsf(true);
        if (isVisibledsf) {
            setIsVisibledsf(false);
        }

    }

    const [isVisibledbcon, setIsVisibledbocn] = useState(false);
    const handleCheckboxChange = (event) => {
        setIsVisibledbocn(event.target.value === "true");
    }


    const handleInputAdmitChange = (event: any) => {
        if (event.target.name === "admissionType") {
            inputAdmitData.admissionType = event.target.value;
        } else if (event.target.name === "attendingPhysician") {
            inputAdmitData.attendingPhysician = event.target.value;
            inputFormData.assignedBy = event.target.value;
            setInputFormData({ ...inputFormData });
        } else if (event.target.name === "wardLocation") {
            inputAdmitData.wardLocation = event.target.value;
        } else if (event.target.name === "primaryPhysician") {
            inputAdmitData.primaryPhysician = event.target.value;
        } else if (event.target.name === "sourceOfAdmission") {
            inputAdmitData.sourceOfAdmission = event.target.value;
        } else if (event.target.id === "facilityTreatingSpeciality") {
            inputAdmitData.facilityTreatingSpeciality = event.target.value;
        } else if (event.target.id === "briefDescription") {
            inputAdmitData.briefDescription = event.target.value;
        } else if (event.target.id === "roomBed") {
            inputAdmitData.bedId = event.target.value;
        } else if (event.target.name === "trackingDevice") {
            inputAdmitData.trackingDevice = event.target.value;
        }

        setInputAdmitData({ ...inputAdmitData });
    }

    const handleInputTransferChange = (event: any) => {
        if (event.target.name === "wardLocation") {
            inputTransferData.wardLocation = event.target.value;
        } else if (event.target.name === "bedId") {
            inputTransferData.bedId = event.target.value;
        } else if (event.target.name === "typeOfTransfer") {
            inputTransferData.typeOfTransfer = event.target.value;
        } else if (event.target.id === "facilityTreatingSpeciality1") {
            inputTransferData.facilityTreatingSpeciality1 = event.target.value;
        } else if (event.target.id === "briefDescriptionTransfer") {
            inputTransferData.briefDescriptionTransfer = event.target.value;
        } else if (event.target.name === "attendingPhysician1") {
            inputTransferData.attendingPhysician1 = event.target.value;
        } else if (event.target.name === "primaryPhysician1") {
            inputTransferData.primaryPhysician1 = event.target.value;
        } else if (event.target.name === "transferedBy") {
            inputTransferData.transferedBy = event.target.value;
        }


        setInputTransferData({ ...inputTransferData })
    }
    const [isAdmitPatientLoaded, setAdmitPatientLoaded] = useState(false);

    if (!isAdmitPatientLoaded && !createPatientAdmitData.isLoading) {
        createPatientAdmitData.items.data.admissionDate = createPatientAdmitData.items.data.admissionDate !== null && createPatientAdmitData.items.data.admissionDate !== undefined ? new Date(moment(createPatientAdmitData.items.data.admissionDate, "YYYYMMDDHHmm").format("YYYY-MM-DDTHH:mm:ss.000Z")) : null;
        setInputAdmitData(createPatientAdmitData.items.data);
        if (createPatientAdmitData.items.message.code === "MHC - 0200") {
            alert(createPatientAdmitData.items.message.description);
            setTimeout(() => {
                window.location.href = "/MettlerVisitPatientdata/" + encryptPatientid + "/" + encryptPatientid;
                setSpinner(false);
            }, (1000));
            setAdmitPatientLoaded(true);
        } else {
            alert(createPatientAdmitData.items.message.description);
            setTimeout(() => {
                setAdmitPatientLoaded(false);
                setSpinner(false);
            }, (1000));
        }

    }
    if (!createPatientAdmitData && createPatientAdmitData.isFormSubmit) {

        setTimeout(() => {
            setAdmitPatientLoaded(false);
            setSpinner(false);
        }, (1000));
    }
   

    const handlePageSaveAdmitPatient = () => {
        inputAdmitData.admissionDate = moment(new Date()).format("YYYYMMDD");
        inputAdmitData.pid = decryptPatientid;
        inputAdmitData.lastVisit = decryptVisitid;
        setInputAdmitData({ ...inputAdmitData });
        setSpinner(true);
        console.log(JSON.stringify(inputAdmitData));
        if (inputAdmitData.trackingDevice === true && inputAdmitData.deviceId === "") {
            alert("Something wrong, beacon device has not registered. Please Check...");
        } else if (inputAdmitData.attendingPhysician === "" || inputAdmitData.bedId === "" || inputAdmitData.sourceOfAdmission === "" || inputAdmitData.primaryPhysician === "") {
            alert("Some datas are missing");
        } else {
            dispatch(createPatientAdmit(inputAdmitData));
        }

    }

    const handleTransferPageSave = () => {
        var newInputBedId = inputBedAllAssignData.filter(k => k.pid === decryptPatientid).filter(t1 => ({ ...t1, ...roomNumber.find(t2 => t2 !== t1.wardBedInfo.slice(2, 5)) }));
        console.log(JSON.stringify(inputBedAllAssignData.filter(k => k.pid === decryptPatientid).filter(t1 => ({ ...t1, ...roomNumber.find(t2 => t2 !== t1.wardBedInfo.slice(2, 5)) }))));
        setInputTransferData({ ...inputTransferData });
        var newBedData = displayBedAssignData.filter(k => k.bedNo === inputTransferData.bedId.slice(4, 6) && k.roomNo === inputTransferData.bedId.slice(0, 3));
        inputFormData.bedId = newBedData[0].id
        inputFormData.pid = decryptPatientid;     
        inputTransferData.transferedDate = moment(inputTransferData.transferedDate).format("YYYYMMDD");
        setInputFormData({ ...inputFormData });
        console.log(JSON.stringify(inputFormData));

        var confirmValue = window.confirm("Are you sure you want to transfer the patient");
        if (confirmValue && inputAdmitId !== "") {
            if (newInputBedId.length > 0) {
                dispatch(deleteBedAssign(newInputBedId[0].id));
                dispatch(createNewBedAssign(inputFormData));
            } if (inputAdmitId !== "") {
                var obj = {                    
                        "pid": decryptPatientid,
                        "admitId": inputAdmitId,
                        "wardLocation": inputTransferData.wardLocation,
                        "bedId": inputTransferData.bedId,
                        "typeOfTransfer": inputTransferData.typeOfTransfer,
                        "transferedDate": inputTransferData.transferedDate,
                        "transferedBy": inputTransferData.transferedBy,
                        "briefDescriptionTransfer": inputTransferData.briefDescriptionTransfer,
                        "attendingPhysician1": inputTransferData.attendingPhysician1,
                        "primaryPhysician1":  inputTransferData.primaryPhysician1,
                        "facilityTreatingSpeciality1":  inputTransferData.facilityTreatingSpeciality1,
                        "lastVisit": decryptVisitid                                   
                }
                var url = "/api/admit/transferPatient/" + inputAdmitId;
                HttpLogin.axios().post(url, obj, {
                    headers: {
                        'Content-Type': 'application/json',
                        "Access-Control-Allow-Origin": "*",
                        "Access-Control-Allow-Methods": "*",
                        "Access-Control-Allow-Headers": "*"
                    }
                })
                    .then(res => {
                        alert(res.data.message.description);
                        console.log("API Response in post " + JSON.stringify(res.data));
                        return res;
                    })
                    .catch((e: any) => {
                        alert(e.data.message.description);
                        //  console.log("Error in post " +JSON.stringify(e));
                        return e;
                    });
            }
        } else if (inputAdmitId === "") {
            alert("The patient admit data is missing");
        } else if(inputTransferData.typeOfTransfer === "" || inputTransferData.bedId || inputTransferData.transferedDate === null || inputTransferData.transferedDate === "" || inputTransferData.wardLocation === ""){
            alert("Please enter the given data");
        }

    }

    const handlePageSaveDischarge = () => {
        setInputDischargeData({ ...inputDischargeData });
        console.log(JSON.stringify(inputBedAllAssignData.filter(k => k.pid === decryptPatientid).filter(t1 => ({ ...t1, ...roomNumber.find(t2 => t2 !== t1.wardBedInfo.slice(2, 5)) }))));
        var newInputBedId = inputBedAllAssignData.filter(k => k.pid === decryptPatientid).filter(t1 => ({ ...t1, ...roomNumber.find(t2 => t2 !== t1.wardBedInfo.slice(2, 5)) }))
        inputDischargeData.dischargeDate = moment(inputDischargeData.dischargeDate).format("YYYYMMDD");
        var confirmValue = window.confirm("Are you sure you want to discharge the patient");
        if (confirmValue) {
              if (inputAdmitId === null || inputAdmitId === "" || inputAdmitId === undefined) {
                alert("This patient was not admitted");
            } else if (inputDischargeData.dischargeDate === null || inputDischargeData.dischargeDate === "" || inputDischargeData.dischargeBy === "" || inputDischargeData.dischargeType === "") {
                alert("Please enter the data");
            } else {
                var obj = {                                 
                    "pid": decryptPatientid,
                    "admitId": inputAdmitId,
                    "lastVisit": decryptVisitid,
                    "dischargeDate": inputDischargeData.dischargeDate,
                    "dischargeType": inputDischargeData.dischargeType,
                    "dischargeBy": inputDischargeData.dischargeBy,
                    "summaryOfCare": inputDischargeData.summaryOfCare                          
        }

        var url = "/api/admit/dischargePatient/" + inputAdmitId;
        HttpLogin.axios().post(url, obj, {
            headers: {
                'Content-Type': 'application/json',
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "*",
                "Access-Control-Allow-Headers": "*"
            }
        })
            .then(res => {
                alert(res.data.message.description);
                dispatch(deleteBedAssign(newInputBedId[0].id));
                console.log("API Response in post " + JSON.stringify(res.data));
                return res;
            })
            .catch((e: any) => {
                alert(e);
                //  console.log("Error in post " +JSON.stringify(e));
                return e;
            });
            }
        }
    }

    const handleInputChange = (event) => {
        if (event.target.name === "pid") {
            inputFormData.pid = event.target.value;
        }else if (event.target.name === "assignedBy") {
            inputFormData.assignedBy = event.target.value;
        }
        setInputFormData({ ...inputFormData });
    }

    const handleInputDischargeChange = (event:any) => {
        if (event.target.name === "dischargeType") {
            inputDischargeData.dischargeType = event.target.value;
        }else if (event.target.name === "dischargeBy") {
            inputDischargeData.dischargeBy = event.target.value;
        }else if (event.target.id === "summaryOfCare") {
            inputDischargeData.summaryOfCare = event.target.value;
        }

        setInputDischargeData({...inputDischargeData});
    }

    const handleCancelChange = () => {
        inputFormData.admitDate = null;
        inputFormData.assignedBy = "";
        inputFormData.pid = "";
        setInputFormData({ ...inputFormData });
        setBedAllocateDialog(false);
    }

    const handlePageSave = () => {
        inputFormData.bedId = inputBedId;
        setInputFormData({ ...inputFormData });

        // console.log(JSON.stringify(inputFormData));
        if (inputFormData.admitDate === null || inputFormData.admitDate === "" || inputFormData.assignedBy === "" || inputFormData.pid === "") {
            alert("Please Fill All the Data");
        } else if (inputBedId === "") {
            alert("Bed was not created properly");
        } else {
            alert("Bed Assign Created");
            dispatch(createNewBedAssign(inputFormData));
            setTimeout(() => {
                setBedAllocateDialog(false);
                window.location.reload();
            }, 3000)
        }
    }

    const handleBedMasterLink = () => {
        window.location.href = "/MettlerBedMasterConfiguration";
    }

    const handleClose = () => {
        setBedAllocateDialog(false);
    }

    const handleOccupiedClose = () => {
        setBedOccupiedDialog(false);
    }

    return (


        <div style={{ position: "relative", left: "241px", width: "calc(100% - 305px)" }}>

            <div>

                <div style={{ borderRadius: "14px", backgroundColor: "#FAFCFF", position: "absolute", top: "12px", width: "309px", height: patientMainChangeTab === 6 ? "1140px" : patientMainChangeTab === 5 ? "1058px" : "1041px", left: "-236px", display: "flex" }}>
                    <div style={{}}>
                        <a ><img onClick={toggleVisibility} style={{ width: '48px', height: '48px', position: 'relative', left: '32px', top: '34px', cursor: "pointer" }} src={AvatarBigImage}></img></a>
                        <div style={{ display: "flex", flexDirection: "column", left: "108px", position: 'absolute', top: "38px", gap: "5px" }}>
                            <span style={{ color: "#000000", font: "Poppins", fontWeight: "bold" }}>{inputPatientInfo}</span>
                            <span style={{ color: "#000000", fontWeight: "lighter" }}>{vitalsEnteredDate}</span>
                        </div>

                        <div style={{ display: "flex", flexDirection: "column", backgroundColor: patientMainChangeTab ? "" : "", position: "absolute", top: "131px", left: "26px", width: "249px", height: "52px", borderRadius: patientMainChangeTab ? "6px" : "" }}>
                            <div style={{ position: "relative", top: "-22px", backgroundColor: "#EFF4FF", height: "51px", width: "231px", borderRadius: "4px" }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => { handleMainChangeEvent(1) }}><img style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "19px", left: "7px" }} src={OverviewGroup}></img>
                                    <span style={{ position: "absolute", top: "15px", left: "38px", fontSize: "17px", color: "#3F3F46" }}>Overview</span></a>
                            </div>
                            <div style={{ position: "relative", top: isVisibledsf ? "-69px" : "-57px", cursor: "pointer" }} onClick={toggleVisibilityssf}>
                                <span style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "58px", left: "0px" }} ><i className="large material-icons">chevron_right</i></span>
                                <span style={{ top: "72px", position: "absolute", left: "40px", fontSize: "16px" }} onClick={() => { handleMainChangeEvent(4) }}>Patient ADT</span>
                            </div>
                            {isVisibledsf && (
                                < div style={{ position: "absolute", top: "-182px" }}>
                                    <a style={{ cursor: "pointer" }} ><div style={{ position: "absolute", top: "264px", left: '36px', /*backgroundColor: "",*/ width: "217px", height: "52px", borderRadius: "6px" }}>
                                        <img src={admitpatientGroup} style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "19px", left: "7px" }}></img>
                                        <span style={{ position: "absolute", top: "15px", left: "38px", fontSize: "17px", color: "#3F3F46" }} onClick={() => { handleMainChangeEvent(5) }}>Admit</span>
                                    </div></a>
                                    <a style={{ cursor: "pointer" }} ><div style={{ position: "absolute", top: "311px", left: '36px',/*backgroundColor: "",*/ width: "217px", height: "52px", borderRadius: "6px" }}>
                                        <img src={q15Group} style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "19px", left: "7px" }}></img>
                                        <span style={{ position: "absolute", top: "15px", left: "38px", fontSize: "17px", color: "#3F3F46" }} onClick={() => { handleMainChangeEvent(6) }}>Bed Assignment</span>
                                    </div></a>
                                    <div style={{ position: "absolute", top: "355px", left: '36px', width: "257px", height: "52px", borderRadius: "6px", cursor: "pointer" }}>
                                        <img src={q15Group} style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "19px", left: "7px" }}></img>
                                        <span style={{ position: "absolute", top: "15px", left: "38px", fontSize: "17px", color: "#3F3F46" }} onClick={() => { handleMainChangeEvent(7) }}>Transfer</span>
                                    </div>
                                    <div style={{ position: "absolute", top: "398px", left: '36px', width: "257px", height: "52px", borderRadius: "6px", cursor: "pointer" }}>
                                        <img src={q15Group} style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "19px", left: "7px" }}></img>
                                        <span style={{ position: "absolute", top: "15px", left: "38px", fontSize: "17px", color: "#3F3F46" }} onClick={() => { handleMainChangeEvent(8) }}>Discharge </span>
                                    </div>
                                </div>
                            )}
                            <div style={{ position: "relative", top: isVisibledsf ? "161px" : "5px" }}><a style={{cursor:'pointer'}} onClick={handleQ15Reports}>
                                <img style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "75px", left: "7px" }} src={q15Group}></img>
                                <span style={{ top: "72px", position: "absolute", left: "40px", fontSize: "16px" }}>Q-15 Form</span></a>
                            </div>
                            <div style={{ position: "relative", top: isVisibledsf ? "164px" : "0px" }}>
                                <img style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "129px", left: "7px" }} src={admitpatientGroup}></img>
                                <span style={{ top: "124px", position: "absolute", left: "40px", fontSize: "16px" }}>Admit Patient</span>
                            </div>

                            <div style={{ position: "relative", top: isVisibledsf ? "180px" : "12px" }}>
                                <a style={{ cursor: "pointer" }} onClick={toggleVisibilitys}> <span style={{ top: "172px", position: "absolute", left: "40px", fontSize: "16px" }} >Patient Data/Orders</span>
                                    <span style={{ position: "absolute", top: "171px", transform: isVisibled ? "rotate(90deg)" : "rotate(360deg)" }}><i className="large material-icons" >chevron_right</i></span></a>
                            </div>
                            {isVisibled && (
                                <>
                                    <div style={{ position: "relative", top: isVisibledsf ? "181px" : "18px" }}>
                                        <a style={{ cursor: 'pointer' }} onClick={() => { handleMainChangeEvent(2) }}><img style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "225px", left: "51px" }} src={Groupss}></img>
                                            <span style={{ top: "222px", position: "absolute", left: "74px", fontSize: "16px" }} >Patient Data</span></a>
                                    </div>
                                    <div style={{ position: "relative", top: isVisibledsf ? "179px" : "24px" }}>
                                        <a style={{ cursor: 'pointer' }} onClick={() => { handleMainChangeEvent(3) }}> <img style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "277px", left: "51px" }} src={Groupss}></img>
                                            <span style={{ top: "274px", position: "absolute", left: "74px", fontSize: "16px" }}>Orders</span></a>
                                    </div>
                                    <div style={{ position: "relative", top: isVisibledsf ? "180px" : "30px" }}>
                                        <img style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "327px", left: "51px" }} src={Groupss}></img>
                                        <span style={{ top: "324px", position: "absolute", left: "74px", fontSize: "16px" }} >Resulting</span>
                                    </div>
                                </>
                            )}
                            <div style={{ position: "relative" }}>
                                <div style={{ position: "relative", top: isVisibled ? "161px" : "-12px" }}>
                                    <div style={{ position: isVisibled ? 'relative' : 'relative', top: isVisibledsf ? "-63px" : "-261px" }}>
                                        <a style={{ cursor: "pointer" }} onClick={toggleVisibilityss}><span style={{ top: isVisibledsf ? "493px" : "507px", position: "absolute", transform: isVisibleds ? "rotate(90deg)" : "rotate(360deg)" }}><i className="large material-icons">chevron_right</i></span>
                                            <span style={{ top: isVisibledsf ? "493px" : "507px", position: "absolute", left: "41px", fontSize: "16px" }}>Treatment Plan</span></a>

                                    </div>
                                </div>
                            </div>
                            {isVisibleds && (
                                <>
                                    <div id="fis" style={{ position: "relative", top: isVisibledsf ? "189px" : "" }}>
                                        <div style={{ position: "relative", top: isVisibled ? "-229px" : "-231px" }}>
                                            < div style={{ position: "absolute", top: isVisibled ? "419px" : "243px" }}>
                                                <div style={{ position: "absolute", left: "20px", top: "267px" }}>
                                                    <input type="text" className="dashboard-search-text" id="new" name="new" placeholder="Search" style={{ paddingLeft: '36px', fontFamily: 'system-ui', position: 'relative', width: '165px', left: '17px' }} onChange={(e) => setSearchTerm(e.target.value)} />
                                                    <img src={searchImage} style={{ width: '20px', height: '20px', position: 'relative', left: '24px', top: '-25px', opacity: 0.3 }}></img>
                                                </div>
                                                {newTreatmentPlan.length > 0 && newTreatmentPlan.filter(name => name.toLowerCase().includes(searchTerm.toLowerCase()))
                                                    .map((name, index) => (
                                                        <a
                                                            key={index}
                                                            style={{ cursor: "pointer" }}
                                                            onClick={() => handleNewFormChange(name)}
                                                        >
                                                            <div
                                                                id="hover"
                                                                key={index}
                                                                style={{
                                                                    position: "absolute", top: `${311 + 60 * index}px`,
                                                                    left: '36px', transition: 'background-color 0.3s', width: "217px", height: "52px", borderRadius: "6px"
                                                                }}
                                                                onMouseEnter={handleMouseEnter}
                                                                onMouseLeave={handleMouseLeave}
                                                            >
                                                                <img src={Groupss} style={{ fontWeight: "bolder", color: "#000000", fontSize: "35px", position: "absolute", top: "19px", left: "7px" }}></img>
                                                                <span style={{ position: "absolute", top: "15px", left: "38px", fontSize: "17px" }}>
                                                                    {name}
                                                                </span>
                                                            </div>
                                                        </a>
                                                    ))
                                                }                                      
                                            </div>
                                        </div>
                                    </div>
                                </>
                            )}

                            <div style={{ position: "relative", top: isVisibled ? `${187 + newFormName.length * -1}px` : "" }}>
                                <div style={{ position: "relative", top: isVisibledsf ? `${181 + newFormName.length * 1}px` : "-13px" }}>
                                    <div style={{ position: 'absolute', top: isVisibleds ? `${240 + newFormName.length * 10}px` : "137px" }}>
                                        <span style={{ top: "162px", position: "absolute" }}>
                                            <i className="large material-icons">chevron_right</i>
                                        </span>
                                        <span style={{ top: "162px", position: "absolute", left: "41px", fontSize: "16px" }}>
                                            Reports
                                        </span>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>

            {patientMainChangeTab === 1 && <>

<div style={{ position: "absolute", left: "49px", top: "-73px", width: "calc(100% - -15px)", backgroundColor: "rgb(234 237 245)", height: "1289px", overflow: "hidden" }}>
    <div id="mettlerEmptyPadding" style={{ display: 'flex' }}>
        <div style={{ position: 'absolute', left: '18px', top: '103px', width: "274.974px", height: "171.763px" }} className="Patient-EHR-HeartRate">
            <div style={{ width: '30px', height: '30px', borderRadius: '10px', background: '#FF505A', position: 'relative', left: '20.67px', top: '19.77px' }}><img style={{ width: '24px', height: '24px', position: 'relative', left: '3px', top: '1.5px' }} src={cardioGramImage} /></div>
            <div style={{ position: 'relative', left: '57.67px', top: '-9.23px' }} className="Patient_EHR-HeartRateName">Heart Rate</div>
            <div style={{ position: 'relative', left: '20.67px', top: '-15px', fontSize: "19px" }} className="Patient-EHR-RateValue">110 bpm<img style={{ width: '162.455px', height: '112.421px', position: 'relative', top: '12.23px', left: "9.67px" }} src={beatShadowImage}></img></div>
            <img style={{ width: '18.207px', height: '10.207px', position: 'relative', top: '-42.39px', left: '20.67px' }} src={arrowUpRight}></img>
            <div style={{ position: 'relative', left: '48.67px', top: '-62.23px', fontSize: '14px' }} className="Patient_EHR-HeartRateName">22 bpm</div>
        </div>
        <div style={{ position: 'absolute', left: '303px', top: '102px', width: "274.974px", height: "171.763px" }} className="Patient-EHR-Temperature">
            <div style={{ width: '30px', height: '30px', borderRadius: '10px', background: '#6F52D2', position: 'relative', left: '20.67px', top: '19.77px' }}><img style={{ width: '24px', height: '24px', position: 'relative', left: '3px', top: '1.5px' }} src={cardioGramImage} /></div>
            <div style={{ position: 'relative', left: '57.67px', top: '-9.23px' }} className="Patient_EHR-HeartRateName">Temperature</div>
            <div style={{ position: 'relative', left: '20.67px', top: '-15px', fontSize: "19px" }} className="Patient-EHR-RateValue">99.4 °C<img style={{ width: '162.455px', height: '112.421px', position: 'relative', top: '12.23px', left: "21.67px" }} src={TemperaturImage}></img></div>
            <img style={{ width: '18.207px', height: '10.207px', position: 'relative', top: '-42.39px', left: '20.67px' }} src={arrowUpRight}></img>
            <div style={{ position: 'relative', left: '48.67px', top: '-62.23px', fontSize: '14px' }} className="Patient_EHR-HeartRateName">1.6 °C</div>
        </div>
        <div style={{ position: 'absolute', left: '589px', top: '102px', width: "274.974px", height: "171.763px" }} className="Patient-EHR-HeartRate">
            <div style={{ width: '30px', height: '30px', borderRadius: '10px', background: '#46C94D', position: 'relative', left: '20.67px', top: '19.77px' }}><img style={{ width: '24px', height: '24px', position: 'relative', left: '3px', top: '1.5px' }} src={cardioGramImage} /></div>
            <div style={{ position: 'relative', left: '57.67px', top: '-9.23px' }} className="Patient_EHR-HeartRateName">Blood Pressure</div>
            <div style={{ position: 'relative', left: '20.67px', top: '-15px', fontSize: "19px" }} className="Patient-EHR-RateValue">120/99<img style={{ width: '162.455px', height: '112.421px', position: 'relative', top: '12.23px', left: "21.67px" }} src={BpImage}></img></div>
            <img style={{ width: '16px', height: '16px', position: 'relative', top: '-42.39px', left: '20.67px' }} src={GrLikeImage}></img>
            <div style={{ position: 'relative', left: '48.67px', top: '-62.23px', fontSize: '14px' }} className="Patient_EHR-HeartRateName">22 bpm</div>
        </div>
        <div style={{ position: 'absolute', left: '874px', top: '102px', width: "274.974px", height: "171.763px" }} className="Patient-EHR-HeartRate">
            <div style={{ width: '30px', height: '30px', borderRadius: '10px', background: '#FDAB60', position: 'relative', left: '20.67px', top: '19.77px' }}><img style={{ width: '24px', height: '24px', position: 'relative', left: '3px', top: '1.5px' }} src={cardioGramImage} /></div>
            <div style={{ position: 'relative', left: '57.67px', top: '-9.23px' }} className="Patient_EHR-HeartRateName">Glucose</div>
            <div style={{ position: 'relative', left: '20.67px', top: '-15px', fontSize: "19px" }} className="Patient-EHR-RateValue">50 mg/dl<img style={{ width: '162.455px', height: '112.421px', position: 'relative', top: '12.23px', left: "9.67px" }} src={GlucoseImage}></img></div>
            <img style={{ width: '18.207px', height: '10.207px', position: 'relative', top: '-42.39px', left: '20.67px' }} src={downStrokeImage}></img>
            <div style={{ position: 'relative', left: '48.67px', top: '-62.23px', fontSize: '14px' }} className="Patient_EHR-HeartRateName">20 mg/dl</div>
        </div>

    </div>
    <div id="mettlerEmptyPadding" style={{ display: 'flex', width: "fit-content" }}>
        <div style={{ width: '341px', height: '241px', background: '#FFF', position: 'relative', left: '18px', top: '299px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '27px', top: '21px' }} className="patient-Q15-text">Active Orders</div>
            <div style={{ display: 'flex', flexDirection: 'column' }}>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '42.5px', fontSize: '16px', fontWeight: 400 }} className="patient-Q15-text">Order 1</div>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '70.5px', fontSize: '16px', fontWeight: 400 }} className="patient-Q15-text">Order 2</div>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '98.5px', fontSize: '16px', fontWeight: 400 }} className="patient-Q15-text">Order 3</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row' }} className="patient-ECG-Reading">
                <div style={{ position: 'relative', left: '27px', top: '125px' }}>View All</div>
                <div style={{ position: 'relative', left: '38px', top: '125px' }}>➜</div>
            </div>
        </div>
        <div style={{ width: '400px', height: '241px', background: '#FFF', position: 'relative', left: '30px', top: '300px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '27px', top: '21px' }} className="patient-Q15-text">Current lab Results</div>
            <div style={{ display: 'flex', flexDirection: 'column' }}>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '42.5px', fontSize: '16px', fontWeight: 400, display: 'flex', flexDirection: 'row' }} className="patient-Q15-text">
                    <div >Gonorrhea (urine)</div>
                    <div style={{ width: '8px', height: '8px', background: '#7DCF9E', position: 'relative', left: '22px', top: '7px' }}></div>
                    <div style={{ color: '#081529', position: 'relative', left: '30px', top: '0px', fontSize: '16px', fontWeight: 400 }}>Normal</div>
                </div>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '70.5px', fontSize: '16px', fontWeight: 400, display: 'flex', flexDirection: 'row' }} className="patient-Q15-text">
                    <div >Chlamydia (urine)</div>
                    <div style={{ width: '8px', height: '8px', background: '#7DCF9E', position: 'relative', left: '22px', top: '7px' }}></div>
                    <div style={{ color: '#081529', position: 'relative', left: '28px', top: '0px', fontSize: '16px', fontWeight: 400 }}>Normal</div>
                </div>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '98.5px', fontSize: '16px', fontWeight: 400, display: 'flex', flexDirection: 'row' }} className="patient-Q15-text">
                    <div >Pap IG, HPV-hr</div>
                    <div style={{ width: '8px', height: '8px', background: '#7DCF9E', position: 'relative', left: '54px', top: '7px' }}></div>
                    <div style={{ color: '#081529', position: 'relative', left: '62px', top: '0px', fontSize: '16px', fontWeight: 400 }}>Normal</div>
                </div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row' }} className="patient-ECG-Reading">
                <div style={{ position: 'relative', left: '27px', top: '125px' }}>View All</div>
                <div style={{ position: 'relative', left: '38px', top: '125px' }}>➜</div>
            </div>
        </div>
        <div style={{ display: 'flex', flexDirection: 'column' }}>
            <a style={{ cursor: 'pointer' }} onClick={handleQ15Reports}><div style={{ position: 'relative', left: '38px', top: '295px', borderRadius: '10px', width: "373px", height: "81px" }} className="patient-Q15-Width">
                <img style={{ width: '18px', height: '17.989px', position: 'relative', top: '24px', left: '18px' }} src={TimerImage}></img>
                <div style={{ position: 'relative', left: '47px', top: '4px' }} className="patient-Q15-text">Q-15 Form</div>
            </div></a>
        </div>
    </div>
    <div id="mettlerEmptyPadding" style={{ display: 'flex', width: "fit-content" }}>
        <div style={{ width: '234px', height: '333px', background: '#FFF', position: 'relative', left: '18px', top: '677px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '27px', top: '21px' }} className="patient-Q15-text">Allergies</div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '26px', height: '26px', position: 'relative', left: '27px', top: '46px', background: '#F8F7FD', borderRadius: '4px' }}></div>
                <img style={{ width: '20px', height: '20px', position: 'relative', top: '49.5px', left: '4px' }} src={WineImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '49px', fontSize: '16px', fontWeight: 400 }} className="patient-Q15-text">Wine</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row',position:"relative",top:"24px" }}>
                <div style={{ width: '26px', height: '26px', position: 'relative', left: '27px', top: '63px', background: '#F8F7FD', borderRadius: '4px' }}></div>
                <img style={{ width: '20px', height: '20px', position: 'relative', top: '66.5px', left: '4px' }} src={skinBondImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '66px', fontSize: '16px', fontWeight: 400 }} className="patient-Q15-text">Skin Bond</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row',position:"relative",top:"51px" }}>
                <div style={{ width: '26px', height: '26px', position: 'relative', left: '27px', top: '80px', background: '#F8F7FD', borderRadius: '4px' }}></div>
                <img style={{ width: '20px', height: '20px', position: 'relative', top: '83.5px', left: '4px' }} src={BoxOpenImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '83px', fontSize: '16px', fontWeight: 400 }} className="patient-Q15-text">Small Box</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row',position:"relative",top:"63px" }} className="patient-ECG-Reading">
                <div style={{ position: 'relative', left: '27px', top: '103px' }}>View All</div>
                <div style={{ position: 'relative', left: '38px', top: '103px' }}>➜</div>
            </div>
        </div>
        <div style={{ width: '754px', height: '322px', background: '#FFF', position: 'relative', left: '-214px', top: '319px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '27px', top: '21px' }} className="patient-Q15-text">Active Medication</div>
            <div style={{ display: 'flex', flexDirection: 'row' }} className="patient-ECG-Reading">
                <div style={{position:"relative",left:"173px",display:"flex"}}>
                <div style={{ position: 'relative', left: '460px', top: '0px' }}>View All</div>
                <div style={{ position: 'relative', left: '466px', top: '0px' }}>➜</div>
                </div>        
            </div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '149px', height: '5px', background: '#2E5DC0', position: 'relative', left: '28px', top: '14px', borderRadius: '10px' }}></div>
                <div style={{ width: '130px', height: '5px', background: '#BC81F2', position: 'relative', left: '26px', top: '14px', borderRadius: '10px' }}></div>
                <div style={{ width: '164px', height: '5px', background: '#29CC93', position: 'relative', left: '8px', top: '14px', borderRadius: '10px' }}></div>
                <div style={{ width: '128px', height: '5px', background: '#FFAF02', position: 'relative', left: '-14px', top: '14px', borderRadius: '10px' }}></div>
                <div style={{ width: '106px', height: '5px', background: '#DAE3F5', position: 'relative', left: '-24px', top: '14px', borderRadius: '10px' }}></div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '16px', height: '16px', background: '#FFAF02', position: 'relative', left: '28px', top: '37px', borderRadius: '2px' }}></div>
                <div style={{ position: 'relative', left: '39px', top: '34px', fontSize: '16px', color: 'rgba(0, 0, 0, 0.75)', fontWeight: 400 }} className="Patient-datatable-name">16 fr catheter</div>
                <div style={{ width: '88px', height: '24px', background: 'rgba(255, 175, 1, 0.36)', position: 'relative', left: '506px', top: '34px', borderRadius: '60px' }}>
                    <div style={{ position: 'relative', left: '12px', fontSize: '14px', color: '#FF6B00', opacity: 0.6 }} className="Patient-datatable-name">Pending</div>
                </div>
            </div>
            <div style={{  height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '43px', borderBottomStyle: 'dashed',width:"718px" }}></div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '16px', height: '16px', background: '#FFAF02', position: 'relative', left: '28px', top: '58px', borderRadius: '2px' }}></div>
                <div style={{ position: 'relative', left: '39px', top: '55px', fontSize: '16px', color: 'rgba(0, 0, 0, 0.75)', fontWeight: 400 }} className="Patient-datatable-name">Moist Bum 2*3in bad</div>
                <div style={{ width: '88px', height: '24px', background: 'rgba(255, 175, 1, 0.36)', position: 'relative', left: '444px', top: '55px', borderRadius: '60px' }}>
                    <div style={{ position: 'relative', left: '12px', fontSize: '14px', color: '#FF6B00', opacity: 0.6 }} className="Patient-datatable-name">Pending</div>
                </div>
            </div>
            <div style={{ height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '64px', borderBottomStyle: 'dashed',width:"718px" }}></div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '16px', height: '16px', background: '#FFAF02', position: 'relative', left: '28px', top: '79px', borderRadius: '2px' }}></div>
                <div style={{ position: 'relative', left: '39px', top: '76px', fontSize: '16px', color: 'rgba(0, 0, 0, 0.75)', fontWeight: 400 }} className="Patient-datatable-name">Mast, surgical cup shape</div>
                <div style={{ width: '88px', height: '24px', background: 'rgba(255, 175, 1, 0.36)', position: 'relative', left: '409px', top: '76px', borderRadius: '60px' }}>
                    <div style={{ position: 'relative', left: '12px', fontSize: '14px', color: '#FF6B00', opacity: 0.6 }} className="Patient-datatable-name">Pending</div>
                </div>
            </div>
            <div style={{  height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '85px', borderBottomStyle: 'dashed',width:"718px" }}></div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '16px', height: '16px', background: '#FFAF02', position: 'relative', left: '28px', top: '100px', borderRadius: '2px' }}></div>
                <div style={{ position: 'relative', left: '32px', top: '97px', color: 'rgba(0, 0, 0, 0.75)', fontWeight: 400 }} className="Patient-datatable-name">Sunitinib malate 12.5 mg cap</div>
                <div style={{ width: '88px', height: '24px', background: 'rgba(255, 175, 1, 0.36)', position: 'relative', left: '409px', top: '97px', borderRadius: '60px' }}>
                    <div style={{ position: 'relative', left: '12px', fontSize: '14px', color: '#FF6B00', opacity: 0.6 }} className="Patient-datatable-name">Pending</div>
                </div>
            </div>   
        </div>
        <div style={{ width: '370px', height: '498px', background: '#FFF', position: 'relative', left: '-205px', top: '145px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '15px', top: '35px', fontSize: '16px' }} className="patient-Q15-text">Upcoming Schedule</div>
            <div style={{ position: 'relative', left: '309px', top: '9px', display: 'flex' }} className="patient-schedule-button1"><div style={{ position: 'relative', left: '10px', top: '-1px', fontSize: '20px', color: '#FFF' }}>|</div><div style={{ position: 'relative', left: '-5px', top: '-8px', fontSize: '29px', color: '#FFF' }}>-</div><div style={{ position: 'relative', left: '-6px', top: '-8px', fontSize: '29px', color: '#FFF' }}>-</div></div>
            <div style={{ display: 'flex', flexDirection: 'row',justifyContent:"space-between",width:"calc(100% - 60px)" }}>
                <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarScheduleChange(1)}><div style={{ position: 'relative', left: '14px', top: '49px', width: "50px", height: "64px" }} className={calendarScheduleChange === 1 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '2px', top: '49px', width: "44px" }} className={calendarScheduleChange === 1 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                        <div style={{ position: 'relative', left: "10px", top: "-41px" }} className="patient-Q15-CalendarText">{firstDate}</div>
                        <div style={{ position: 'relative', left: '12px', top: '-36px', fontSize: '12px' }} className="patient-Q15-CalendarText">{firstDay}</div>
                    </div>
                </div></a>
                <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarScheduleChange(2)}><div style={{ position: 'relative', left: "23px", top: '49px', width: "50px", height: "64px" }} className={calendarScheduleChange === 2 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '1.5px', top: '49px', width: "44px" }} className={calendarScheduleChange === 2 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                        <div style={{ position: 'relative', left: "10px", top: "-41px" }} className="patient-Q15-CalendarText">{secondDate}</div>
                        <div style={{ position: 'relative', left: '12px', top: '-36px', fontSize: '12px' }} className="patient-Q15-CalendarText">{secondDay}</div>
                    </div>
                </div></a>
                <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarScheduleChange(3)}><div style={{ position: 'relative', left: "33px", top: '49px', width: "50px", height: "64px" }} className={calendarScheduleChange === 3 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '1.5px', top: '49px', width: "44px" }} className={calendarScheduleChange === 3 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                        <div style={{ position: 'relative', left: "10px", top: "-41px" }} className="patient-Q15-CalendarText">{thirdDate}</div>
                        <div style={{ position: 'relative', left: '12px', top: '-36px', fontSize: '12px' }} className="patient-Q15-CalendarText">{thirdDay}</div>
                    </div>
                </div></a>
                <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarScheduleChange(4)}><div style={{ position: 'relative', left: "43px", top: '49px', width: "50px", height: "64px" }} className={calendarScheduleChange === 4 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '1.5px', top: '49px', width: "44px" }} className={calendarScheduleChange === 4 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                        <div style={{ position: 'relative', left: "10px", top: "-41px" }} className="patient-Q15-CalendarText">{forthDate}</div>
                        <div style={{ position: 'relative', left: '12px', top: '-36px', fontSize: '12px' }} className="patient-Q15-CalendarText">{forthDay}</div>
                    </div>
                </div></a>
            </div>
           
            <div style={{ width: '326px', height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '139px', borderBottomStyle: 'dashed' }}></div>
            <div style={{ position: 'relative', left: '14px', top: '75px', display: 'flex', flexDirection: 'row', width: "230px" }} >
                <img style={{ width: '29.236px', height: '40px', position: 'relative', top: '18px', left: '26px' }} src={yogaImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '45px', top: '18px', fontSize: '16px' }} className="patient-Q15-text">Yoga</div>
                <div style={{ letterSpacing: '0.289px', opacity: 0.3, position: 'relative', left: '2px', top: '40px' }} className="cretePatient-GenderOrient">6:00 AM  -   7:00 AM </div>
            </div>
            <div style={{ width: '326px', height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '152px', borderBottomStyle: 'dashed' }}></div>
            <div style={{ position: 'relative', left: '14px', top: '91px', display: 'flex', flexDirection: 'row', width: "230px" }} >
                <img style={{ width: '29.236px', height: '40px', position: 'relative', top: '18px', left: '26px' }} src={doctorImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '45px', top: '18px', fontSize: '16px', whiteSpace: "nowrap" }} className="patient-Q15-text">General Checkup</div>
                <div style={{ letterSpacing: '0.289px', opacity: 0.3, position: 'relative', left: '-97px', top: '40px', whiteSpace: "nowrap" }} className="cretePatient-GenderOrient">8:00 AM  -   8:15 AM </div>
            </div>
            <div style={{ width: '326px', height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '167px', borderBottomStyle: 'dashed' }}></div>
            <div style={{ position: 'relative', left: '14px', top: '107px', display: 'flex', flexDirection: 'row', width: "230px" }}>
                <img style={{ width: '29.236px', height: '40px', position: 'relative', top: '18px', left: '26px' }} src={breakFastImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '45px', top: '18px', fontSize: '16px' }} className="patient-Q15-text">Breakfast</div>
                <div style={{ letterSpacing: '0.289px', opacity: 0.3, position: 'relative', left: '-33px', top: '40px', whiteSpace: "nowrap" }} className="cretePatient-GenderOrient">8:00 AM  -   8:15 AM </div>
            </div>
            <div style={{ width: '326px', height: '1px', color: '#A5A8C3', position: 'relative', left: '28px', top: '183px', borderBottomStyle: 'dashed' }}></div>
            <div style={{ position: 'relative', left: '14px', top: '123px', display: 'flex', flexDirection: 'row', width: "230px" }} >
                <img style={{ width: '29.236px', height: '40px', position: 'relative', top: '18px', left: '26px' }} src={doctorImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '45px', top: '18px', fontSize: '16px', whiteSpace: "nowrap" }} className="patient-Q15-text">General Checkup</div>
                <div style={{ letterSpacing: '0.289px', opacity: 0.3, position: 'relative', left: '-97px', top: '40px', whiteSpace: "nowrap" }} className="cretePatient-GenderOrient">8:00 AM  -   8:15 AM </div>
            </div>
            <div style={{ position: 'relative', left: '14px', top: '139px', display: 'flex', flexDirection: 'row', width: "230px" }} >
                <img style={{ width: '29.236px', height: '40px', position: 'relative', top: '18px', left: '26px' }} src={breakFastImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '45px', top: '18px', fontSize: '16px' }} className="patient-Q15-text">Breakfast</div>
                <div style={{ letterSpacing: '0.289px', opacity: 0.3, position: 'relative', left: '-33px', top: '40px', whiteSpace: "nowrap" }} className="cretePatient-GenderOrient">8:00 AM  -   8:15 AM </div>
            </div>
        </div>
    </div>
    <div id="mettlerEmptyPadding" style={{ display: 'flex', width: "fit-content" }}>
        <div style={{ width: '490px', height: '325px', background: '#FFF', position: 'relative', left: '274px', top: '182px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '27px', top: '21px' }} className="patient-Q15-text">Active Problems</div>
            <div style={{ display: 'flex', flexDirection: 'row' }}>
                <div style={{ width: '26px', height: '26px', position: 'relative', left: '27px', top: '46px', background: '#F8F7FD', borderRadius: '4px' }}></div>
                <img style={{ width: '20px', height: '20px', position: 'relative', top: '49.5px', left: '4px' }} src={WineImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '49px', fontSize: '14px', fontWeight: 400 }} className="patient-Q15-text">$ Elevated Blood-pressure reading ,without</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row',position:"relative",top:"23px"  }}>
                <div style={{ width: '26px', height: '26px', position: 'relative', left: '27px', top: '63px', background: '#F8F7FD', borderRadius: '4px' }}></div>
                <img style={{ width: '20px', height: '20px', position: 'relative', top: '66.5px', left: '4px' }} src={WineImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '66px', fontSize: '14px', fontWeight: 400 }} className="patient-Q15-text">$ Elevated Blood-pressure reading ,without</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row',position:"relative",top:"46px"  }}>
                <div style={{ width: '26px', height: '26px', position: 'relative', left: '27px', top: '80px', background: '#F8F7FD', borderRadius: '4px' }}></div>
                <img style={{ width: '20px', height: '20px', position: 'relative', top: '83.5px', left: '4px' }} src={WineImage}></img>
                <div style={{ color: '#081529', position: 'relative', left: '27px', top: '83px', fontSize: '14px', fontWeight: 400 }} className="patient-Q15-text">$ Iron deficiency Anemia secondary toblood</div>
            </div>
            <div style={{ display: 'flex', flexDirection: 'row',position:"relative",top:"59px"  }} className="patient-ECG-Reading">
                <div style={{ position: 'relative', left: '27px', top: '103px' }}>View All</div>
                <div style={{ position: 'relative', left: '38px', top: '103px' }}>➜</div>
            </div>
        </div>
        <div style={{ width: '368px', height: '328px', background: '#FFF', position: 'relative', left: '298px', top: '179px', borderRadius: '10px' }}>
            <div style={{ color: '#081529', position: 'relative', left: '117px', top: '21px' }} className="patient-Q15-text">Daily Progress</div>
            <div style={{ display: 'flex', flexDirection: 'column' }} >
                <img style={{ width: '233px', height: '195px', position: 'relative', top: '38px', left: '67px' }} src={dailyProgressImage}></img>
                <img style={{ width: '233px', height: '195px', position: 'relative', top: '-156.5px', left: '67px' }} src={dailyProgressAdjustImage}></img>
                <div style={{ position: 'relative', left: '2px', top: '-262px' }} className="patient-dailyProgress-Text">78%</div>
                <div style={{ position: 'relative', left: '3px', top: '-169px', color: '#081529', fontSize: '17px', opacity: 0.4, textAlignLast: 'center' }} className="patient-Q15-text">Keep improving the <br />quality of your health</div>
            </div>
        </div>
    </div>
</div>


</>}
            {patientMainChangeTab === 2 && <>
                <div style={{ top: "6px", background: decryptPatientid != "" ? '#2D56AD' : "#FFF", height: decryptPatientid != "" ? '98px' : '0px', display: 'flex', width: 'calc(100% - 0px)', position: 'absolute', left: "74px" }} >
                    {decryptPatientid && <>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-1">
                            <img style={{ width: '60px', height: '60px', position: 'relative', left: '21px', top: '23px', borderRadius: patientImage !== "" ? "30px" : "" }} src={patientImage !== "" ? patientImage : AvatarBigImage}></img>
                        </div>
                        <div id="mettlerEmptyPadding" style={{ display: 'flex', flexDirection: 'column' }} className="p-col-12 p-md-6">
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '19px', minWidth: 'max-content', fontSize: '18px' }} className="App-TopBar-PatientName">{inputPatientInfo}</div>
                                <div style={{ position: 'relative', top: '23px', left: '6px', minWidth: 'max-content', fontSize: '14px' }} className="App-TopBar-PatientAge">{patientAge} Years</div>

                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', background: '#5574B7', border: '1px solid #5574B7', position: 'relative', top: '19px', left: '23px' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">SS#:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">SS-{patientSSN}</div>
                                </div>
                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', position: 'relative', left: '40px', top: '19px', background: '#5574B7', border: '1px solid #5574B7' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">MR:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">MR-345</div>
                                </div>
                            </div>
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '32px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '8px', left: '5px', fontSize: '10px' }} src={bloodBag}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '1px', fontSize: '10px' }} className="App-TopBar-BloodName">Blood</span>
                                    <span style={{ position: 'relative', top: '14px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">A</span><span style={{ position: 'relative', top: '13px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">+</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px', fontSize: '10px' }} src={bloodDrop}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '5px', fontSize: '10px' }} className="App-TopBar-BloodName">Height</span>
                                    <span style={{ position: 'relative', top: '18px', left: '-25px', fontSize: '12px', width: '30px' }} className="App-TopBar-PatientValue">--</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNew}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '8px', fontSize: '10px' }} className="App-TopBar-BloodName">Weight</span>
                                    <span style={{ position: 'relative', top: '23px', left: '-29px', fontSize: '12px' }} className="App-TopBar-PatientValue">45kg</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNewOne}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '9px', fontSize: '10px' }} className="App-TopBar-BloodName">DOB</span>
                                    <span style={{ position: 'relative', top: '22px', left: '-13px', fontSize: '12px', width: '75px' }} className="App-TopBar-PatientValue">{patientDateOfBirth}</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '10px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={AvatarDoctorImage}></img>
                                    <span style={{ fontSize: '16px', position: 'relative', top: '11px', left: '13px', width: '200px' }} className="App-TopBar-PatientValue">Dr. Linda Blair, OP</span>
                                </div>
                            </div>
                        </div>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-5">  </div>
                    </>}
                </div>
                <div className="spAssignment-details-child" style={{ position: 'absolute', top: "106px", left: '288px', height: patientVisitTab === 1 || patientVisitTab === 0 ? '1561px' : '-webkit-fill-available' }} />
                <div style={{ position: "absolute", top: "123.5px", left: "85px", fontWeight: "bold", fontSize: "18px" }}>Patient Data</div>
                <div className="psaAssignment-details-child2" style={{ position: "absolute", width: "calc(100% - 13px)", top: "156.5px", right: "210.5px", left: "85px", borderTop: "1px solid var(--color-gainsboro-100)", height: "1px" }} />
                <div className="psaAssignment-details-child2" style={{ position: "absolute", width: "calc(100% - 13px)", top: "198px", right: "210.5px", left: "85px", borderTop: "1px solid var(--color-gainsboro-100)", height: "1px" }} />
                <div style={{ position: "absolute", width: "calc(100% - 339px)", top: "167px", right: "925px", left: "85px", height: "24px" }}>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 1 || patientVisitTab === 0 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(1)}><div style={{ position: "absolute", fontWeight: "bold" }}>Allergy</div></a>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 2 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(2)}><div style={{ position: "absolute", left: "86px", fontWeight: "bold" }}>Patient Problem</div></a>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 3 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(3)}><div style={{ position: "absolute", left: "224px", fontWeight: "bold" }}>Patient Vitals</div></a>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 4 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(4)}><div style={{ position: "absolute", left: "345px", fontWeight: "bold" }}>Immunization</div></a>

                    <span style={{ width: '1px', height: '20px', color: '#BBC5CE', position: 'relative', left: '241px', top: '-23px', borderLeftStyle: 'groove' }}></span>
                    <a style={{ cursor: 'pointer' }}><img src={switchVertical} style={{ width: '24px', height: '24px', position: 'relative', left: '511px', top: '-46px' }}></img></a>
                    <img src={filterList} style={{ width: '24px', height: '24px', position: 'relative', left: '529px', top: '-48px' }}></img>
                    <a style={{ cursor: 'pointer' }} onClick={handleClickChange}>
                        <img onClick={Visibility} src={addSymbol} style={{ width: '24px', height: '24px', position: 'relative', left: '543px', top: '-48px' }}>
                        </img></a>
                    <input type="text" className="dashboard-search-text" id="new" name="new" placeholder="Search" style={{ paddingLeft: '36px', top: '-46px', fontFamily: 'system-ui', position: 'relative', width: '165px', left: '552px' }} />
                    <img src={searchImage} style={{ width: '20x', height: '20px', position: 'relative', left: '391px', top: '-48px', opacity: 0.3 }}></img>

                </div>
                {isVisibles && patientVisitTab === 3 && (
                    <div style={{ borderRadius: "5px", height: "101px", position: "relative", top: "146px", left: "501px", zIndex: 1, width: "215px", backgroundColor: "white", boxShadow: " -2px 6px 11px #888895" }}>
                        <div onClick={handleClickChanges} style={{ cursor: 'pointer', position: "absolute", top: "21px", left: "25px", fontWeight: 600, fontSize: "14px" }}>Add Patient Vital</div>
                        <div onClick={handleClick} style={{ cursor: 'pointer', position: "absolute", top: "60px", left: "25px", fontWeight: 600, fontSize: "14px" }}>Add Patient Multi Vital</div>
                    </div>
                )}
                {((patientVisitTab === 1 || patientVisitTab === 0) && <div style={{ position: "absolute", top: "198px", left: "82px", backgroundColor: "var(--color-darkslateblue-200)", width: "57px", height: "2px" }} />)}
                {(patientVisitTab === 2 && <div style={{ position: "absolute", top: "198px", left: "170px", backgroundColor: "var(--color-darkslateblue-200)", width: "118px", height: "2px" }} />)}
                {(patientVisitTab === 3 && <div style={{ position: "absolute", top: "198px", left: "314px", backgroundColor: "var(--color-darkslateblue-200)", width: "87px", height: "2px" }} />)}
                {(patientVisitTab === 4 && <div style={{ position: "absolute", top: "198px", left: "429px", backgroundColor: "var(--color-darkslateblue-200)", width: "105px", height: "2px" }} />)}

                {((patientVisitTab === 1 || patientVisitTab === 0) && <div style={{ position: 'absolute', top: '325px', left: '76px', width: 'calc(100% - 12px)' }}>


                    <DataTable style={{ border: '0px', top: "-110px", }}
                        value={allergyTableData}
                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ width: '4%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500, position: 'relative', left: '5px' }} style={{ borderLeft: '0px', borderRight: '0px', width: '4%', background: '#FFF' }}></Column>
                        <Column field="enteredDate" header="Enter date & Time" headerStyle={{ whiteSpace: "nowrap", width: '12%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500, }} style={{ borderLeft: '0px', borderRight: '0px', height: "52px", width: '29%', background: '#FFF' }} body={enterDateAndTime} />
                        <Column field="causativeAgentName" header="Allergy Name" headerStyle={{ left: "56px", position: "relative", width: '14%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '22%', background: '#FFF' }} />
                        <Column field="physicianName" header="Physician Name" headerStyle={{ left: "66px", position: "relative", whiteSpace: "nowrap", width: '8%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '22%', background: '#FFF', position: "relative", left: "-32px" }} body={dataphysicianName} />
                        <Column field="natureOfReaction" header="Reaction" headerStyle={{ left: "94px", position: "relative", width: '16%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '5%', background: '#FFF', position: "relative", left: '-3px' }} body={Reaction} />
                        <Column field="observedDetails.reactionDateTime" header="Reaction Date & Time" headerStyle={{ left: "76px", whiteSpace: "nowrap", position: "relative", screenLeft: "-3px", width: '17%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ position: "relative", left: "26px", borderLeft: '0px', borderRight: '0px', width: '26%', background: '#FFF' }} body={ReactionDateAndTime} />
                        <Column field="allergySeverity" header="Severity" headerStyle={{ width: '15%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500, position: 'relative', left: '92px' }} style={{ borderLeft: '0px', borderRight: '0px', width: '15%', background: '#FFF', position: "relative", left: "43px" }} body={dataAllergySeverity}/>
                        <Column field="" header="" headerStyle={{ width: '15%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500, position: 'relative', left: '99px' }} style={{ borderLeft: '0px', borderRight: '0px', width: '15%', background: '#FFF' }} body={dataAllergyEdit} />

                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '150px' } }}
                        open={newDialog}
                        onClose={() => setNewDialog(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onPatientVisitData(rowDataValue)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Allergy</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectData(rowDataValue)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Allergy</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>)}


                {(patientVisitTab === 2 && <div style={{ position: 'absolute', top: '325px', left: '9px', width: 'calc(100% - 14px)', lineHeight: 2.5 }}>
                    <div className="admit-patient-dropdown">

                    </div>
                    <DataTable style={{ border: '0px', top: "-110px", left: "69px" }}
                        value={problemTableData}
                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ left: "4px", width: '4%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500, position: 'relative' }} style={{ borderLeft: '0px', borderRight: '0px', width: '5%', background: '#FFF' }}></Column>
                        <Column field="dateOfOnset" header="Onset Date" headerStyle={{ left: "11px", position: "relative", width: '10%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '23%', background: '#FFF' }} body={dataOnsetDate} />
                        <Column field="problemDescription" header="Description" headerStyle={{ left: "55px", position: "relative", width: '14%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ position: "relative", left: "43px", borderLeft: '0px', borderRight: '0px', width: '26%', background: '#FFF' }} body={dataProblemDescription}/>
                        <Column field="" header="ICD Code" headerStyle={{ whiteSpace: "nowrap", position: "relative", left: "118px", width: '8%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '24%', background: '#FFF' }} />
                        <Column field="id" header="Entered by" headerStyle={{ left: "171px", position: "relative", width: '16%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ position: "relative", left: "61px", borderLeft: '0px', borderRight: '0px', width: '29%', background: '#FFF' }} body={dataSelectedPatientName} />
                        <Column field="problemStatus" header="Status" headerStyle={{ left: "169px", position: "relative", width: '17%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '16%', background: '#FFF', left: "94px", position: "relative" }} body={dataStatus}/>
                        <Column field="" header="" headerStyle={{ left: "109px", position: "relative", width: '17%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '18%', background: '#FFF' }} body={dataPatientProblemEdit} />
                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '190px' } }}
                        open={newDialogs}
                        onClose={() => setNewDialogs(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onPatientProblemData(rowDataValues)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Patient Problem</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectDatas(rowDataValues)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Patient Problem</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>)}
                {(patientVisitTab === 3 && <div style={{ position: 'absolute', top: '325px', left: '9px', width: 'calc(100% - 14px)' }}>

                    <div>

                        <div style={{ position: "absolute", display: "flex", left: "74px", top: '-120px', gap: "87px", backgroundColor: "#F2F4F9", width: "calc(100% - 15px)", height: "48px", borderBottom: "2px solid rgb(223, 226, 228)" }}>


                            <FormControlLabel
                                style={{ position: "relative", left: "11px" }}
                                label=""
                                labelPlacement="end"
                                control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                            />


                            <div style={{ color: "#9DA1C3", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 500, lineHeight: "3.5", position: "absolute", left: "48px", height: "" }}>Vital Type</div>
                            <div style={{ color: "#9DA1C3", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 500, lineHeight: "3.5", position: "relative", left: "84px", height: "" }}>Entered Date</div>
                            <div style={{ color: "#9DA1C3", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 500, lineHeight: "3.5", position: "relative", left: "59px", height: "" }}>Value</div>
                            <div style={{ color: "#9DA1C3", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 500, lineHeight: "3.5", position: "relative", left: "13px", height: "" }}>Unit</div>
                            <div style={{ color: "#9DA1C3", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 500, lineHeight: "3.5", position: "relative", left: "-37px", height: "" }}>Qualifiers</div>
                            <div style={{ color: "#9DA1C3", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 500, lineHeight: "3.5", position: "relative", left: "22px", height: "" }}>Status</div>
                        </div>

                        {vitalsTableData !== undefined && vitalsTableData !== null ? <>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.bodyTemperature.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "52px", left: "74px", top: "-72px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.bodyTemperature !== undefined && vitalsTableData.bodyTemperature !== null ? vitalsTableData.bodyTemperature.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "124px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.bodyTemperature !== undefined && vitalsTableData.bodyTemperature !== null ? vitalsTableData.bodyTemperature.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.bodyTemperature !== undefined && vitalsTableData.bodyTemperature !== null ? vitalsTableData.bodyTemperature.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "12px", left: "517px", }}><span style={{ display: "flex", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.bodyTemperature !== null && vitalsTableData.bodyTemperature !== undefined ? (vitalsTableData.bodyTemperature.btQualifiers.location !== null && vitalsTableData.bodyTemperature.btQualifiers.location !== "" ? vitalsTableData.bodyTemperature.btQualifiers.location : "") : "--"}</span></div>

                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "15px", left: "522px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "531px", top: "16px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.pulseRate.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "90px", left: "74px", top: "-20px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? vitalsTableData.pulseRate.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "144px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? vitalsTableData.pulseRate.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? vitalsTableData.pulseRate.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "12px", left: "517px", }}><div style={{ position: "relative", top: "-8px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? (vitalsTableData.pulseRate.prQualifiers.location !== null && vitalsTableData.pulseRate.prQualifiers.location !== "" ? vitalsTableData.pulseRate.prQualifiers.location + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "-5px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? (vitalsTableData.pulseRate.prQualifiers.method !== null && vitalsTableData.pulseRate.prQualifiers.method !== "" ? vitalsTableData.pulseRate.prQualifiers.method + ", " : "--, ") : "--, "}</div>    <div style={{ position: "relative", top: "-2px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}> {vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? (vitalsTableData.pulseRate.prQualifiers.position !== null && vitalsTableData.pulseRate.prQualifiers.position !== "" ? vitalsTableData.pulseRate.prQualifiers.position + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "-2px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseRate !== null && vitalsTableData.pulseRate !== undefined ? (vitalsTableData.pulseRate.prQualifiers.site !== null && vitalsTableData.pulseRate.prQualifiers.site !== "" ? vitalsTableData.pulseRate.prQualifiers.site : "--") : "--"}</div>
                                        <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "-54px", left: "204px" }}>
                                            <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                        </div>
                                        <img style={{ position: "relative", left: "291px", top: "-76px", height: "20px" }} src={dotsvertical}></img>
                                    </div>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.heartRate.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "52px", left: "74px", top: "70px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.heartRate !== null && vitalsTableData.heartRate !== undefined ? vitalsTableData.heartRate.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "142px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.heartRate !== null && vitalsTableData.heartRate !== undefined ? vitalsTableData.heartRate.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.heartRate !== null && vitalsTableData.heartRate !== undefined ? vitalsTableData.heartRate.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><span style={{ whiteSpace: "nowrap", position: "relative", top: "11px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.heartRate !== null && vitalsTableData.heartRate !== undefined ? (vitalsTableData.heartRate.hrQualifiers.location !== null && vitalsTableData.heartRate.hrQualifiers.location !== "" ? vitalsTableData.heartRate.hrQualifiers.location : "--") : "--"}</span></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#9CA1BA", height: "24px", width: "75px", top: "15px", left: "541px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#9CA1BA" }}>Inactive</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "550px", top: "16px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.respirationRate.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "63px", left: "74px", top: "122px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.respirationRate !== undefined && vitalsTableData.respirationRate !== null ? vitalsTableData.respirationRate.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "136px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.respirationRate !== undefined && vitalsTableData.respirationRate !== null ? vitalsTableData.respirationRate.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.respirationRate !== undefined && vitalsTableData.respirationRate !== null ? vitalsTableData.respirationRate.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><div style={{ whiteSpace: "nowrap", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.respirationRate !== undefined && vitalsTableData.respirationRate !== null ? (vitalsTableData.respirationRate.rrQualifiers.method !== null && vitalsTableData.respirationRate.rrQualifiers.method !== "" ? vitalsTableData.respirationRate.rrQualifiers.method + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "12px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.respirationRate !== undefined && vitalsTableData.respirationRate !== null ? (vitalsTableData.respirationRate.rrQualifiers.position !== null && vitalsTableData.respirationRate.rrQualifiers.position !== "" ? "Test" : "--") : "--"}</div>
                                    </div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#9CA1BA", height: "24px", width: "75px", top: "19px", left: "535px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#9CA1BA" }}>Inactive</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "544px", top: "19px" }} src={dotsvertical}></img></a>
                                </div>

                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.bloodPressure.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "82px", left: "74px", top: "185px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.bloodPressure !== undefined && vitalsTableData.bloodPressure !== null ? vitalsTableData.bloodPressure.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "112px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.bloodPressure !== undefined && vitalsTableData.bloodPressure !== null ? vitalsTableData.bloodPressure.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.bloodPressure !== undefined && vitalsTableData.bloodPressure !== null ? vitalsTableData.bloodPressure.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><div style={{ fontWeight: 400, color: "#000000", fontFamily: "poppins" }} >{vitalsTableData.bloodPressure !== undefined && vitalsTableData.bloodPressure !== null ? (vitalsTableData.bloodPressure.bpQualifiers.cuffSize !== null && vitalsTableData.bloodPressure.bpQualifiers.cuffSize !== "" ? vitalsTableData.bloodPressure.bpQualifiers.cuffSize + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "9px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.bloodPressure !== undefined && vitalsTableData.bloodPressure !== null ? (vitalsTableData.bloodPressure.bpQualifiers.method !== null && vitalsTableData.bloodPressure.bpQualifiers.method !== "" ? vitalsTableData.bloodPressure.bpQualifiers.method + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "18px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.bloodPressure !== undefined && vitalsTableData.bloodPressure !== null ? (vitalsTableData.bloodPressure.bpQualifiers.position !== null && vitalsTableData.bloodPressure.bpQualifiers.position !== "" ? vitalsTableData.bloodPressure.bpQualifiers.position : "--") : "--"}</div>
                                    </div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "28px", left: "510px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "518px", top: "31px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.bloodOxygen.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "52px", left: "74px", top: "267px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.bloodOxygen !== undefined && vitalsTableData.bloodOxygen !== null ? vitalsTableData.bloodOxygen.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "119px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.bloodOxygen !== undefined && vitalsTableData.bloodOxygen !== null ? vitalsTableData.bloodOxygen.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.bloodOxygen !== undefined && vitalsTableData.bloodOxygen !== null ? vitalsTableData.bloodOxygen.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "12px", left: "517px", }}><span style={{ fontWeight: 400, color: "#000000", fontFamily: "poppins" }} >{vitalsTableData.bloodOxygen !== undefined && vitalsTableData.bloodOxygen !== null ? (vitalsTableData.bloodOxygen.boQualifiers.method !== null && vitalsTableData.bloodOxygen.boQualifiers.method !== "" ? vitalsTableData.bloodOxygen.boQualifiers.method : "--") : "--"}</span></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "15px", left: "517px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "523px", top: "18px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.weight.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "64px", left: "74px", top: "319px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.weight !== undefined && vitalsTableData.weight !== null ? vitalsTableData.weight.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "167px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.weight !== undefined && vitalsTableData.weight !== null ? vitalsTableData.weight.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.weight !== undefined && vitalsTableData.weight !== null ? vitalsTableData.weight.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><div style={{ fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.weight !== undefined && vitalsTableData.weight !== null ? (vitalsTableData.weight.wqualifiers.method !== null && vitalsTableData.weight.wqualifiers.method !== "" ? vitalsTableData.weight.wqualifiers.method + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "14px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.weight !== undefined && vitalsTableData.weight !== null ? (vitalsTableData.weight.wqualifiers.quality !== null && vitalsTableData.weight.wqualifiers.quality !== "" ? vitalsTableData.weight.wqualifiers.quality : "--") : "--"}</div></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#9CA1BA", height: "24px", width: "75px", top: "15px", left: "564px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#9CA1BA" }}>Inactive</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "572px", top: "16px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.height.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "52px", left: "74px", top: "383px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.height !== undefined && vitalsTableData.height !== null ? vitalsTableData.height.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "169px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.height !== undefined && vitalsTableData.height !== null ? vitalsTableData.height.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.height !== undefined && vitalsTableData.height !== null ? vitalsTableData.height.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "12px", left: "517px", }}><span style={{ whiteSpace: "nowrap", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.height !== undefined && vitalsTableData.height !== null ? (vitalsTableData.height.hqualifiers.quality !== null && vitalsTableData.height.hqualifiers.quality !== "" ? vitalsTableData.height.hqualifiers.quality : "--") : "--"}</span></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "13px", left: "568px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "577px", top: "13px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.bloodGlucoseLevel.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "77px", left: "74px", top: "435px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.bloodGlucoseLevel !== undefined && vitalsTableData.bloodGlucoseLevel !== null ? vitalsTableData.bloodGlucoseLevel.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "113px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.bloodGlucoseLevel !== undefined && vitalsTableData.bloodGlucoseLevel !== null ? vitalsTableData.bloodGlucoseLevel.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.bloodGlucoseLevel !== undefined && vitalsTableData.bloodGlucoseLevel !== null ? vitalsTableData.bloodGlucoseLevel.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><div style={{ whiteSpace: "nowrap", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.bloodGlucoseLevel !== undefined && vitalsTableData.bloodGlucoseLevel !== null ? (vitalsTableData.bloodGlucoseLevel.bgQualifiers.location !== null && vitalsTableData.bloodGlucoseLevel.bgQualifiers.location !== "" ? vitalsTableData.bloodGlucoseLevel.bgQualifiers.location + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "6px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.bloodGlucoseLevel !== undefined && vitalsTableData.bloodGlucoseLevel !== null ? (vitalsTableData.bloodGlucoseLevel.bgQualifiers.position !== null && vitalsTableData.bloodGlucoseLevel.bgQualifiers.position !== "" ? vitalsTableData.bloodGlucoseLevel.bgQualifiers.position + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "12px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.bloodGlucoseLevel !== undefined && vitalsTableData.bloodGlucoseLevel !== null ? (vitalsTableData.bloodGlucoseLevel.bgQualifiers.quality !== null && vitalsTableData.bloodGlucoseLevel.bgQualifiers.quality !== "" ? vitalsTableData.bloodGlucoseLevel.bgQualifiers.quality : "--") : "--, "}</div></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "25px", left: "512px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "522px", top: "25px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.circumferenceOrGirth.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "64px", left: "74px", top: "564px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.circumferenceOrGirth !== undefined && vitalsTableData.circumferenceOrGirth !== null ? vitalsTableData.circumferenceOrGirth.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "70px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.circumferenceOrGirth !== undefined && vitalsTableData.circumferenceOrGirth !== null ? vitalsTableData.circumferenceOrGirth.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.circumferenceOrGirth !== undefined && vitalsTableData.circumferenceOrGirth !== null ? vitalsTableData.circumferenceOrGirth.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><div style={{ fontWeight: 400, color: "#000000", fontFamily: "poppins" }} >{vitalsTableData.circumferenceOrGirth !== undefined && vitalsTableData.circumferenceOrGirth !== null ? (vitalsTableData.circumferenceOrGirth.cgQualifiers.site !== null && vitalsTableData.circumferenceOrGirth.cgQualifiers.site !== "" ? vitalsTableData.circumferenceOrGirth.cgQualifiers.site + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "12px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.circumferenceOrGirth !== undefined && vitalsTableData.circumferenceOrGirth !== null ? (vitalsTableData.circumferenceOrGirth.cgQualifiers.location !== null && vitalsTableData.circumferenceOrGirth.cgQualifiers.location !== "" ? vitalsTableData.circumferenceOrGirth.cgQualifiers.location : "--") : "--"}</div></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "20px", left: "467px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "478px", top: "20px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.pain.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "52px", left: "74px", top: "512px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.pain !== undefined && vitalsTableData.pain !== null ? vitalsTableData.pain.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "186px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.pain !== undefined && vitalsTableData.pain !== null ? vitalsTableData.pain.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.pain !== undefined && vitalsTableData.pain !== null ? vitalsTableData.pain.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "13px", left: "517px", }}><span>Not Present</span></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "13px", left: "584px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "593px", top: "15px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                            <a style={{ cursor: "pointer" }} onClick={() => handleVitalEventChange(vitalsTableData.pulseOximetry.vitalMeasurementName)}>
                                <div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "98px", left: "74px", top: "628px", backgroundColor: "#FFF" }}>
                                    <div className="check-boxgary-frame"
                                        style={{ position: "absolute", width: "20px", left: "10px", top: "6px" }}>
                                        <FormControlLabel
                                            label=""
                                            labelPlacement="end"
                                            control={<Checkbox color="primary" size="medium" id="checkboxgenderselection" />}

                                        />
                                        <CheckBoxgary
                                            checkBoxgaryWidth="unset"
                                            checkBoxgaryHeight="unset"
                                        />
                                    </div>
                                    <div style={{ left: "48px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? vitalsTableData.pulseOximetry.vitalMeasurementName : "--"}</div>
                                    <div style={{ left: "112px", position: "relative", top: "15px", color: "#000", fontFamily: "poppins", fontSize: "14px", fontStyle: "normal", fontWeight: 400, lineHeight: "normal" }}>{vitalsEnteredDate}</div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "375px", }}><span>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? vitalsTableData.pulseOximetry.value : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "15px", fontSize: "14px", left: "465px", }}><span>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? vitalsTableData.pulseOximetry.unit : "--"}</span></div>
                                    <div style={{ position: "absolute", top: "5px", fontSize: "12px", left: "517px", }}><div style={{ fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? (vitalsTableData.pulseOximetry.poQualifiers.supplimentalOxygen !== null && vitalsTableData.pulseOximetry.poQualifiers.supplimentalOxygen !== "" ? vitalsTableData.pulseOximetry.poQualifiers.supplimentalOxygen + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "4px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? (vitalsTableData.pulseOximetry.poQualifiers.flowRate !== null && vitalsTableData.pulseOximetry.poQualifiers.flowRate !== "" ? vitalsTableData.pulseOximetry.poQualifiers.flowRate + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "9px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? (vitalsTableData.pulseOximetry.poQualifiers.o2concentration !== null && vitalsTableData.pulseOximetry.poQualifiers.o2concentration !== "" ? vitalsTableData.pulseOximetry.poQualifiers.o2concentration + ", " : "--, ") : "--, "}</div>
                                        <div style={{ position: "relative", top: "14px", fontWeight: 400, color: "#000000", fontFamily: "poppins" }}>{vitalsTableData.pulseOximetry !== undefined && vitalsTableData.pulseOximetry !== null ? (vitalsTableData.pulseOximetry.poQualifiers.method !== null && vitalsTableData.pulseOximetry.poQualifiers.method !== "" ? vitalsTableData.pulseOximetry.poQualifiers.method : "--") : "--"}</div></div>
                                    <div style={{ borderRadius: "4px", position: "relative", borderStyle: "solid", borderWidth: "1px", borderColor: "#65A455", height: "24px", width: "75px", top: "36px", left: "510px" }}>
                                        <span style={{ position: "relative", left: "15px", color: "#65A455" }}>Active</span>
                                    </div>
                                    <a><img style={{ position: "relative", left: "520px", top: "36px" }} src={dotsvertical}></img></a>
                                </div>
                            </a>
                        </> : <><div></div><div style={{ display: "flex", borderStyle: "solid", borderWidth: "1px", borderColor: "#DEE5ED", position: "absolute", width: "calc(100% - 15px)", height: "52px", left: "74px", top: "-72px", backgroundColor: "#FFF" }}></div></>}
                    </div>

                </div>)}

                {(patientVisitTab === 4 && <div style={{ position: 'absolute', top: '325px', left: '9px', width: 'calc(100% - 14px)', lineHeight: 2.5 }}>

                    <div className="admit-patient-dropdown">

                    </div>
                    <DataTable style={{ border: '0px', top: "-110px", left: "69px", overflow: "hidden" }}
                        value={immunizationTableData}

                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues}
                        onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ width: '4%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '14px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '5%', background: '#FFF' }}></Column>
                        <Column field="immunization" header="Immunization"
                            headerStyle={{
                                position: "relative", left: "13px", width: '19%',
                                textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3',
                                fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500
                            }} style={{
                                borderLeft: '0px', borderRight: '0px', width: '20%', background:
                                    '#FFF', position: "relative", left: "20px"
                            }} body={dataImmunization}/>
                        <Column field="lotNo" header="Lot Num"
                            headerStyle={{
                                position: "relative", left: "30px", width: '22%',
                                textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3',
                                fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500
                            }} style={{
                                borderLeft: '0px', borderRight: '0px', width: '20%', background:
                                    '#FFF', position: "relative", left: "19px"
                            }} />
                        <Column field="dueDate" header="Due Date "
                            headerStyle={{
                                position: "relative", left: "-10px", whiteSpace: "nowrap", width:
                                    '27%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins',
                                fontSize: '11px', fontWeight: 500
                            }} style={{
                                borderLeft: '0px',
                                borderRight: '0px', width: '23%', background: '#FFF', fontSize: "12px", position: "relative", left: "-11px"
                            }} body={dataDueDate} />
                        <Column field="administrationDate"
                            header="Administrtion Date" headerStyle={{
                                whiteSpace: "nowrap", left: "6px", position: "relative", width: '37%',
                                background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins',
                                fontSize: '11px', fontWeight: 500
                            }} style={{
                                borderLeft: '0px',
                                borderRight: '0px', width: '15%', background: '#FFF', fontSize: "12px", position: "relative", left: "10px"
                            }} body={dataAdminDate} />
                        <Column field="administeredBy"
                            header="Administered By" headerStyle={{
                                left: "6px", position: "relative", whiteSpace: "nowrap", width: '16%',
                                background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins',
                                fontSize: '11px', fontWeight: 500
                            }} style={{
                                borderLeft: '0px',
                                borderRight: '0px', width: '8%', background: '#FFF', position: "relative", left: "9px"
                            }} body={""} />
                        <Column field="route" header="Route"
                            headerStyle={{
                                width: '17%', background: '#F2F4F9', color: '#9DA1C3',
                                fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500, position: "relative", left: "49px"
                            }} style={{
                                borderLeft: '0px', borderRight: '0px', width: '11%', background:
                                    '#FFF', position: "relative", left: "67px"
                            }} body={dataRoutes} />
                        <Column field="dosage" header="Dosage"
                            headerStyle={{
                                position: "relative", left: "57px", width: '16%',
                                background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins',
                                fontSize: '11px', fontWeight: 500
                            }} style={{
                                borderLeft: '0px',
                                borderRight: '0px', width: '2%', background: '#FFF', position: "relative", left: "69px"
                            }} body={""} />
                        <Column field="anatomicLocation" header="Location"
                            headerStyle={{
                                left: "61px", position: "relative", width: '17%',
                                background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins',
                                fontSize: '11px', fontWeight: 500,
                            }} style={{
                                borderLeft: '0px',
                                borderRight: '0px', width: '13%', background: '#FFF', position: "relative", left: "80px", zIndex: 1
                            }} body={dataLocation} />

                        <Column field="" header="" headerStyle={{ width: '25%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500, position: "relative", left: "69px" }} style={{ borderLeft: '0px', borderRight: '0px', width: '29%', background: '#FFF', position: "relative", }} body={dataImmunizationEdit} />

                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '190px' } }}
                        open={newDialogsimmu}
                        onClose={() => setNewDialogsimmu(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onImmunizationData(rowDataValuesimmu)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Immunization</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectDatasimmu(rowDataValuesimmu)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Immunization</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>)}

            </>}

            {patientMainChangeTab === 3 && <>
                <div style={{ top: "6px", background: decryptPatientid != "" ? '#2D56AD' : "#FFF", height: decryptPatientid != "" ? '98px' : '0px', display: 'flex', width: 'calc(100% - 0px)', position: 'absolute', left: "74px" }} >
                    {decryptPatientid && <>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-1">

                            <img style={{ width: '60px', height: '60px', position: 'relative', left: '21px', top: '23px', borderRadius: patientImage !== "" ? "30px" : "" }} src={patientImage !== "" ? patientImage : AvatarBigImage}></img>
                        </div>
                        <div id="mettlerEmptyPadding" style={{ display: 'flex', flexDirection: 'column' }} className="p-col-12 p-md-6">
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '19px', minWidth: 'max-content', fontSize: '18px' }} className="App-TopBar-PatientName">{inputPatientInfo}</div>
                                <div style={{ position: 'relative', top: '23px', left: '6px', minWidth: 'max-content', fontSize: '14px' }} className="App-TopBar-PatientAge">{patientAge} Years</div>

                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', background: '#5574B7', border: '1px solid #5574B7', position: 'relative', top: '19px', left: '23px' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">SS#:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">SS-{patientSSN}</div>
                                </div>
                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', position: 'relative', left: '40px', top: '19px', background: '#5574B7', border: '1px solid #5574B7' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">MR:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">MR-345</div>
                                </div>
                            </div>
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '32px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '8px', left: '5px', fontSize: '10px' }} src={bloodBag}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '1px', fontSize: '10px' }} className="App-TopBar-BloodName">Blood</span>
                                    <span style={{ position: 'relative', top: '14px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">A</span><span style={{ position: 'relative', top: '13px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">+</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px', fontSize: '10px' }} src={bloodDrop}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '5px', fontSize: '10px' }} className="App-TopBar-BloodName">Height</span>
                                    <span style={{ position: 'relative', top: '18px', left: '-25px', fontSize: '12px', width: '30px' }} className="App-TopBar-PatientValue">--</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNew}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '8px', fontSize: '10px' }} className="App-TopBar-BloodName">Weight</span>
                                    <span style={{ position: 'relative', top: '23px', left: '-29px', fontSize: '12px' }} className="App-TopBar-PatientValue">45kg</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNewOne}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '9px', fontSize: '10px' }} className="App-TopBar-BloodName">DOB</span>
                                    <span style={{ position: 'relative', top: '22px', left: '-13px', fontSize: '12px', width: '75px' }} className="App-TopBar-PatientValue">{patientDateOfBirth}</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '10px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={AvatarDoctorImage}></img>
                                    <span style={{ fontSize: '16px', position: 'relative', top: '11px', left: '13px', width: '200px' }} className="App-TopBar-PatientValue">Dr. Linda Blair, OP</span>
                                </div>
                            </div>
                        </div>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-5">  </div>
                    </>}
                </div>
                <div className="spAssignment-details-child" style={{ top: "106px", position: 'absolute', left: '275px', height: patientVisitTab === 1 || patientVisitTab === 0 ? '1561px' : '-webkit-fill-available' }} />
                <div style={{ position: "absolute", top: "121.5px", left: "83px", fontWeight: "bold", fontSize: "18px" }}>Orders</div>

                <div className="psaAssignment-details-child2" style={{ position: "absolute", width: "calc(100% - 16px)", top: "155.5px", right: "210.5px", left: "83px", borderTop: "1px solid var(--color-gainsboro-100)", height: "1px" }} />
                <div className="psaAssignment-details-child2" style={{ position: "absolute", width: "calc(100% - 16px)", top: "194.5px", right: "210.5px", left: "83px", borderTop: "1px solid var(--color-gainsboro-100)", height: "1px" }} />
                <div style={{ position: "absolute", width: "calc(100% - 339px)", top: "171px", right: "925px", left: "83px", height: "24px" }}>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 5 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(5)}><div style={{ position: "absolute", fontWeight: "bold" }}>Procedure</div></a>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 6 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(6)}><div style={{ position: "absolute", left: "96px", fontWeight: "bold" }}>Imaging Procedure</div></a>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 7 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(7)}><div style={{ position: "absolute", left: "255px", fontWeight: "bold" }}>Lab Test</div></a>
                    <a style={{ cursor: 'pointer', color: patientVisitTab === 8 ? 'darkslateblue' : 'rgba(0, 0, 0, 0.87)' }} onClick={() => handleChangeEvent(8)}><div style={{ position: "absolute", left: "345px", fontWeight: "bold" }}>Consult</div></a>
                    <span style={{ width: '1px', height: '20px', color: '#BBC5CE', position: 'relative', left: '241px', top: '-24px', borderLeftStyle: 'groove' }}></span>
                    <a style={{ cursor: 'pointer' }}><img src={switchVertical} style={{ width: '24px', height: '24px', position: 'relative', left: '511px', top: '-49px' }}></img></a>
                    <img src={filterList} style={{ width: '24px', height: '24px', position: 'relative', left: '529px', top: '-49px' }}></img>
                    <a style={{ cursor: 'pointer' }} onClick={handleClickChangeorder}><img src={addSymbol} style={{ width: '24px', height: '24px', position: 'relative', left: '543px', top: '-49px' }}></img></a>
                    <input type="text" className="dashboard-search-text" id="new" name="new" value={null} onChange={null} placeholder="Search" style={{ paddingLeft: '36px', top: "-49px", fontFamily: 'system-ui', position: 'relative', width: '165px', left: '547px' }} />
                    <img src={searchImage} style={{ width: '20x', height: '20px', position: 'relative', left: '389px', top: '-49px', opacity: 0.3 }}></img>
                </div>
                {(patientVisitTab === 5 && <div style={{ position: "absolute", top: "194px", left: "82px", backgroundColor: "var(--color-darkslateblue-200)", width: "78px", height: "2px" }} />)}
                {(patientVisitTab === 6 && <div style={{ position: "absolute", top: "194px", left: "177px", backgroundColor: "var(--color-darkslateblue-200)", width: "135px", height: "2px" }} />)}
                {(patientVisitTab === 7 && <div style={{ position: "absolute", top: "194px", left: "338px", backgroundColor: "var(--color-darkslateblue-200)", width: "62px", height: "2px" }} />)}
                {(patientVisitTab === 8 && <div style={{ position: "absolute", top: "194px", left: "426px", backgroundColor: "var(--color-darkslateblue-200)", width: "61px", height: "2px" }} />)}

                {((patientVisitTab === 5) && <div style={{ position: 'absolute', top: '325px', left: '80px', width: 'calc(100% - 18px)' }}>


                    <DataTable style={{ border: '0px', top: "-110px", }}
                        value={orderProcedureData}
                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ width: '12%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, position: 'relative', left: '5px' }} style={{ borderLeft: '0px', borderRight: '0px', width: '4%', background: '#FFF', position: "relative", left: "10px" }}></Column>
                        <Column field="procedure" header="Procedure" headerStyle={{ width: '23%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, }} style={{ borderLeft: '0px', borderRight: '0px', height: "52px", width: '33%', background: '#FFF', position: "relative", left: "-3px" }} />
                        <Column field="urgency" header="Urgency" headerStyle={{ width: '23%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, position: "relative", left: "-3px" }} style={{ borderLeft: '0px', borderRight: '0px', width: '30%', background: '#FFF', position: "relative", left: "-18px" }} body={dataOrderUrgency}/>
                        <Column field="serviceProblem" header="Attention" headerStyle={{ left: "11px", position: "relative", width: '34%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '38%', background: '#FFF' }} />
                        <Column field="provisionalDiagnosis" header="Patient will be seen as" headerStyle={{ left: "20px", position: "relative", whiteSpace: "nowrap", width: '51%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '37%', background: '#FFF' }} />
                        <Column field="appropriateDate" header="Earliest appropriate date" headerStyle={{ left: "12px", position: "relative", width: '72%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '26%', background: '#FFF', position: "relative", left: "48px" }} />
                        <Column field="consultation" header="Place of Consult" headerStyle={{ whiteSpace: "nowrap", width: '20%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, position: 'relative', left: '-7px' }} style={{ borderLeft: '0px', borderRight: '0px', width: '31%', background: '#FFF' }} />
                        <Column field="" header="" headerStyle={{ width: '25%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500, position: "relative", left: "69px" }} style={{ borderLeft: '0px', borderRight: '0px', background: '#FFF', position: "relative" }} body={dataProcedureEdit} />

                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '190px' } }}
                        open={newDialogsProcedure}
                        onClose={() => setNewDialogsProcedure(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onProcedureData(rowDataValuesProcedure)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Procedure Test</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectDatasProcedure(rowDataValuesProcedure)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Procedure Test</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>)}
                {(patientVisitTab === 6 && <div style={{ position: 'absolute', top: '325px', left: '12px', width: 'calc(100% - 18px)' }}>
                    <div className="admit-patient-dropdown">

                    </div>
                    <DataTable style={{ border: '0px', top: "-110px", left: "69px" }}
                        value={imagingProcedureData}
                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ width: '7%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, position: 'relative', left: '4px' }} style={{ borderLeft: '0px', borderRight: '0px', width: '11%', background: '#FFF' }}></Column>
                        <Column field="imagingType" header="Imaging Type" headerStyle={{ position: "relative", left: "12px", whiteSpace: "nowrap", width: '17%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '40%', background: '#FFF' }} />
                        <Column field="reasonForStudy" header="Reason for Study" headerStyle={{ position: "relative", left: "66px", whiteSpace: "nowrap", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ whiteSpace: "nowrap", borderLeft: '0px', borderRight: '0px', width: '55%', background: '#FFF' }} />
                        <Column field="modifiers" header="Modifiers" headerStyle={{ position: "relative", left: "109px", whiteSpace: "nowrap", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '24%', background: '#FFF' }} />
                        <Column field="dateDesired" header="Date Desired" headerStyle={{ position: "relative", left: "100px", whiteSpace: "nowrap", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '44%', background: '#FFF', position: "relative", left: "-22px" }} body={dateDesired} />
                        <Column field="urgency" header="Urgency" headerStyle={{ position: "relative", left: "94px", whiteSpace: "nowrap", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '27%', background: '#FFF' }} body={dataImagingUrgency}/>
                        <Column field="category" header="Category" headerStyle={{ position: "relative", left: "60px", whiteSpace: "nowrap", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '27%', background: '#FFF' }} />
                        <Column field="preOpScheduled" header="Pre OP Scheduled" headerStyle={{ whiteSpace: "nowrap", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, position: "relative", left: "54px" }} style={{ borderLeft: '0px', borderRight: '0px', width: '27%', background: '#FFF' }} />
                        <Column field="" header="" headerStyle={{ width: '25%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500, position: "relative", left: "69px" }} style={{ borderLeft: '0px', borderRight: '0px', background: '#FFF', position: "relative", left: "-25px" }} body={dataImagingProcedureEdit} />

                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '240px' } }}
                        open={newDialogsImagingProcedure}
                        onClose={() => setNewDialogsImagingProcedure(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onImagingProcedureData(rowDataValuesImagingProcedure)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Imaging Procedure Test</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectDatasImagingProcedure(rowDataValuesImagingProcedure)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Imaging Procedure Test</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>)}
                {(patientVisitTab === 7 && <div style={{ position: 'absolute', top: '325px', left: '12px', width: 'calc(100% - 18px)' }}>




                    <div className="admit-patient-dropdown">

                    </div>
                    <DataTable style={{ border: '0px', top: "-110px", left: "69px" }}
                        value={labOrderTableData}
                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ width: '7%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '8%', background: '#FFF', position: "relative", left: "-4px" }}></Column>
                        <Column field="labTest" header="Lab Test" headerStyle={{ width: '15%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '44%', background: '#FFF' }} body={dataLabTest} />
                        <Column field="collectionType" header="Collection Type" headerStyle={{ position: "relative", left: "-5px", width: '33%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '46%', background: '#FFF', position: "relative", left: "-45px" }} body={dataCollectionType} />
                        <Column field="collectionDateTime" header="Collection Date/Time" headerStyle={{ position: "relative", left: "-9px", width: '30%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '67%', background: '#FFF', position: "relative", left: "-80px" }} body={dataCollectionDate} />
                        <Column field="collectionSample" header="Collect Sample" headerStyle={{ position: "relative", left: "-18px", whiteSpace: "nowrap", width: '37%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '13%', background: '#FFF', position: "relative", left: "-107px" }} body={dataCollectionSample} />
                        <Column field="specimen" header="Specimen" headerStyle={{ position: "relative", left: "-22px", whiteSpace: "nowrap", width: '16%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '19%', background: '#FFF', position: "relative", left: "-83px" }} body={dataSpecimen} />
                        <Column field="urgency" header="Urgency" headerStyle={{ width: '10%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500, position: "relative", left: "-7px" }} style={{ borderLeft: '0px', borderRight: '0px', width: '16%', background: '#FFF', position: "relative", left: "-50px" }} body={dataUrgency} />
                        <Column field="" header="" headerStyle={{ width: '25%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500, position: "relative", left: "69px" }} style={{ borderLeft: '0px', borderRight: '0px', background: '#FFF', position: "relative", left: "-25px" }} body={datalabEdit} />

                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '190px' } }}
                        open={newDialogslab}
                        onClose={() => setNewDialogslab(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onLabData(rowDataValueslab)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Lab Test</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectDataslab(rowDataValueslab)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Lab Test</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>)}

                {(patientVisitTab === 8 && <div style={{ position: 'absolute', top: '325px', left: '12px', width: 'calc(100% - 18px)' }}>

                    <div className="admit-patient-dropdown">

                    </div>
                    <DataTable style={{ border: '0px', top: "-110px", left: "69px" }}
                        value={consultOrderData}
                        selectionMode="multiple"
                        rows={50} scrollable={true}
                        responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                        emptyMessage="No records found">
                        <Column selectionMode="multiple" headerStyle={{ width: '11%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '17%', background: '#FFF' }}></Column>
                        <Column field="speciality" header="Service/Speciality" headerStyle={{ position: "relative", left: "9px", whiteSpace: "nowrap", width: '19%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '55%', background: '#FFF' }} />
                        <Column field="urgency" header="Urgency " headerStyle={{ position: "relative", left: "40px", whiteSpace: "nowrap", width: '39%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '23%', background: '#FFF', position: "relative", left: "-18px" }} body={dataConsultUrgency} />
                        <Column field="serviceProblem" header="Attention" headerStyle={{ position: "relative", left: "3px", whiteSpace: "nowrap", width: '36%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '15%', background: '#FFF', position: "relative", left: "-13px" }} body={""} />
                        <Column field="provisionalDiagnosis" header="Patient will be seen as" headerStyle={{ position: "relative", left: "13px", whiteSpace: "nowrap", width: '35%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '57%', background: '#FFF' }} body={""} />
                        <Column field="appropriateDate" header="Earliest appropriate date" headerStyle={{ position: "relative", left: "15px", whiteSpace: "nowrap", width: '56%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '64%', background: '#FFF' }} body={""} />
                        <Column field="placeOfConsultation" header="Place of Consult" headerStyle={{ position: "relative", left: "13px", whiteSpace: "nowrap", width: '17%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '27%', background: '#FFF' }} body={""} />
                        <Column field="" header="" headerStyle={{ width: '25%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '11px', fontWeight: 500, position: "relative", left: "69px" }} style={{ borderLeft: '0px', borderRight: '0px', background: '#FFF', position: "relative", left: "-3px" }} body={dataConsultEdit} />

                    </DataTable>
                    <Dialog maxWidth={'md'} PaperProps={{ sx: { overflow: 'hidden', height: '100px', width: '190px' } }}
                        open={newDialogsConsult}
                        onClose={() => setNewDialogsConsult(false)}
                    >
                        <DialogContentText >
                            <div style={{ display: 'flex', flexDirection: 'column', position: 'relative', left: '18px', top: '18px' }}>
                                <a style={{ cursor: 'pointer' }} onClick={() => onConsultData(rowDataValuesConsult)}><div style={{ fontSize: '14px' }} className="AppTopBar-profileName">Edit Consult</div></a>
                                <a style={{ cursor: 'pointer' }} onClick={() => onRowSelectDatasConsult(rowDataValuesConsult)}><div style={{ position: 'relative', top: '23px', fontSize: '14px' }} className="AppTopBar-profileName">View Consult</div></a>
                            </div>

                        </DialogContentText>
                    </Dialog>
                </div>
                )}
            </>}
            {patientMainChangeTab === 4 && <>
                <div style={{ fontWeight: 600, position: "relative", top: "50px", left: "100px" }}>Patient ADT</div>
                <div style={{ border: "1px solid #DEE5ED", position: 'relative', top: "85px", left: "176px", width: "calc(100% - 242px)" }} />
                <div style={{ top: "92px", display: "flex", justifyContent: "space-between", width: "calc(100% - 306px)", position: "relative", left: "206px" }}>
                    <div style={{ position: "relative", left: "-2px", width: "43px" }}>Date</div>
                    <div style={{ position: "relative", left: "-2px", width: "110px" }}>Status</div>
                    <div style={{ position: "relative", left: "10px", width: "136px" }}>Attending Physician</div>
                    <div style={{ position: "relative", left: "-1px", width: "110px" }}>Location</div>
                </div>





                <div style={{ position: "relative", top: "120px", left: "175px", width: "calc(100% - 236px)", height: "56px", backgroundColor: "#fafafa" }}>
                    <div style={{ display: "flex", justifyContent: "space-between", lineHeight: 4, width: "calc(100% - 68px)", position: "relative", left: "31px" }}>
                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                        <div style={{ position: "relative", top: "13px", left: "-31px" }}>
                            <div style={{ border: "1px solid #FF8C00", borderRadius: "4px", width: "93px", height: "30px", top: "13px", left: "214px" }}>
                                <span style={{ position: "relative", top: "-14px", left: "4px", color: "#FF8C00" }}>Pre Admit<i style={{ position: "relative", top: "7px", transform: "rotate(270deg)", color: "#FF8C00" }} className="large material-icons">chevron_left</i></span>
                            </div>
                        </div>


                        <div style={{ display: "flex", gap: "9px", width: "200px", position: "relative", left: "38px" }}>
                            <div><img src={doctimg} /></div>
                            <div style={{ color: "#000000" }}>Dr. Linda Blair, OP</div>
                        </div>

                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                    </div>
                </div>
                <div style={{ position: "relative", top: "120px", left: "175px", width: "calc(100% - 236px)", height: "56px", backgroundColor: "#fafafa" }}>
                    <div style={{ display: "flex", justifyContent: "space-between", lineHeight: 4, width: "calc(100% - 68px)", position: "relative", left: "31px" }}>
                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                        <div style={{ position: "relative", top: "13px", left: "-31px" }}>
                            <div style={{ border: "1px solid #1E90FF", borderRadius: "4px", width: "93px", height: "30px", top: "13px", left: "214px" }}>
                                <span style={{ position: "relative", top: "-14px", left: "4px", color: "#1E90FF" }}> Admit<i style={{ position: "relative", top: "7px", transform: "rotate(270deg)", color: "#1E90FF" }} className="large material-icons">chevron_left</i></span>
                            </div>
                        </div>


                        <div style={{ display: "flex", gap: "9px", width: "200px", position: "relative", left: "38px" }}>
                            <div><img src={doctimg} /></div>
                            <div style={{ color: "#000000" }}>Dr. Linda Blair, OP</div>
                        </div>

                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                    </div>
                </div>
                <div style={{ position: "relative", top: "120px", left: "175px", width: "calc(100% - 236px)", height: "56px", backgroundColor: "#fafafa" }}>
                    <div style={{ display: "flex", justifyContent: "space-between", lineHeight: 4, width: "calc(100% - 68px)", position: "relative", left: "31px" }}>
                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                        <div style={{ position: "relative", top: "13px", left: "-31px" }}>
                            <div style={{ border: "1px solid #696969", borderRadius: "4px", width: "93px", height: "30px", top: "13px", left: "214px" }}>
                                <span style={{ position: "relative", top: "-14px", left: "4px", color: "#696969" }}> Transfer<i style={{ position: "relative", top: "7px", transform: "rotate(270deg)", color: "#696969" }} className="large material-icons">chevron_left</i></span>
                            </div>
                        </div>


                        <div style={{ display: "flex", gap: "9px", width: "200px", position: "relative", left: "38px" }}>
                            <div><img src={doctimg} /></div>
                            <div style={{ color: "#000000" }}>Dr. Linda Blair, OP</div>
                        </div>

                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                    </div>
                </div>
                <div style={{ position: "relative", top: "120px", left: "175px", width: "calc(100% - 236px)", height: "56px", backgroundColor: "#fafafa" }}>
                    <div style={{ display: "flex", justifyContent: "space-between", lineHeight: 4, width: "calc(100% - 68px)", position: "relative", left: "31px" }}>
                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                        <div style={{ position: "relative", top: "13px", left: "-31px" }}>
                            <div style={{ border: "1px solid #696969", borderRadius: "4px", width: "93px", height: "30px", top: "13px", left: "214px" }}>
                                <span style={{ position: "relative", top: "-14px", left: "4px", color: "#696969" }}> Transfer<i style={{ position: "relative", top: "7px", transform: "rotate(270deg)", color: "#696969" }} className="large material-icons">chevron_left</i></span>
                            </div>
                        </div>


                        <div style={{ display: "flex", gap: "9px", width: "200px", position: "relative", left: "38px" }}>
                            <div><img src={doctimg} /></div>
                            <div style={{ color: "#000000" }}>Dr. Linda Blair, OP</div>
                        </div>

                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                    </div>
                </div><div style={{ position: "relative", top: "120px", left: "175px", width: "calc(100% - 236px)", height: "56px", backgroundColor: "#fafafa" }}>
                    <div style={{ display: "flex", justifyContent: "space-between", lineHeight: 4, width: "calc(100% - 68px)", position: "relative", left: "31px" }}>
                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                        <div style={{ position: "relative", top: "13px", left: "-31px" }}>
                            <div style={{ border: "1px solid #32CD32", borderRadius: "4px", width: "93px", height: "30px", top: "13px", left: "214px" }}>
                                <span style={{ position: "relative", top: "-14px", left: "4px", color: "#32CD32" }}> Discharge<i style={{ position: "relative", top: "7px", transform: "rotate(270deg)", color: "#32CD32" }} className="large material-icons">chevron_left</i></span>
                            </div>
                        </div>


                        <div style={{ display: "flex", gap: "9px", width: "200px", position: "relative", left: "38px" }}>
                            <div><img src={doctimg} /></div>
                            <div style={{ color: "#000000" }}>Dr. Linda Blair, OP</div>
                        </div>

                        <div style={{ color: "#000000" }}>July 24, 10:30 PM</div>
                    </div>
                </div>





            </>}
            {patientMainChangeTab === 5 && <>
                {spinner &&
                    (<div className='overlay-content'>
                        <div className='wrapper'>
                            <img alt="" src={loaddingFile} style={{ position: 'absolute', width: '100%', height: '-webkit-fill-available', zIndex: 2, opacity: '0.5' }} />
                        </div>
                    </div>
                    )}
                <div style={{ height: "1164px", overflow: "hidden" }}>
                    <div style={{ color: "#3F3F46", fontFamily: "Poppins", fontSize: "normal", fontWeight: 600, lineHeight: "normal", position: "relative", top: "40px", left: "92px", width: "100px" }}>Admit Patient</div>
                    <LocalizationProvider dateAdapter={AdapterDateFns}>

                        <div className="bedorgForm-fields" style={{ top: "138px", display: "flex", width: "calc(100% - 307px)", left: "155px" }}>
                            <MobileDateTimePicker
                                disabled={true}
                                className="name-input13"
                                label="Admission Date & Time"
                                value={inputAdmitData.admissionDate = new Date()}
                                onChange={(newValue) => {
                                    inputAdmitData.admissionDate = newValue;
                                    setInputAdmitData({ ...inputAdmitData });
                                }}
                                slotProps={{
                                    textField: {
                                        variant: "outlined",
                                        size: "medium",
                                        color: "primary",
                                    },
                                }}

                            />


                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Admission Type
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Admission Type" name="admissionType" value={inputAdmitData.admissionType} onChange={handleInputAdmitChange}>
                                    {newNatureOfReactionInputData}
                                </Select>
                                <FormHelperText />
                            </FormControl>
                        </div>
                        <div className="bedorgForm-fields3" style={{ position: "absolute", display: "flex", top: "223px", width: "calc(100% - 307px)", left: "155px" }}>
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Attending Physician
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Attending Physician" name="attendingPhysician" value={inputAdmitData.attendingPhysician} onChange={handleInputAdmitChange}>
                                    {getStaffDataItems.filter(i => i.role === "Physician Assistant").map((newData, i) => {
                                        return (
                                            <MenuItem key={i} value={newData.id}>{newData.name[0].given+" "+newData.name[0].family}</MenuItem>
                                        )
                                    })}
                                </Select>
                                <FormHelperText />
                            </FormControl>
                            <TextField
                                id="facilityTreatingSpeciality"
                                className="name-input13"
                                color="primary"
                                variant="outlined"
                                type="text"
                                label="Facility Treating Speciality"
                                placeholder="Placeholder"
                                size="medium"
                                margin="none"
                                value={inputAdmitData.facilityTreatingSpeciality}
                                onChange={handleInputAdmitChange}
                            />
                        </div>
                        <div className="bedorgForm-fields3" style={{ position: "absolute", display: "flex", top: "310px", width: "calc(100% - 307px)", left: "155px" }}>
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Ward Location
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Ward Location" name="wardLocation" value={inputAdmitData.wardLocation} onChange={handleInputAdmitChange}>
                                    {newWardInputData}
                                </Select>
                                <FormHelperText />
                            </FormControl>
                            <TextField
                                id="roomBed"
                                className="name-input13"
                                color="primary"
                                variant="outlined"
                                type="text"
                                label="Bed Number"
                                placeholder="Placeholder"
                                size="medium"
                                margin="none"
                                value={inputAdmitData.bedId = inputBedData}
                                onChange={handleInputAdmitChange}
                            />
                        </div>
                        {inputAdmitData.bedId === "" && <div className="name-input13 patient-Q15-dialogTitle" style={{ position: 'relative', top: '344px', left: '673px', fontSize: '14px' }}><a style={{ cursor: 'pointer' }} onClick={() => setDiaglogBedView(true)}><u>Click and view the Patient Bed Assign</u></a></div>}
                        <div className="bedorgForm-fields3" style={{ position: "absolute", display: "flex", top: "397px", width: "calc(100% - 307px)", left: "155px" }}>
                            <TextField
                                id="briefDescription"
                                className="name-input13"
                                color="primary"
                                variant="outlined"
                                type="text"
                                label="Brief Description"
                                placeholder="Placeholder"
                                size="medium"
                                margin="none"
                                value={inputAdmitData.briefDescription}
                                onChange={handleInputAdmitChange}
                            />

                        </div>
                        <div className="bedorgForm-fields3" style={{ position: "absolute", display: "flex", top: "490px", flexDirection: "row-reverse", width: "calc(100% - 307px)", left: "155px" }}>
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Primary Physician
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Primary Physician" name="primaryPhysician" value={inputAdmitData.primaryPhysician} onChange={handleInputAdmitChange}>
                                    {getStaffDataItems.filter(i => i.role === "Registered Nurses").map((newData, i) => {
                                        return (
                                            <MenuItem key={i} value={newData.id}>{newData.name[0].given+" "+newData.name[0].family}</MenuItem>
                                        )
                                    })}
                                </Select>
                                <FormHelperText />
                            </FormControl>
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Source of admission
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Source of admission" name="sourceOfAdmission" value={inputAdmitData.sourceOfAdmission} onChange={handleInputAdmitChange}>
                                    <MenuItem value="Admission 1">Admission 1</MenuItem>
                                    <MenuItem value="Admission 2">Admission 2</MenuItem>
                                    <MenuItem value="Admission 3">Admission 3</MenuItem>
                                    <MenuItem value="Admission 4">Admission 4</MenuItem>
                                    <MenuItem value="Admission 5">Admission 5</MenuItem>
                                </Select>
                                <FormHelperText />
                            </FormControl>
                        </div>
                    </LocalizationProvider>
                    <div style={{ position: "relative", top: "547px", left: "163px", fontWeight: 600 }}>Assign a  tracking device to patient?</div>
                    <RadioGroup name="trackingDevice"
                        style={{ position: "absolute", top: "170px", left: "290px" }} value={inputAdmitData.trackingDevice} onChange={handleInputAdmitChange}
                        row>
                        <div className="frame-parent7" style={{ color: 'darkslategray', flexWrap: "nowrap", gap: "30px", position: 'relative', left: '-255px', top: '455px' }}>
                            <FormControlLabel
                                onChange={handleCheckboxChange}
                                checked={isVisibledbcon}
                                style={{ left: "129px" }}
                                className="radio-buttongray-icon3"
                                label="Yes" value={true}
                                labelPlacement="end"
                                control={<Radio color="primary" size="medium" />}
                            />
                            <FormControlLabel
                                onChange={handleCheckboxChange}
                                checked={!isVisibledbcon}
                                style={{ left: "229px" }}
                                className="radio-buttongray-icon3"
                                label="No" value={false}
                                labelPlacement="end"
                                control={<Radio color="primary" size="medium" />}
                            />
                        </div>
                    </RadioGroup>{inputAdmitData.trackingDevice + " " + isVisibledbcon}

                    {isVisibledbcon && <>


                        {!qrCodeScanDialog &&
                            <div>
                                <div style={{ border: "3px dotted #E0E5EC", width: "calc(100% - 305px)", height: "120px", position: "relative", top: "648px", left: "157px" }}>
                                    <div style={{ display: "flex", justifyContent: "center" }}>
                                        <div style={{ lineHeight: "43px", display: "flex", justifyContent: "center", position: "relative", top: "38px", gap: "16px", backgroundColor: "#E0E5EC", height: '43px', width: "200px", borderRadius: "5px" }}>
                                            <i style={{ position: "relative", top: "10px" }} className="material-icons">remove_red_eye</i>
                                            <div style={{ font: "Roboto", fontWeight: 600, fontSize: "14px" }}> <a style={{ cursor: 'pointer' }} onClick={() => { setQRCodeScanDialog(true); setScanning(!scanning) }}>Beacon Device</a>

                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        }
                        <Dialog maxWidth={'md'} PaperProps={{ sx: { position: "absolute", height: "440px", width: "568px", overflow: 'hidden' } }}
                            open={qrCodeScanDialog}
                            onClose={()=>{setQRCodeScanDialog(false)}}
                        >

                            <div style={{ position: 'relative', width: "fit-content" }}>
                                {/* <Button label={scanning ? "Stop Scanning" : "Start Scanning"} style={{ width: '152px', backgroundColor: "#133C93", borderColor: "#133C93", position: "relative", top: "-60px", left: "-74px", height: "56px" }} onClick={() => setScanning(!scanning)}></Button>*/}
                                {scanning && <video ref={videoRef} style={{ display: "block", borderRadius: "9px", }} />}

                                <div
                                    className="modal fade"
                                    id="exampleModal"
                                    tabIndex={-1}
                                    role="dialog"
                                    aria-labelledby="exampleModalLabel"
                                    aria-hidden="true"
                                >
                                    <div className="modal-dialog" role="document">
                                        <div className="modal-content" style={{ top: "231px" }}>
                                            <div className="modal-header">
                                                <h5 className="modal-title" id="exampleModalLabel" style={{ fontWeight: 600 }}>
                                                    Add Device
                                                </h5>
                                                <button
                                                    type="button"
                                                    className="close"
                                                    data-dismiss="modal"
                                                    aria-label="Cancel"
                                                    onClick={closeModal}
                                                >
                                                    <span aria-hidden="true">×</span>
                                                </button>
                                            </div>
                                            <div className="modal-body">
                                                <div className="form-floating mb-3">
                                                    <input
                                                        type="text"
                                                        className="form-control"
                                                        id="Service"
                                                        placeholder="Device Name"
                                                        value={deviceName}
                                                        onChange={handleDeviceNameChange}
                                                    />
                                                    <label htmlFor="deviceName">Device Name</label>
                                                </div>
                                                <div className="form-floating">
                                                    <input
                                                        type="text"
                                                        className="form-control"
                                                        id="deviceId"
                                                        placeholder="Device ID"
                                                        value={deviceId}
                                                        readOnly
                                                    />
                                                    <label htmlFor="deviceId">Device ID</label>
                                                </div>
                                            </div>
                                            <div className="modal-footer">
                                                <button
                                                    type="button"
                                                    className="btn btn-secondary"
                                                    data-dismiss="modal"
                                                    onClick={closeModal}
                                                >
                                                    Cancel
                                                </button>
                                                <button
                                                    style={{ backgroundColor: "#1F489F" }}
                                                    type="button"
                                                    className="btn btn-primary"
                                                    onClick={postAPI}
                                                >
                                                    Save
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div></Dialog>
                        {!qrCodeScanDialog && <>
                            <div>

                                <div style={{ position: "absolute", left: "157px", top: "913px", width: "calc(100% - 319px)", display: "flex", justifyContent: "space-between", }}>
                                    <div>S. No.</div>
                                    <div>Device Name</div>
                                    <div>Device ID</div>
                                    <div><img src={""}></img></div>

                                </div>
                                <div style={{ border: "1px groove #D9D9D9", top: "754px", position: "relative", left: "141px", width: "calc(100% - 288px)" }} />
                                <div style={{ position: "absolute", left: "157px", top: "950px", width: "calc(100% - 305px)", display: "flex", justifyContent: "space-between", }}>
                                    <div style={{ width: "fit-content" }}>1</div>
                                    <div style={{ width: "fit-content", position: "relative", left: "52px" }}>Beacon device name 1</div>
                                    <div style={{ width: "fit-content", position: "relative", left: "17px" }}>AC233FACA17D</div>
                                    <div><img src={Delete}></img></div>
                                </div>

                            </div>

                        </>}


                    </>}
                    <div className="component-5011" style={{ top: "1064px", left: "-245px", width: "calc(100% - -303px)" }}>
                        <div className="cancel-group" style={{ position: "relative", top: "20px" }}>
                            <SecondaryButton
                                label="Clear"
                                secondaryButtonCursor="pointer"
                                onCancelContainerClick={null}
                            />
                            <div className="previous1">
                                <img className="bg-icon3" alt="" src={bottomImage} />
                                <div className="label5">Previous</div>
                            </div>
                            <PrimaryButton

                                label="Add"
                                primaryButtonCursor="pointer"
                                onNextContainerClick={handlePageSaveAdmitPatient}
                            />
                        </div>
                    </div>
                </div></>}
            {patientMainChangeTab === 6 && <>
                <div style={{ top: "6px", background: decryptPatientid != "" ? '#2D56AD' : "#FFF", height: decryptPatientid != "" ? '98px' : '0px', display: 'flex', width: 'calc(100% - 0px)', position: 'absolute', left: "74px" }} >
                    {decryptPatientid && <>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-1">

                            <img style={{ width: '60px', height: '60px', position: 'relative', left: '21px', top: '23px', borderRadius: patientImage !== "" ? "30px" : "" }} src={patientImage !== "" ? patientImage : AvatarBigImage}></img>
                        </div>
                        <div id="mettlerEmptyPadding" style={{ display: 'flex', flexDirection: 'column' }} className="p-col-12 p-md-6">
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '19px', minWidth: 'max-content', fontSize: '18px' }} className="App-TopBar-PatientName">{inputPatientInfo}</div>
                                <div style={{ position: 'relative', top: '23px', left: '6px', minWidth: 'max-content', fontSize: '14px' }} className="App-TopBar-PatientAge">{patientAge} Years</div>

                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', background: '#5574B7', border: '1px solid #5574B7', position: 'relative', top: '19px', left: '23px' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">SS#:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">SS-{patientSSN}</div>
                                </div>
                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', position: 'relative', left: '40px', top: '19px', background: '#5574B7', border: '1px solid #5574B7' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">MR:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">MR-345</div>
                                </div>
                            </div>
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '32px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '8px', left: '5px', fontSize: '10px' }} src={bloodBag}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '1px', fontSize: '10px' }} className="App-TopBar-BloodName">Blood</span>
                                    <span style={{ position: 'relative', top: '14px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">A</span><span style={{ position: 'relative', top: '13px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">+</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px', fontSize: '10px' }} src={bloodDrop}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '5px', fontSize: '10px' }} className="App-TopBar-BloodName">Height</span>
                                    <span style={{ position: 'relative', top: '18px', left: '-25px', fontSize: '12px', width: '30px' }} className="App-TopBar-PatientValue">--</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNew}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '8px', fontSize: '10px' }} className="App-TopBar-BloodName">Weight</span>
                                    <span style={{ position: 'relative', top: '23px', left: '-29px', fontSize: '12px' }} className="App-TopBar-PatientValue">45kg</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNewOne}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '9px', fontSize: '10px' }} className="App-TopBar-BloodName">DOB</span>
                                    <span style={{ position: 'relative', top: '22px', left: '-13px', fontSize: '12px', width: '75px' }} className="App-TopBar-PatientValue">{patientDateOfBirth}</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '10px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={AvatarDoctorImage}></img>
                                    <span style={{ fontSize: '16px', position: 'relative', top: '11px', left: '13px', width: '200px' }} className="App-TopBar-PatientValue">Dr. Linda Blair, OP</span>
                                </div>
                            </div>
                        </div>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-5">  </div>
                    </>}
                </div>
                <div className="bed-details" style={{ height: "1048px", position: "relative", left: "63px", top: '105px' }}>
                    <div className="bed-details-child" />
                    <div className="bed-details-child1" />
                    {/* <div className="bedline-div" /> */}
                    <div >
                        <img
                            className="bedexpand-more-24px-icon"
                            alt=""
                            src="/expand-more-24px.svg"
                        />
                    </div>
                    <div style={{ top: "11px", background: decryptPatientid != "" ? '#2D56AD' : "#FFF", height: decryptPatientid != "" ? '98px' : '0px', display: 'flex', width: 'calc(100% - 0px)', position: 'absolute', left: "9px" }} >

                    </div>
                    <div className="bed-details" style={{ height: "1089px" }}>
                        <div className="bed-details-child" />

                        <div className="bedline-div" />
                        <div className="bedexpand-more-24px-parent">
                            <img
                                className="bedexpand-more-24px-icon"
                                alt=""
                                src="/expand-more-24px.svg"
                            />
                            <div className="beddetails">Select Bed</div>
                            <div className="beddetailsAvaliables" style={{ gap: '64px' }}>
                                <div className="Available">
                                    <Container className="bed" style={{ backgroundColor: "white", border: '1px solid #C4C5D3' }}>
                                        <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "white", border: "1px solid #C4C5D3", marginLeft: "-20px", marginTop: "2px", marginBottom: "2px" }}></span>
                                    </Container>
                                    <div className="bed">Available</div>
                                </div>
                                <div className="Selected">
                                    <Container className="bed-1" style={{ backgroundColor: "#01CDFF" }}>
                                        <span style={{ borderRadius: "20px", backgroundColor: "white", border: "1px solid white", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }}></span>
                                    </Container>
                                    <div className="bed-1">Selected</div>
                                </div>
                                <div className="Unavaliable">
                                    <Container className="bed-0" style={{ backgroundColor: "#DCDFEB", border: "1px solid #B4B5D1" }}>
                                        <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #B4B5D1", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }} ></span>
                                    </Container>
                                    <div className="bed-0">Unavaliable</div>
                                </div>
                                <div className="LadyPatient">
                                    <Container className="bed-3" style={{ backgroundColor: "#F5E7F5", border: "1px solid #CDB3CD" }}>
                                        <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #CDB3CD", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }} ></span>
                                    </Container>
                                    <div className="bed-3">Lady Patient</div>
                                </div>
                                <div className="ForLadies">
                                    <Container className="bed-4" style={{ backgroundColor: "#FFFFFF", border: "1px solid #CEA5CE" }}>
                                        <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #CEA5CE", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }}></span>
                                    </Container>
                                    <div className="bed-4">For Ladies</div>
                                </div>
                                <div className="ForLadies-1">
                                    <Container className="bed-5" style={{ backgroundColor: "#FFFFFF", border: "1px solid #6293DB" }}>
                                        <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #6293DB", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }}></span>
                                    </Container>
                                    <div className="bed-5">For Ladies</div>
                                </div>
                            </div>
                        </div>
                        {/* <div style={{ display: "flex", justifyContent: "space-evenly", width: "74%", position: "relative", left: "250px", top: "40px" }}>
                            <div style={{ display: "flex", width: "20%", justifyContent: "space-evenly" }}>
                                <div style={{ border: "1px solid #C4C5D3", width: "57px", height: "28px", borderRadius: "3px" }}>
                                    <div style={{ border: "1px solid #C4C5D3", width: "7px", height: "22px", position: "relative", top: "2px", left: "3px", borderRadius: "3px" }} />
                                </div>
                                <div style={{ fontStyle: "poppins", fontWeight: 400, color: "black", lineHeight: "25px" }}>Available</div>
                            </div>
                            <div style={{ display: "flex", width: "20%", justifyContent: "space-evenly" }}>
                                <div style={{ border: "1px solid #01CDFF", backgroundColor: "#01CDFF", width: "57px", height: "28px", borderRadius: "3px" }}>
                                </div>
                                <div style={{ fontStyle: "poppins", fontWeight: 400, color: "black", lineHeight: "25px" }}>Selected</div>
                            </div>
                            <div style={{ display: "flex", width: "20%", justifyContent: "space-evenly" }}>
                                <div style={{ border: "1px solid #B4B5D1", width: "57px", height: "28px", borderRadius: "3px", backgroundColor: "#DCDFEB" }}>
                                    <div style={{ border: "1px solid #B4B5D1", width: "7px", height: "22px", position: "relative", top: "2px", left: "3px", borderRadius: "3px", backgroundColor: "#DCDFEB" }}></div>
                                </div>
                                <div style={{ fontStyle: "poppins", fontWeight: 400, color: "black", lineHeight: "25px" }}> Unavailable</div>
                            </div>
                            <div style={{ display: "flex", width: "20%", justifyContent: "space-evenly" }}>
                                <div style={{ border: "1px solid #C4C5D3", width: "57px", height: "28px", borderRadius: "3px", backgroundColor: "#F5E7F5" }}>
                                    <div style={{ border: "1px solid #C4C5D3", width: "7px", height: "22px", position: "relative", top: "2px", left: "3px", borderRadius: "3px", backgroundColor: "#F5E7F5" }}></div>
                                </div>
                                <div style={{ fontStyle: "poppins", fontWeight: 400, color: "black", lineHeight: "25px" }}>Lady patient</div>
                            </div>
                            <div style={{ display: "flex", width: "20%", justifyContent: "space-evenly" }}>
                                <div style={{ border: "1px solid #CEA5CE", width: "57px", height: "28px", borderRadius: "3px" }}>
                                    <div style={{ border: "1px solid #CEA5CE", width: "7px", height: "22px", position: "relative", top: "2px", left: "3px", borderRadius: "3px" }}></div>
                                </div>
                                <div style={{ fontStyle: "poppins", fontWeight: 400, color: "black", lineHeight: "25px" }}>For Ladies</div>
                            </div>
                            <div style={{ display: "flex", width: "20%", justifyContent: "space-evenly", }}>
                                <div style={{ border: "1px solid #6293DB", width: "57px", height: "28px", borderRadius: "3px" }}>
                                    <div style={{ border: "1px solid #6293DB", width: "7px", height: "22px", position: "relative", top: "2px", left: "3px", borderRadius: "3px" }}></div>
                                </div>
                                <div style={{ fontStyle: "poppins", fontWeight: 400, color: "black", lineHeight: "25px" }}>For Ladies</div>
                            </div>
                        </div> */}
                        <div className="container" style={{ position: 'relative', left: '-14px' }}>
                            <div className="container-1">
                                <div className="generalpart-1">
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-1">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + '-01', k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "1" && i.bedType === "2").map(k => (
                                            <div className="general-1">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "58px", color: "#fff" }}><span>a</span></span>
                                                </div>
                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-1">
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>
                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-10">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "1" && i.bedType === "2").map(k => (
                                            <div className="general-10">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-10">
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-02">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>
                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-2">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "2" && i.bedType === "2").map(k => (
                                            <div className="general-2">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                                <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-2">
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-20">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "2" && i.bedType === "2").map(k => (
                                            <div className="general-20">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-20">
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-3">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "3" && i.bedType === "2").map(k => (
                                            <div className="general-3">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                                <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-3">
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>
                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-30">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "3" && i.bedType === "2").map(k => (
                                            <div className="general-30">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-30">
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>
                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-4">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "4" && i.bedType === "2").map(k => (
                                            <div className="general-4">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                                <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-4">
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-40">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "4" && i.bedType === "2").map(k => (
                                            <div className="general-40">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-40">
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>
                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-5">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "5" && i.bedType === "2").map(k => (
                                            <div className="general-5">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                                <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>
                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-5">
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>
                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-50">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "5" && i.bedType === "2").map(k => (
                                            <div className="general-50">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-50">
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-6" >
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "6" && i.bedType === "2").map(k => (
                                            <div className="general-6" >
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                                <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-6" >
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-60">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "6" && i.bedType === "2").map(k => (
                                            <div className="general-60">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-60">
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "5" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div className="general-7" style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: '908px' }}>
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "7" && i.bedType === "2").map(k => (
                                            <div className="general-7" style={{ top: "908px" }}>
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                                <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                            </div>)) : <div className="general-7" style={{ top: "908px", background: 'var(--color-gray-100)' }}>
                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                    {displayBedAssignData.filter(i => i.side === "6" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                        <div className="general-70" style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: "" }}>
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">{k.roomNO}-01
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "7" && i.bedType === "2").map(k => (
                                            <div className="general-70" style={{ top: "" }}>
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNO}-02
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : <div className="general-70" style={{ top: "", background: 'var(--color-gray-100)' }}>
                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                            <Container
                                                style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                <span>
                                                    <div className="No401-01">
                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                        </div>
                                                    </div>
                                                </span></Container>
                                        </div>

                                    </div>}
                                </div>
                                <div className="semiprivatecontainer">
                                    <div className="semiPrivate">
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-1">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}

                                                        style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || '#FFFFFF', marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "1" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-1">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}

                                                            style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "3px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-1">
                                            <div className="semiPrivatebed-1">
                                                <Container
                                                    style={{ width: "110px", borderRadius: "4px", marginTop: "18px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-10">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "1" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-10">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "22px", backgroundColor: containerColors['101-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-10">
                                            <div className="semiPrivatebed-1">
                                                <Container
                                                    style={{ borderRadius: "4px", marginTop: "22px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-2">
                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "2" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-2">
                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-2">
                                            <div className="semiPrivatebed-2">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-20">

                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "2" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-20">

                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-20">

                                            <div className="semiPrivatebed-2">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "21px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-3">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "3" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-3">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-3">
                                            <div className="semiPrivatebed-3">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-30">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "3" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-30">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-30">
                                            <div className="semiPrivatebed-3">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-4">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "4" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-4">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-4">
                                            <div className="semiPrivatebed-4">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-40">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "4" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-40">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-40">
                                            <div className="semiPrivatebed-4">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-5">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "5" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-5">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-5">
                                            <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatebed-5">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-50">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "5" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-50">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-50">
                                            <div className="semiPrivatebed-5">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-6">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "6" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-6">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-6">
                                            <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatebed-6">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-60">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "6" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-60">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-60">
                                            <div className="semiPrivatebed-6">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "1" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-7">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "7" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-7">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-7">
                                            <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatebed-7">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>

                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "2" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-70">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "7" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-70">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-70">
                                            <div className="semiPrivatebed-7">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        <div className="general">
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-1">
                                                    <div className="generalBed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                            <span> <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div></span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "1" && i.bedType === "2").map(k => (
                                                    <div className="general-1">
                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span> <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div></span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) : <div className="general-1">
                                                <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span> <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div></span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-10">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span> <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div></span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "1" && i.bedType === "2").map(k => (
                                                    <div className="general-10">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span> <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div></span></Container>
                                                        </div>
                                                    </div>)) : <div className="general-10">
                                                <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-4">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span> <div className="No401-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div></span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-2">
                                                    <div className="generalBed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "2" && i.bedType === "2").map(k => (
                                                    <div className="general-2">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) : <div className="general-2">

                                                <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-20">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "2" && i.bedType === "2").map(k => (
                                                    <div className="general-20">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) :
                                                <div style={{ background: 'var(--color-gray-100)' }} className="general-20">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>}
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-3">
                                                    <div className="generalBed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) :
                                                displayBedAssignData.filter(i => (i.side === "8") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "3" && i.bedType === "2").map(k => (
                                                    <div className="general-3">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) :
                                                    <div style={{ background: 'var(--color-gray-100)' }} className="general-3">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-30">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "3" && i.bedType === "2").map(k => (
                                                    <div className="general-30">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) :
                                                <div style={{ background: 'var(--color-gray-100)' }} className="general-30">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>}
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-4">

                                                    <div className="generalBed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "4" && i.bedType === "2").map(k => (
                                                    <div className="general-4">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) : <div className="general-4">

                                                <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-40">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "4" && i.bedType === "2").map(k => (
                                                    <div className="general-40">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-40">
                                                <div className="generalBed-4">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-5">

                                                    <div className="generalBed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "5" && i.bedType === "2").map(k => (
                                                    <div className="general-5">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) : <div className="general-5">

                                                <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-50">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "5" && i.bedType === "2").map(k => (
                                                    <div className="general-50">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-50">
                                                <div className="generalBed-4">
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-6" >
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "6" && i.bedType === "2").map(k => (
                                                    <div className="general-6" >
                                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-6" >
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-60">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "6" && i.bedType === "2").map(k => (
                                                    <div className="general-60">
                                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-60">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "8" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div className="general-7" style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: '908px' }}>
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "7" && i.bedType === "2").map(k => (
                                                    <div className="general-7" style={{ top: "908px" }}>
                                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                    </div>)) : <div className="general-7" style={{ top: "908px", background: 'var(--color-gray-100)' }}>
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "7" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div className="general-70" style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: "" }}>
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "7" && i.bedType === "2").map(k => (
                                                    <div className="general-70" style={{ top: "" }}>
                                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : <div className="general-70" style={{ top: "", background: 'var(--color-gray-100)' }}>
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}


                                        </div>
                                    </div>
                                </div>

                                <div className="Pri">
                                    <div className="semiPrivates" style={{ top: "702px" }}>
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-1">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || '#FFFFFF', marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "7" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-1">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || '#FFFFFF', marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "3px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-1">
                                            <div className="semiPrivatebed-1">
                                                <Container
                                                    style={{ width: "110px", borderRadius: "4px", marginTop: "18px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-10">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "22px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "7" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-10">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "22px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-10">
                                            <div className="semiPrivatebed-1">
                                                <Container
                                                    style={{ borderRadius: "4px", marginTop: "22px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-2">
                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "6" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-2">
                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-2">
                                            <div className="semiPrivatebed-2">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-20">

                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "6" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-20">

                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-20">

                                            <div className="semiPrivatebed-2">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "21px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-3">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "5" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-3">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-3">
                                            <div className="semiPrivatebed-3">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-30">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "5" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-30">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-30">
                                            <div className="semiPrivatebed-3">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-4">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "4" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-4">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-4">
                                            <div className="semiPrivatebed-4">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-40">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "4" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-40">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-40">
                                            <div className="semiPrivatebed-4">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-5">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "3" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-5">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-5">
                                            <div className="semiPrivatebed-5">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-50">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "3" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-50">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-50">
                                            <div className="semiPrivatebed-5">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-6">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "2" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-6">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-6">
                                            <div className="semiPrivatebed-6">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-60">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "2" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-60">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-60">
                                            <div className="semiPrivatebed-6">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "4" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-7">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>

                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "1" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-7">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>

                                                            </span></Container>
                                                    </div>
                                                    <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                        <span></span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-7">
                                            <div className="semiPrivatebed-7">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>

                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "3" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-70">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "1" && i.bedType === "2").map(k => (
                                                <div className="semiPrivatecontaine0-70">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-70">
                                            <div className="semiPrivatebed-7">
                                                <Container
                                                    style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No101-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>                
                </div>

            </>}

            {patientMainChangeTab === 7 && <>
                <div className="bed-details" style={{ height: "1048px", position: "relative", left: "50px" }}>
                    <div className="bed-details-child" />
                    <div className="bed-details-child1" />
                    <div className="bedline-div" />
                    <div className="bedexpand-more-24px-parent">
                        <img
                            className="bedexpand-more-24px-icon"
                            alt=""
                            src="/expand-more-24px.svg"
                        />
                        <div className="beddetails">Transfer a Patient</div>
                    </div>
                    <div className="bedorgForm-fields" style={{ width: "calc(100% - 307px)", left: "155px" }}>
                        <LocalizationProvider dateAdapter={AdapterDateFns}>
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Type of Transfer
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Severity" name="typeOfTransfer" value={inputTransferData.typeOfTransfer} onChange={handleInputTransferChange}>
                                    {newNatureOfReactionInputData}
                                </Select>
                                <FormHelperText />
                            </FormControl>

                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Ward Location
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Severity" name="wardLocation" value={inputTransferData.wardLocation} onChange={handleInputTransferChange}>
                                    {newWardInputData}
                                </Select>
                                <FormHelperText />
                            </FormControl>



                        </LocalizationProvider>

                    </div>

                    <div className="bedorgForm-fields2" style={{ width: "calc(100% - 307px)", left: "155px" }}>
                        {inputTransferData.bedId === "" ?
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Room Bed
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Severity" name="bedId" value={inputTransferData.bedId} onChange={handleInputTransferChange}>
                                    {roomNumber != null && roomNumber.length > 0 && roomNumber.map((item, i) => {
                                        return (
                                            <MenuItem key={i} value={item.roomNo + "-" + item.bedNo}>{item.roomNo + "-" + item.bedNo}</MenuItem>
                                        )
                                    })}
                                </Select>
                                <FormHelperText />
                            </FormControl> : <><TextField
                                id="bedId"
                                name="bedId"
                                className="name-input13"
                                color="primary"
                                variant="outlined"
                                type="text"
                                label="Room Bed"
                                placeholder="Placeholder"
                                size="medium"
                                margin="none"
                                disabled={true}
                                value={inputTransferData.bedId}
                                onChange={handleInputAdmitChange}
                            /></>}

                        <TextField
                            id="facilityTreatingSpeciality1"
                            className="name-input13"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label="Facility Treating Speciality"
                            placeholder="Placeholder"
                            size="medium"
                            margin="none"                    
                            value={inputTransferData.facilityTreatingSpeciality1}
                            onChange={handleInputTransferChange}
                        />

                    </div>
                    {inputTransferData.bedId !== "" && <div className="name-input13 patient-Q15-dialogTitle" style={{ position: 'relative', top: '415px', left: '157px', fontSize: '14px' }}><a style={{ cursor: 'pointer' }} onClick={() => { inputTransferData.bedId = ""; setInputTransferData({ ...inputTransferData }) }}><u>Click and Change the bed transfer</u></a></div>}
                    <div className="bedorgForm-fields3" style={{ top: "447px", width: "calc(100% - 307px)", left: "155px" }}>
                        <FormControl className="name-input13" variant="outlined">
                            <InputLabel color="primary" ><span>Attending physician IEN
                            </span></InputLabel>
                            <Select color="primary" size="medium" label="Severity" name="attendingPhysician1" value={inputTransferData.attendingPhysician1} onChange={handleInputTransferChange}>
                                {getStaffDataItems.filter(i => i.role === "Physician Assistant").map((newData, i) => {
                                    return (
                                        <MenuItem key={i} value={newData.id}>{newData.name[0].given+" "+newData.name[0].family}</MenuItem>
                                    )
                                })}
                            </Select>
                            <FormHelperText />
                        </FormControl>
                        <FormControl className="name-input13" variant="outlined">
                            <InputLabel color="primary" ><span>Primary physician IEN
                            </span></InputLabel>
                            <Select color="primary" size="medium" label="Severity" name="primaryPhysician1" value={inputTransferData.primaryPhysician1} onChange={handleInputTransferChange}>
                                {getStaffDataItems.filter(i => i.role === "Registered Nurses").map((newData, i) => {
                                    return (
                                        <MenuItem key={i} value={newData.id}>{newData.name[0].given+" "+newData.name[0].family}</MenuItem>
                                    )
                                })}
                            </Select>
                            <FormHelperText />
                        </FormControl>

                    </div>
                    <div className="Address" style={{ width: "calc(100% - 307px)", left: "155px", top: "537px" }} >
                        <TextField
                            id="briefDescriptionTransfer"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"                         
                            label={
                                <span>
                                    Brief Description <span style={{ color: 'red' }}></span>
                                </span>
                            }
                            value={inputTransferData.briefDescriptionTransfer}
                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                            onChange={handleInputTransferChange}
                        />
                    </div>
                    <div className="bedorgForm-fields8" style={{ width: "calc(100% - 307px)", left: "155px" }}>

                        <LocalizationProvider dateAdapter={AdapterDateFns}>

                            <div className="selectoutlined">
                                <DatePicker
                                    label="Date"
                                    slotProps={{
                                        textField: {
                                            variant: "outlined",
                                            size: "medium",
                                            fullWidth: true,
                                            color: "primary",
                                        },
                                    }}
                                    value={inputTransferData.transferedDate}
                                    onChange={(newValue: any) => {
                                        inputTransferData.transferedDate = newValue;
                                        setInputTransferData({ ...inputTransferData });
                                    }}                                   
                                />
                            </div>


                        </LocalizationProvider>
                        <FormControl className="name-input13" variant="outlined">
                            <InputLabel color="primary" ><span>Transfered By
                            </span></InputLabel>
                            <Select color="primary" size="medium" label="Severity" name="transferedBy" value={inputTransferData.transferedBy} onChange={handleInputTransferChange}>
                                {getStaffDataItems.filter(i => i.role === "Registered Nurses").map((newData, i) => {
                                    return (
                                        <MenuItem key={i} value={newData.id}>{newData.name[0].given+" "+newData.name[0].family}</MenuItem>
                                    )
                                })}
                            </Select>
                            <FormHelperText />
                        </FormControl>
                    </div>
                    <div className="component-5011">
                        <div className="cancel-group">
                            <SecondaryButton
                                label="Clear"
                                secondaryButtonCursor="pointer"
                                onCancelContainerClick={null}
                            />
                            <div className="previous1">
                                <img className="bg-icon3" alt="" src={bottomImage} />
                                <div className="label5">Previous</div>
                            </div>
                            <PrimaryButton

                                label="Transfer"
                                primaryButtonCursor="pointer"
                                onNextContainerClick={handleTransferPageSave}
                            />
                        </div>
                    </div>

                </div>
            </>}
            {patientMainChangeTab === 8 && <>
                <div className="bed-details" style={{ height: "1048px", position: "relative", left: "50px" }}>
                    <div className="bed-details-child" />
                    <div className="bed-details-child1" />
                    <div className="bedline-div" />
                    <div className="bedexpand-more-24px-parent">
                        <img
                            className="bedexpand-more-24px-icon"
                            alt=""
                            src="/expand-more-24px.svg"
                        />
                        <div className="beddetails">Discharge a patient</div>
                    </div>
                    <div className="bedorgForm-fields" style={{ width: "calc(100% - 307px)", left: "155px" }}>
                        <LocalizationProvider dateAdapter={AdapterDateFns}>
                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Type of Discharge
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Severity" name="dischargeType" value={inputDischargeData.dischargeType} onChange={handleInputDischargeChange}>
                                    <MenuItem value="Normal">Normal</MenuItem>
                                    <MenuItem value="Emergency">Emergency</MenuItem>
                                </Select>
                                <FormHelperText />
                            </FormControl>

                            <FormControl className="name-input13" variant="outlined">
                                <InputLabel color="primary" ><span>Discharge By
                                </span></InputLabel>
                                <Select color="primary" size="medium" label="Discharge By" name="dischargeBy" value={inputDischargeData.dischargeBy} onChange={handleInputDischargeChange}>
                                    {getStaffDataItems.filter(i => i.role === "Physician Assistant").map((newData, i) => {
                                        return (
                                            <MenuItem key={i} value={newData.id}>{newData.name[0].given+" "+newData.name[0].family}</MenuItem>
                                        )
                                    })}
                                </Select>
                                <FormHelperText />
                            </FormControl>
                        </LocalizationProvider>
                    </div>


                    <div className="bedorgForm-fields2" style={{ width: "calc(100% - 307px)", left: "155px", top: "361px" }} >
                        <TextField
                            id="summaryOfCare"
                            className="destination-name-input"
                            color="primary"                  
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Summary of Care <span style={{ color: 'red' }}></span>
                                </span>
                            }
                            value={inputDischargeData.summaryOfCare}
                            onChange={handleInputDischargeChange}
                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                    </div>
                    <div className="bedorgForm-fields8" style={{ width: "calc(100% - 307px)", left: "155px" }}>

                        <LocalizationProvider dateAdapter={AdapterDateFns}>
                            <div className="selectoutlined">
                                <DatePicker
                                    label="Discharge Date"                               
                                    slotProps={{
                                        textField: {
                                            variant: "outlined",
                                            size: "medium",
                                            fullWidth: true,
                                            color: "primary",
                                        },
                                    }}
                                    value={inputDischargeData.dischargeDate}
                                    onChange={(newValue: any) => {
                                        inputDischargeData.dischargeDate = newValue;
                                        setInputDischargeData({ ...inputDischargeData });
                                    }} 
                                />
                            </div>


                        </LocalizationProvider>

                    </div>
                    <div className="component-5011">
                        <div className="cancel-group">
                            <SecondaryButton
                                label="Clear"
                                secondaryButtonCursor="pointer"
                                onCancelContainerClick={null}
                            />
                            <div className="previous1">
                                <img className="bg-icon3" alt="" src={bottomImage} />
                                <div className="label5">Previous</div>
                            </div>
                            <PrimaryButton

                                label="Transfer"
                                primaryButtonCursor="pointer"
                                onNextContainerClick={handlePageSaveDischarge}
                            />
                        </div>
                    </div>

                </div>
            </>}

            {patientMainChangeTab === 9 && <div>
                <div style={{ top: "6px", background: '#2D56AD', height: '98px', display: 'flex', width: 'calc(100% - 18px)', position: 'absolute', left: "82px" }}><div id="mettlerEmptyPadding" className="p-col-12 p-md-1">

                    <div id="mettlerEmptyPadding" className="p-col-12 p-md-1">
                        <img onClick={toggleVisibility} style={{ width: '60px', height: '60px', position: 'relative', left: '13px', top: '23px', cursor: "pointer" }} src={AvatarBigImage}></img>
                    </div>
                    <div id="mettlerEmptyPadding" style={{ display: 'flex', flexDirection: 'column' }} className="p-col-12 p-md-6">
                        <div style={{ display: 'flex', flexDirection: 'row', position: "absolute", top: "7px", left: "97px" }}>
                            <div style={{ position: 'relative', top: '19px', minWidth: 'max-content', fontSize: '18px' }} className="App-TopBar-PatientName">{inputPatientInfo}</div>
                            <div style={{ position: 'relative', top: '23px', left: '6px', minWidth: 'max-content', fontSize: '14px' }} className="App-TopBar-PatientAge">{patientAge} Years</div>

                            <div className="admit-patient-ss" style={{ width: '105px', height: '24px', background: '#5574B7', border: '1px solid #5574B7', position: 'relative', top: '19px', left: '23px' }}>
                                <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">SS#:</div>
                                <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">SS-{patientSSN}</div>
                            </div>
                            <div className="admit-patient-ss" style={{ width: '110px', height: '24px', position: 'relative', left: '40px', top: '19px', background: '#5574B7', border: '1px solid #5574B7' }}>
                                <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">MR:</div>
                                <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">MR-345</div>
                            </div>
                        </div>
                        <div style={{ display: 'flex', flexDirection: 'row', position: "absolute", top: "20px", left: "86px" }}>
                            <div style={{ position: 'relative', top: '32px', display: 'flex' }}>
                                <img style={{ width: '26px', height: '26px', position: 'relative', top: '8px', left: '5px', fontSize: '10px' }} src={bloodBag}></img>
                                <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '1px', fontSize: '10px' }} className="App-TopBar-BloodName">Blood</span>
                                <span style={{ position: 'relative', top: '14px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">A</span><span style={{ position: 'relative', top: '13px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">+</span>
                            </div>
                            <div style={{ position: 'relative', top: '30px', left: '', display: 'flex' }}>
                                <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px', fontSize: '10px' }} src={bloodDrop}></img>
                                <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '5px', fontSize: '10px' }} className="App-TopBar-BloodName">Height</span>
                                <span style={{ position: 'relative', top: '18px', left: '-25px', fontSize: '12px', width: '30px' }} className="App-TopBar-PatientValue">--</span>
                            </div>
                            <div style={{ position: 'relative', top: '30px', display: 'flex' }}>
                                <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNew}></img>
                                <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '8px', fontSize: '10px' }} className="App-TopBar-BloodName">Weight</span>
                                <span style={{ position: 'relative', top: '23px', left: '-29px', fontSize: '12px' }} className="App-TopBar-PatientValue">45kg</span>
                            </div>
                            <div style={{ position: 'relative', top: '30px', display: 'flex' }}>
                                <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNewOne}></img>
                                <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '9px', fontSize: '10px' }} className="App-TopBar-BloodName">DOB</span>
                                <span style={{ position: 'relative', top: '22px', left: '-13px', fontSize: '12px', width: '75px' }} className="App-TopBar-PatientValue">{patientDateOfBirth}</span>
                            </div>
                            <div style={{ position: 'relative', top: '30px', left: '10px', display: 'flex' }}>
                                <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={AvatarDoctorImage}></img>
                                <span style={{ fontSize: '16px', position: 'relative', top: '11px', left: '13px', width: '200px' }} className="App-TopBar-PatientValue">Dr. Linda Blair, OP</span>
                            </div>
                        </div>
                    </div>

                </div>
                    <div id="mettlerEmptyPadding" className="p-col-12 p-md-5">  </div>
                </div>

                {/* // )}   <div style={{ position: "relative", left: isVisible ? "-54px" : "29px", display: "flex", width: "289px", fontSize: "15px", top: isVisible ? "" : "20px" }}>{page_label}</div> */}
                <div style={{ display: "flex", justifyContent: "space-between", textAlign: 'center', position: "relative", top: "100px", width: "calc(100% - -8px)", height: "82px" }} >

                    <div style={{ position: "relative", left: "29px", top: "20px", display: "flex", width: "289px", fontSize: "15px", fontWeight: 600, whiteSpace: "nowrap" }}>{page_label}</div>
                    <div style={{ display: "flex", position: "relative", left: "-27px", top: "20px", gap: "24px" }}>
                        <div style={{ border: ' 1px solid #D4D4D4', cursor: "pointer", display: "flex", left: "825px", top: "29px", gap: "9px", backgroundColor: "#F8F9FB", height: "32px", width: "127.93px", borderRadius: "4px" }}>
                            <div><i style={{ position: "relative", top: "5px", left: "7px" }} className="large material-icons">file_download</i></div>
                            <div style={{ position: "relative", top: "6px" }}>{/*downl_oade*/}Download</div>
                        </div>
                        <div style={{ border: ' 1px solid #D4D4D4', cursor: "pointer", display: "flex", gap: "9px", top: "29px", left: "977px", width: "96px", height: "32px", backgroundColor: "#F8F9FB", borderRadius: "4px" }}>
                            <div><i style={{ position: "absolute", top: "5px", left: "155px" }} className="large material-icons">print</i></div>
                            <div style={{ position: "absolute", top: "6px", left: "190px", fontSize: "14px", color: "black" }}>{/*pr_int*/}Print</div>
                        </div>
                    </div>


                </div>
                <div className="dashboard-title" style={{ position: "relative", top: "84px", width: "calc(100%  - 20px)", left: "" }}></div>
                <div id="removePaddingTop" style={{ position: "absolute", top: isVisible ? "40px" : "" }} className="p-col-12">
                    <FormContext.Provider value={{ handleChange }}>
                        <div style={{ border: '0px', position: "relative", top: "200px", width: "calc(100% - 112px)", left: "unset", right: "-194px" }} className="p-fluid p-grid">

                            {fields ? fields.map((field, i) => <Element key={i} field={field} />) : null}
                            <div style={{ display: 'flex', position: "relative", left: "-89px" }} className="p-col-12 p-md-12">
                                <div className="p-col-12 p-md-4">     </div>
                                <div style={{ textAlign: 'center', flexDirection: "row-reverse", display: "flex", position: "relative", left: '369px', top: '108px' }} className="p-col-12 p-md-4"><Button label="Save" onClick={(e) => handleSubmit(e)} style={{ width: "fit-content", backgroundColor: "#1F489F", color: "white", borderColor: "#1F489F" }} />
                                    &nbsp;&nbsp;&nbsp;
                                    <Button style={{ width: 'fit-content', backgroundColor: "#C9D1E2", color: "black", borderColor: "#C9D1E2" }} label="Cancel" onClick={() => history.goBack()} /></div>
                                <div className="p-col-12 p-md-4"></div>
                            </div>

                        </div>
                    </FormContext.Provider>

                </div>

            </div>}
            {patientMainChangeTab === 10 && <>
                <div style={{ top: "6px", background: decryptPatientid != "" ? '#2D56AD' : "#FFF", height: decryptPatientid != "" ? '98px' : '0px', display: 'flex', width: 'calc(100% - 0px)', position: 'absolute', left: "74px" }} >
                    {decryptPatientid && <>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-1">

                            <img style={{ width: '60px', height: '60px', position: 'relative', left: '21px', top: '23px', borderRadius: patientImage !== "" ? "30px" : "" }} src={patientImage !== "" ? patientImage : AvatarBigImage}></img>
                        </div>
                        <div id="mettlerEmptyPadding" style={{ display: 'flex', flexDirection: 'column' }} className="p-col-12 p-md-6">
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '19px', minWidth: 'max-content', fontSize: '18px' }} className="App-TopBar-PatientName">{inputPatientInfo}</div>
                                <div style={{ position: 'relative', top: '23px', left: '6px', minWidth: 'max-content', fontSize: '14px' }} className="App-TopBar-PatientAge">{patientAge} Years</div>

                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', background: '#5574B7', border: '1px solid #5574B7', position: 'relative', top: '19px', left: '23px' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">SS#:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">SS-{patientSSN}</div>
                                </div>
                                <div className="admit-patient-ss" style={{ width: '110px', height: '24px', position: 'relative', left: '40px', top: '19px', background: '#5574B7', border: '1px solid #5574B7' }}>
                                    <div style={{ fontWeight: 400, fontSize: '12px', opacity: 0.6, color: '#FFF' }} className="admit-patient-profileName">MR:</div>
                                    <div style={{ fontWeight: 400, fontSize: '12px', color: '#FFF' }} className="admit-patient-profileName">MR-345</div>
                                </div>
                            </div>
                            <div style={{ display: 'flex', flexDirection: 'row' }}>
                                <div style={{ position: 'relative', top: '32px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '8px', left: '5px', fontSize: '10px' }} src={bloodBag}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '1px', fontSize: '10px' }} className="App-TopBar-BloodName">Blood</span>
                                    <span style={{ position: 'relative', top: '14px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">A</span><span style={{ position: 'relative', top: '13px', left: '-22px', fontSize: '12px' }} className="App-TopBar-PatientValue">+</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px', fontSize: '10px' }} src={bloodDrop}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '5px', fontSize: '10px' }} className="App-TopBar-BloodName">Height</span>
                                    <span style={{ position: 'relative', top: '18px', left: '-25px', fontSize: '12px', width: '30px' }} className="App-TopBar-PatientValue">--</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNew}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '6px', top: '8px', fontSize: '10px' }} className="App-TopBar-BloodName">Weight</span>
                                    <span style={{ position: 'relative', top: '23px', left: '-29px', fontSize: '12px' }} className="App-TopBar-PatientValue">45kg</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', display: 'flex' }} >
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={bloodDropNewOne}></img>
                                    <span style={{ opacity: 0.6000000238418579, position: 'relative', left: '7px', top: '9px', fontSize: '10px' }} className="App-TopBar-BloodName">DOB</span>
                                    <span style={{ position: 'relative', top: '22px', left: '-13px', fontSize: '12px', width: '75px' }} className="App-TopBar-PatientValue">{patientDateOfBirth}</span>
                                </div>
                                <div style={{ position: 'relative', top: '30px', left: '10px', display: 'flex' }}>
                                    <img style={{ width: '26px', height: '26px', position: 'relative', top: '10px', left: '5px' }} src={AvatarDoctorImage}></img>
                                    <span style={{ fontSize: '16px', position: 'relative', top: '11px', left: '13px', width: '200px' }} className="App-TopBar-PatientValue">Dr. Linda Blair, OP</span>
                                </div>
                            </div>
                        </div>
                        <div id="mettlerEmptyPadding" className="p-col-12 p-md-5">  </div>
                    </>}
                </div>
                <div className="spAssignment-details-child" style={{ position: 'absolute', top: "106px", left: '288px', height: patientVisitTab === 1 || patientVisitTab === 0 ? '1561px' : '-webkit-fill-available' }} />
                <div style={{ position: "absolute", top: "123.5px", left: "85px", fontWeight: "bold", fontSize: "18px" }}>Treatment Plan</div>
                <div className="psaAssignment-details-child2" style={{ position: "absolute", width: "calc(100% - 13px)", top: "156.5px", right: "210.5px", left: "85px", borderTop: "1px solid var(--color-gainsboro-100)", height: "1px" }} />
                <div className="psaAssignment-details-child2" style={{ position: "absolute", width: "calc(100% - 13px)", top: "198px", right: "210.5px", left: "85px", borderTop: "1px solid var(--color-gainsboro-100)", height: "1px" }} />
                <div style={{ position: "absolute", width: "calc(100% - 339px)", top: "167px", right: "925px", left: "85px", height: "24px" }}>
                    <span style={{ width: '1px', height: '20px', color: '#BBC5CE', position: 'relative', left: '241px', top: '-23px', borderLeftStyle: 'groove' }}></span>
                    <a style={{ cursor: 'pointer' }}><img src={switchVertical} style={{ width: '24px', height: '24px', position: 'relative', left: '511px', top: '-46px' }}></img></a>
                    <img src={filterList} style={{ width: '24px', height: '24px', position: 'relative', left: '529px', top: '-48px' }}></img>
                    <a style={{ cursor: 'pointer' }} onClick={handleToggleDialog}>
                        <img onClick={Visibility} src={addSymbol} style={{ width: '24px', height: '24px', position: 'relative', left: '543px', top: '-48px' }} />
                    </a>
                    <input type="text" className="dashboard-search-text" id="new" name="new" placeholder="Search" style={{ paddingLeft: '36px', top: '-46px', fontFamily: 'system-ui', position: 'relative', width: '165px', left: '552px' }} />
                    <img src={searchImage} style={{ width: '20x', height: '20px', position: 'relative', left: '391px', top: '-48px', opacity: 0.3 }}></img>

                </div>


                {treatmentDialog && (
                    <div
                        ref={contentRef}
                        style={{
                            borderRadius: "5px",
                            position: "relative",
                            top: "146px",
                            left: "501px",
                            zIndex: 1,
                            width: "215px",
                            backgroundColor: "white",
                            boxShadow: " -2px 6px 11px #888895",
                        }}
                    >
                        {newFormName.length > 0 &&
                            newFormName
                                .filter((name) => name.toLowerCase().includes(searchTerm.toLowerCase()))
                                .filter(col => {        
                                    return newTreatmentPlan !== undefined && newTreatmentPlan.length>0 ? !newTreatmentPlan.find(selected=> col === selected):col
                                  })
                                .map((name, index) => (
                                    <a
                                        key={index}
                                        style={{ cursor: "pointer" }}
                                        onClick={() => handleTreatmentChange(name)}
                                    >
                                        <div
                                            id="hover"
                                            key={index}
                                            style={{
                                                padding: "8px", // Optional padding for each item
                                                borderBottom: "1px solid #ccc", // Optional border between items
                                            }}
                                        >
                                            <img
                                                src={Groupss}
                                                style={{
                                                    fontWeight: "bolder",
                                                    color: "#000000",
                                                    fontSize: "35px",
                                                    marginRight: "8px", // Optional margin between icon and text
                                                }}
                                            ></img>
                                            <span style={{ fontSize: "17px" }}>{name}</span>
                                        </div>
                                    </a>
                                ))}
                    </div>
                )}


                <DataTable style={{ border: '0px', top: "156px", left: "73px", position: 'absolute', width: 'calc(100% - 8px)' }}
                    value={treatmentPlanData}
                    selectionMode="multiple"
                    rows={50} scrollable={true} onRowSelect={onRowChangeTreatmentPlan}
                    responsive={true} selection={selectedValues} onSelectionChange={onSelectionChangedData}
                    emptyMessage="No records found">
                    <Column selectionMode="multiple" headerStyle={{ width: '11%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '17%', background: '#FFF' }}></Column>
                    <Column body={incrementValue} header="S.No." headerStyle={{ position: "relative", left: "9px", whiteSpace: "nowrap", width: '19%', textAlign: 'start', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '55%', background: '#FFF' }} />
                    <Column field="form.name" header="Name " headerStyle={{ position: "relative", left: "40px", whiteSpace: "nowrap", width: '39%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '23%', background: '#FFF', position: "relative", left: "-18px" }} />
                    <Column field="form.organization" header="Organization" headerStyle={{ position: "relative", left: "3px", whiteSpace: "nowrap", width: '36%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '15%', background: '#FFF', position: "relative", left: "-13px" }} body={dataOrganization} />
                    <Column field="id" header="Number of Fields" headerStyle={{ position: "relative", left: "13px", whiteSpace: "nowrap", width: '35%', background: '#F2F4F9', color: '#9DA1C3', fontFamily: 'Poppins', fontSize: '12px', fontWeight: 500 }} style={{ borderLeft: '0px', borderRight: '0px', width: '57%', background: '#FFF' }} body={dataFieldsLength} />

                </DataTable>
            </>}
            <Dialog maxWidth={'md'} PaperProps={{ sx: { width: '1489px', maxWidth: '1500px', position: 'absolute', top: '0px', height: 'calc(100% - 64px)' } }}
                open={dialogBedView}
                onClose={() => { setDiaglogBedView(false) }}
            >
                <DialogTitle style={{ overflowX: 'hidden' }}>
                    <div style={{ position: 'relative', top: '12px', textAlign: 'center' }} className="patient-Q15-dialogTitle">Bed Occupied Information</div>
                    <div style={{ position: 'relative', left: '1350px', top: "-24px", marginBottom: '-32px' }}> <SecondaryButton
                        label="Close"
                        secondaryButtonCursor="pointer"
                        onCancelContainerClick={() => { setDiaglogBedView(false) }}
                    /></div>
                </DialogTitle>
                <DialogContent style={{ padding: '0px', overflowX: 'hidden', background: '#F8FAFB' }}>
                    <div className="bed-details" style={{ height: "1089px" }}>
                        <div className="bed-details-child" />
                        <div className="bed-details-child1" />
                        {/* <div className="bedline-div" /> */}
                        <div >
                            <img
                                className="bedexpand-more-24px-icon"
                                alt=""
                                src="/expand-more-24px.svg"
                            />
                        </div>
                        <div style={{ top: "11px", background: decryptPatientid != "" ? '#2D56AD' : "#FFF", height: decryptPatientid != "" ? '98px' : '0px', display: 'flex', width: 'calc(100% - 0px)', position: 'absolute', left: "9px" }} >

                        </div>
                        <div className="bed-details" style={{ height: "1089px" }}>
                            <div className="bed-details-child" />

                            <div className="bedline-div" />
                            <div className="bedexpand-more-24px-parent">
                                <img
                                    className="bedexpand-more-24px-icon"
                                    alt=""
                                    src="/expand-more-24px.svg"
                                />
                                <div className="beddetails">Select Bed</div>
                                <div className="beddetailsAvaliables" style={{ gap: '64px' }}>
                                    <div className="Available">
                                        <Container className="bed" style={{ backgroundColor: "white", border: '1px solid #C4C5D3' }}>
                                            <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "white", border: "1px solid #C4C5D3", marginLeft: "-20px", marginTop: "2px", marginBottom: "2px" }}></span>
                                        </Container>
                                        <div className="bed">Available</div>
                                    </div>
                                    <div className="Selected">
                                        <Container className="bed-1" style={{ backgroundColor: "#01CDFF" }}>
                                            <span style={{ borderRadius: "20px", backgroundColor: "white", border: "1px solid white", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }}></span>
                                        </Container>
                                        <div className="bed-1">Selected</div>
                                    </div>
                                    <div className="Unavaliable">
                                        <Container className="bed-0" style={{ backgroundColor: "#DCDFEB", border: "1px solid #B4B5D1" }}>
                                            <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #B4B5D1", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }} ></span>
                                        </Container>
                                        <div className="bed-0">Unavaliable</div>
                                    </div>
                                    <div className="LadyPatient">
                                        <Container className="bed-3" style={{ backgroundColor: "#F5E7F5", border: "1px solid #CDB3CD" }}>
                                            <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #CDB3CD", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }} ></span>
                                        </Container>
                                        <div className="bed-3">Lady Patient</div>
                                    </div>
                                    <div className="ForLadies">
                                        <Container className="bed-4" style={{ backgroundColor: "#FFFFFF", border: "1px solid #CEA5CE" }}>
                                            <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #CEA5CE", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }}></span>
                                        </Container>
                                        <div className="bed-4">For Ladies</div>
                                    </div>
                                    <div className="ForLadies-1">
                                        <Container className="bed-5" style={{ backgroundColor: "#FFFFFF", border: "1px solid #6293DB" }}>
                                            <span style={{ width: "5px", borderRadius: "20px", backgroundColor: "#FFFFFF", border: "1px solid #6293DB", marginLeft: "-20px", marginTop: "3px", marginBottom: "3px" }}></span>
                                        </Container>
                                        <div className="bed-5">For Ladies</div>
                                    </div>
                                </div>
                            </div>
                            <div className="container" style={{ position: 'relative', left: '-14px' }}>
                                <div className="container-1">
                                    <div className="generalpart-1">
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-1">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + '-01', k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "1" && i.bedType === "2").map(k => (
                                                <div className="general-1">
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                        <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "58px", color: "#fff" }}><span>a</span></span>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-1">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "1" && ((i.bedType === "1" || i.bedType === "3") || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-10">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "1" && i.bedType === "2").map(k => (
                                                <div className="general-10">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-10">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-02">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-2">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "2" && i.bedType === "2").map(k => (
                                                <div className="general-2">
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-2">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-20">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "2" && i.bedType === "2").map(k => (
                                                <div className="general-20">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-20">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-3">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "3" && i.bedType === "2").map(k => (
                                                <div className="general-3">
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-3">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-30">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "3" && i.bedType === "2").map(k => (
                                                <div className="general-30">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-30">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-4">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "4" && i.bedType === "2").map(k => (
                                                <div className="general-4">
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-4">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-40">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "4" && i.bedType === "2").map(k => (
                                                <div className="general-40">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-40">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-12px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-5">
                                                <div className="generalBed-1" style={{ position: "relative", left: "-10px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "5" && i.bedType === "2").map(k => (
                                                <div className="general-5">
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>
                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-5">
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>
                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-50">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "5" && i.bedType === "2").map(k => (
                                                <div className="general-50">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-50">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-6" >
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "6" && i.bedType === "2").map(k => (
                                                <div className="general-6" >
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-6" >
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-60">
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "6" && i.bedType === "2").map(k => (
                                                <div className="general-60">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-60">
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "5" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "5" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div className="general-7" style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: '908px' }}>
                                                <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "5") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "5") && i.position === "7" && i.bedType === "2").map(k => (
                                                <div className="general-7" style={{ top: "908px" }}>
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                    <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                </div>)) : <div className="general-7" style={{ top: "908px", background: 'var(--color-gray-100)' }}>
                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                        {displayBedAssignData.filter(i => i.side === "6" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "6" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                            <div className="general-70" style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: "" }}>
                                                <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                    <Container
                                                        onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                        style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No401-01">{k.roomNO}-01
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>)) : displayBedAssignData.filter(i => (i.side === "6") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "6") && i.position === "7" && i.bedType === "2").map(k => (
                                                <div className="general-70" style={{ top: "" }}>
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">{k.roomNO}-02
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : <div className="general-70" style={{ top: "", background: 'var(--color-gray-100)' }}>
                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                <Container
                                                    style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                    <span>
                                                        <div className="No401-01">
                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                            </div>
                                                        </div>
                                                    </span></Container>
                                            </div>

                                        </div>}
                                    </div>
                                    <div className="semiprivatecontainer">
                                        <div className="semiPrivate">
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-1">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}

                                                            style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || '#FFFFFF', marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "1" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-1">
                                                        <div className="semiPrivatebed-1">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}

                                                                style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "3px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-1">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        style={{ width: "110px", borderRadius: "4px", marginTop: "18px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-10">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "1" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-10">
                                                        <div className="semiPrivatebed-1">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "22px", backgroundColor: containerColors['101-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-10">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        style={{ borderRadius: "4px", marginTop: "22px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-2">
                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "2" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-2">
                                                        <div className="semiPrivatebed-2">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-2">
                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-20">

                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "2" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-20">

                                                        <div className="semiPrivatebed-2">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-20">

                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "21px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-3">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "3" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-3">
                                                        <div className="semiPrivatebed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-3">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-30">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "3" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-30">
                                                        <div className="semiPrivatebed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-30">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-4">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "4" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-4">
                                                        <div className="semiPrivatebed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-4">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-40">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "4" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-40">
                                                        <div className="semiPrivatebed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-40">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-5">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "5" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-5">
                                                        <div className="semiPrivatebed-5">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-5">
                                                <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatebed-5">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-50">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "5" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-50">
                                                        <div className="semiPrivatebed-5">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-50">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-6">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "6" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-6">
                                                        <div className="semiPrivatebed-6">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-6">
                                                <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatebed-6">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-60">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "6" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-60">
                                                        <div className="semiPrivatebed-6">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-60">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "1" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "1" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-7">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "1") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "1") && i.position === "7" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-7">
                                                        <div className="semiPrivatebed-7">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-7">
                                                <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatebed-7">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>

                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "2" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "2" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-70">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "2") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "2") && i.position === "7" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-70">
                                                        <div className="semiPrivatebed-7">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-70">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            <div className="general">
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-1">
                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                                <span> <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div></span></Container>
                                                        </div>

                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "1" && i.bedType === "2").map(k => (
                                                        <div className="general-1">
                                                            <div className="generalBed-3">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span> <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div></span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) : <div className="general-1">
                                                    <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span> <div className="No401-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div></span></Container>
                                                    </div>
                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-10">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span> <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div></span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "1" && i.bedType === "2").map(k => (
                                                        <div className="general-10">
                                                            <div className="generalBed-4">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span> <div className="No401-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div></span></Container>
                                                            </div>
                                                        </div>)) : <div className="general-10">
                                                    <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-4">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span> <div className="No401-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div></span></Container>
                                                    </div>
                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-2">
                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "2" && i.bedType === "2").map(k => (
                                                        <div className="general-2">

                                                            <div className="generalBed-3">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) : <div className="general-2">

                                                    <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-20">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "2" && i.bedType === "2").map(k => (
                                                        <div className="general-20">
                                                            <div className="generalBed-4">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                        </div>)) :
                                                    <div style={{ background: 'var(--color-gray-100)' }} className="general-20">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>}
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-3">
                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) :
                                                    displayBedAssignData.filter(i => (i.side === "8") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "3" && i.bedType === "2").map(k => (
                                                        <div className="general-3">

                                                            <div className="generalBed-3">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) :
                                                        <div style={{ background: 'var(--color-gray-100)' }} className="general-3">

                                                            <div className="generalBed-3">
                                                                <Container
                                                                    style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                        </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-30">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "3" && i.bedType === "2").map(k => (
                                                        <div className="general-30">
                                                            <div className="generalBed-4">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                        </div>)) :
                                                    <div style={{ background: 'var(--color-gray-100)' }} className="general-30">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>}
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-4">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "4" && i.bedType === "2").map(k => (
                                                        <div className="general-4">

                                                            <div className="generalBed-3">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) : <div className="general-4">

                                                    <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-40">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "4" && i.bedType === "2").map(k => (
                                                        <div className="general-40">
                                                            <div className="generalBed-4">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                        </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-40">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-5">

                                                        <div className="generalBed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-21px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "5" && i.bedType === "2").map(k => (
                                                        <div className="general-5">

                                                            <div className="generalBed-3">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) : <div className="general-5">

                                                    <div style={{ background: 'var(--color-gray-100)' }} className="generalBed-3">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-50">
                                                        <div className="generalBed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "5" && i.bedType === "2").map(k => (
                                                        <div className="general-50">
                                                            <div className="generalBed-4">
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                        </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-50">
                                                    <div className="generalBed-4">
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-20px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-6" >
                                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "6" && i.bedType === "2").map(k => (
                                                        <div className="general-6" >
                                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-6" >
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="general-60">
                                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "6" && i.bedType === "2").map(k => (
                                                        <div className="general-60">
                                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>

                                                        </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="general-60">
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", borderRadius: "4px", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "8" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "8" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div className="general-7" style={{ borderRadius: '7px', width: '48px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: '908px' }}>
                                                        <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "8") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "8") && i.position === "7" && i.bedType === "2").map(k => (
                                                        <div className="general-7" style={{ top: "908px" }}>
                                                            <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>
                                                            <span style={{ background: "#fff", position: "absolute", top: "16px", width: "2px", height: "85px", left: "49px", color: "#fff" }}><span>a</span></span>

                                                        </div>)) : <div className="general-7" style={{ top: "908px", background: 'var(--color-gray-100)' }}>
                                                    <div className="generalBed-1" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>}
                                                {displayBedAssignData.filter(i => i.side === "7" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "7" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                    <div className="general-70" style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "", top: "" }}>
                                                        <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : displayBedAssignData.filter(i => (i.side === "7") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "7") && i.position === "7" && i.bedType === "2").map(k => (
                                                        <div className="general-70" style={{ top: "" }}>
                                                            <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                                <Container
                                                                    onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                    style={{ transform: "rotate(-90deg)", border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "40px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                                    <span>
                                                                        <div className="No401-01">{k.roomNo + " - " + k.bedNo}
                                                                            <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                            </div>
                                                                        </div>
                                                                    </span></Container>
                                                            </div>

                                                        </div>)) : <div className="general-70" style={{ top: "", background: 'var(--color-gray-100)' }}>
                                                    <div className="generalBed-2" style={{ position: "relative", left: "-9px" }}>
                                                        <Container
                                                            style={{ transform: "rotate(-90deg)", width: "90px", marginTop: "40px", marginLeft: "-11px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No401-01">
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>}


                                            </div>
                                        </div>
                                    </div>

                                    <div className="Pri">
                                        <div className="semiPrivates" style={{ top: "702px" }}>
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-1">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || '#FFFFFF', marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "7" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-1">
                                                        <div className="semiPrivatebed-1">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ width: "110px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || '#FFFFFF', marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "3px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-1">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        style={{ width: "110px", borderRadius: "4px", marginTop: "18px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-12px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "7" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-10">
                                                    <div className="semiPrivatebed-1">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "22px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "7" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "7" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-10">
                                                        <div className="semiPrivatebed-1">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", marginTop: "22px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-10">
                                                <div className="semiPrivatebed-1">
                                                    <Container
                                                        style={{ borderRadius: "4px", marginTop: "22px", marginLeft: "15px", marginRight: "15px", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-2">
                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "6" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-2">
                                                        <div className="semiPrivatebed-2">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-2">
                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "6" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-20">

                                                    <div className="semiPrivatebed-2">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "6" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "6" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-20">

                                                        <div className="semiPrivatebed-2">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "21px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-20">

                                                <div className="semiPrivatebed-2">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "21px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-3">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "5" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-3">
                                                        <div className="semiPrivatebed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #CEA5CE", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-3">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "5" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-30">
                                                    <div className="semiPrivatebed-3">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "5" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "5" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-30">
                                                        <div className="semiPrivatebed-3">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-30">
                                                <div className="semiPrivatebed-3">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-4">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "4" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-4">
                                                        <div className="semiPrivatebed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-4">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "4" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-40">
                                                    <div className="semiPrivatebed-4">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "4" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "4" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-40">
                                                        <div className="semiPrivatebed-4">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-40">
                                                <div className="semiPrivatebed-4">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-5">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "3" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-5">
                                                        <div className="semiPrivatebed-5">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-5">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "3" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-50">
                                                    <div className="semiPrivatebed-5">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "3" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "3" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-50">
                                                        <div className="semiPrivatebed-5">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-50">
                                                <div className="semiPrivatebed-5">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-6">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "2" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-6">
                                                        <div className="semiPrivatebed-6">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #CDB3CD", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-6">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "2" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-60">
                                                    <div className="semiPrivatebed-6">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "2" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "2" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-60">
                                                        <div className="semiPrivatebed-6">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-60">
                                                <div className="semiPrivatebed-6">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "4" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "4" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ height: '73px', borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-7">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>

                                                            </span></Container>
                                                    </div>
                                                </div>)) : displayBedAssignData.filter(i => (i.side === "4") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "4") && i.position === "1" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-7">
                                                        <div className="semiPrivatebed-7">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: "1px solid #B4B5D1", borderRadius: "4px", width: "90px", marginTop: "17px", backgroundColor: containerColors[k.roomNo + '-01'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-01">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>

                                                                </span></Container>
                                                        </div>
                                                        <span style={{ borderRadius: "20px", backgroundColor: "#FFFFFF", marginLeft: "14px", marginRight: "14px", marginTop: "24px", marginBottom: "0px", height: "5px" }}>
                                                            <span></span></span>
                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-7">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "17px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-01">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-13px" }}><span><span></span></span>
                                                                </div>
                                                            </div>

                                                        </span></Container>
                                                </div>
                                            </div>}
                                            {displayBedAssignData.filter(i => i.side === "3" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => i.side === "3" && i.position === "1" && (i.bedType === "1" || i.bedType === "3")).map(k => (
                                                <div style={{ borderRadius: '7px', border: k.bedType === "3" ? "1px solid palevioletred" : "" }} className="semiPrivatecontaine0-70">
                                                    <div className="semiPrivatebed-7">
                                                        <Container
                                                            onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                            style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                            <span>
                                                                <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                    <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                    </div>
                                                                </div>
                                                            </span></Container>
                                                    </div>

                                                </div>)) : displayBedAssignData.filter(i => (i.side === "3") && i.position === "1" && i.bedType === "2").map((k) => { return k; }).length > 0 ? displayBedAssignData.filter(i => (i.side === "3") && i.position === "1" && i.bedType === "2").map(k => (
                                                    <div className="semiPrivatecontaine0-70">
                                                        <div className="semiPrivatebed-7">
                                                            <Container
                                                                onClick={() => handleContainerClick(k.roomNo + " - " + k.bedNo, k.id, inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "Yes" : "No")}
                                                                style={{ border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", borderRadius: "4px", width: "90px", marginTop: "18px", backgroundColor: containerColors[k.roomNo + '-02'] || inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "rgb(220, 223, 235)" : "#FFFFFF", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                                <span>
                                                                    <div className="No101-02">{k.roomNo + " - " + k.bedNo}
                                                                        <div style={{ borderRadius: "4px", marginLeft: "-28px", backgroundColor: "#FFFFFF", border: inputBedAllAssignData.filter(l => l.bedId === k.id).length > 0 ? "1px solid rgb(180, 181, 209)" : "1px solid #C4C5D3", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                        </div>
                                                                    </div>
                                                                </span></Container>
                                                        </div>

                                                    </div>)) : <div style={{ background: 'var(--color-gray-100)' }} className="semiPrivatecontaine0-70">
                                                <div className="semiPrivatebed-7">
                                                    <Container
                                                        style={{ borderRadius: "4px", width: "90px", marginTop: "18px", marginLeft: "12px", marginRight: "", height: "35px" }}>
                                                        <span>
                                                            <div className="No101-02">
                                                                <div style={{ borderRadius: "4px", marginLeft: "-28px", width: "25px", height: "7px", transform: "rotate(-90deg)", marginTop: "-15px" }}><span><span></span></span>
                                                                </div>
                                                            </div>
                                                        </span></Container>
                                                </div>

                                            </div>}
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                        {/* <div className="bedorgForm-fields" style={{ width: "calc(100% - 307px)", left: "155px" }}>
                        <LocalizationProvider dateAdapter={AdapterDateFns}>
                            <TextField
                                id="BedNumber"
                                className="destination-name-input"
                                color="primary"
                                variant="outlined"
                                type="text"
                                label={
                                    <span>
                                        Age<span style={{ color: 'red' }}>*</span>
                                    </span>
                                }


                                placeholder="Placeholder"
                                size="medium"
                                margin="none"
                            />

                            <TextField
                                id="BedNumber"
                                className="destination-name-input"
                                color="primary"
                                variant="outlined"
                                type="text"
                                label={
                                    <span>
                                        SSN NO <span style={{ color: 'red' }}>*</span>
                                    </span>
                                }
                                value={""}

                                placeholder="Placeholder"
                                size="medium"
                                margin="none"
                            />
                            <div className="selectoutlined">
                                <DatePicker
                                    label="Admit Date"
                                    slotProps={{
                                        textField: {
                                            variant: "outlined",
                                            size: "medium",
                                            fullWidth: true,
                                            color: "primary",
                                        },
                                    }}
                                />
                            </div>

                        </LocalizationProvider>

                    </div>

                    <div className="bedorgForm-fields2" style={{ width: "calc(100% - 307px)", left: "155px" }}>
                        <TextField
                            id="BedNumber"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Height <span style={{ color: 'red' }}>*</span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                        <TextField
                            id="BedNumber"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Weight<span style={{ color: 'red' }}>*</span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                        <TextField
                            id="BedNumber"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Ward & Bed Info <span style={{ color: 'red' }}>*</span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                    </div>
                    <div className="bedorgForm-fields3" style={{ top: "594px", width: "calc(100% - 307px)", left: "155px" }}>
                        <div style={{ position: "absolute", top: "-61px", color: "black", fontWeight: "bold" }}>Contact Information</div>
                        <TextField
                            id="SecurityMeasuresforHighriskPation"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Email ID<span style={{ color: 'red' }}></span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                        <TextField
                            id="Positions"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="number"
                            label={
                                <span>
                                    Phone Number <span style={{ color: 'red' }}></span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />

                    </div>
                    <div className="Address" style={{ width: "calc(100% - 307px)", left: "155px" }} >
                        <TextField
                            id="Positions"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Address <span style={{ color: 'red' }}></span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                    </div>
                    <div className="bedorgForm-fields8" style={{ width: "calc(100% - 307px)", left: "155px" }}>

                        <TextField
                            id="Positions"
                            className="destination-name-input"
                            color="primary"
                            variant="outlined"
                            type="text"
                            label={
                                <span>
                                    Patient Name <span style={{ color: 'red' }}></span>
                                </span>
                            }
                            value={""}

                            placeholder="Placeholder"
                            size="medium"
                            margin="none"
                        />
                        <div className="frame-parent28" style={{ position: "relative", top: "-52px" }}>

                            <div className="check-boxgary-frame">
                                <FormControlLabel

                                    label="Declined to Specify"
                                    labelPlacement="end"
                                    control={<Checkbox color="primary" size="medium" value={Gendercreatepation} id="checkboxgenderselection" />}
                                    onChange={handleInputChange}
                                />
                                <CheckBoxgary
                                    checkBoxgaryWidth="unset"
                                    checkBoxgaryHeight="unset"
                                />
                            </div>

                            <FormControl className="name-input41" variant="outlined">
                                <InputLabel color="primary">Gender</InputLabel>
                                <Select style={{ background: Gendercreatepation ? 'lightgrey' : '' }} color="primary" size="medium" label="Gender" name="patientGender" disabled={Gendercreatepation} value={""} onChange={handleInputChange}>
                                    <MenuItem value="">Select</MenuItem>

                                </Select>
                                <FormHelperText />
                            </FormControl>
                        </div>

                    </div>
                    <div className="component-5011">
                        <div className="cancel-group">
                            <SecondaryButton
                                label="Cancel"
                                secondaryButtonCursor="pointer"
                                onCancelContainerClick={null}
                            />
                            <div className="previous1">
                                <img className="bg-icon3" alt="" src={bottomImage} />
                                <div className="label5">Previous</div>
                            </div>
                            <PrimaryButton

                                label="Save"
                                primaryButtonCursor="pointer"
                                onNextContainerClick={() => {
                                    // handleClickChange();
                                    // Add this line
                                }}
                            />
                        </div> 
                    </div> */}

                    </div>
                    <DialogContentText >

                    </DialogContentText>
                </DialogContent>

            </Dialog>
            <Dialog maxWidth={'md'} PaperProps={{ sx: { width: '450px', position: 'absolute', height: '500px' } }}
                open={bedAllocateDialog}
                onClose={handleClose}
            >
                <DialogTitle style={{ overflowX: 'hidden', marginBottom: '-35px' }}> <a style={{ cursor: 'pointer' }} onClick={() => { setBedAllocateDialog(false) }}><img style={{ width: '24px', height: '24px' }} src={ArrowForwardImage}></img></a>
                    <div style={{ position: 'relative', left: '31px', top: '-27px' }} className="patient-Q15-dialogTitle">Patient Bed Assign</div></DialogTitle>
                <DialogContent style={{ padding: '0px', overflowX: 'hidden', background: '#F8FAFB' }}>

                    <DialogContentText >
                        <LocalizationProvider dateAdapter={AdapterDateFns}>
                            <div style={{ position: 'relative', left: '22px', top: '20px' }}>
                                <div>
                                    <div style={{ fontSize: '16px' }} className="patient-Q15-dialogTitle">Patient Name</div>

                                    <FormControl className="name-input13" variant="outlined" style={{ width: '354px', position: 'relative', top: '12px', height: '48px' }}>
                                        <InputLabel color="primary" >Select<span>
                                        </span></InputLabel>
                                        <Select size="medium" label="Select" name="pid" value={inputFormData.pid} required onChange={handleInputChange}>
                                            {patientList}
                                        </Select>
                                        <FormHelperText />
                                    </FormControl>
                                </div>
                                <div style={{ position: 'relative', top: '38px' }}>
                                    <div style={{ fontSize: '16px' }} className="patient-Q15-dialogTitle">Assigned Staff</div>

                                    <FormControl className="name-input13" variant="outlined" style={{ width: '354px', position: 'relative', top: '12px', height: '48px' }}>
                                        <InputLabel color="primary" >Select<span>
                                        </span></InputLabel>
                                        <Select size="medium" label="Select" name="assignedBy" value={inputFormData.assignedBy} required onChange={handleInputChange}>
                                            {staffList}
                                        </Select>
                                        <FormHelperText />
                                    </FormControl>
                                </div>
                                <div style={{ fontSize: '16px', position: 'relative', top: '75px' }} className="patient-Q15-dialogTitle">Bed Assign Time</div>
                                <div style={{ width: '354px', position: 'relative', top: '87px', height: '48px' }}>
                                    <MobileDateTimePicker
                                        label="Date"
                                        value={inputFormData.admitDate}
                                        onChange={(newValue) => {
                                            inputFormData.admitDate = newValue;
                                            setInputFormData({ ...inputFormData });
                                        }}
                                        slotProps={{
                                            textField: {
                                                variant: "outlined",
                                                size: "medium",
                                                fullWidth: true,
                                                color: "primary",
                                            },
                                        }}
                                    />
                                </div>
                                <div style={{ top: '374px', left: '-23px' }} className="component-5011">
                                    <div style={{ position: 'relative', top: '17px', left: '-145px' }} className="cancel-group">
                                        <SecondaryButton
                                            label="Cancel"
                                            secondaryButtonCursor="pointer"
                                            onCancelContainerClick={handleCancelChange}
                                        />
                                        <div className="previous1">
                                            <img className="bg-icon3" alt="" src={bottomImage} />
                                            <div className="label5">Previous</div>
                                        </div>
                                        <PrimaryButton
                                            label="Save"
                                            primaryButtonCursor="pointer"
                                            onNextContainerClick={handlePageSave}
                                        />
                                    </div>
                                </div>
                            </div>
                        </LocalizationProvider>
                    </DialogContentText>
                </DialogContent>

            </Dialog>
            <Dialog maxWidth={'md'} PaperProps={{ sx: { width: '570px', position: 'absolute', top: '27px', height: '290px' } }}
                open={bedOccupiedDialog}
                onClose={handleOccupiedClose}
            >
                <DialogTitle style={{ overflowX: 'hidden' }}>
                    <div style={{ position: 'relative', top: '12px', textAlign: 'center' }} className="patient-Q15-dialogTitle">Bed Occupied Information</div>
                </DialogTitle>
                <DialogContent style={{ padding: '0px', overflowX: 'hidden', background: '#F8FAFB' }}>
                    <div style={{ fontSize: '17px', position: 'relative', top: '25px', textAlign: 'center' }} className="patient-Q15-dialogTitle">Given below the bed allocated details are shown:</div>
                    <div style={{ borderBottomStyle: 'dashed', position: 'relative', left: '73px', top: '22px', width: '424px' }}></div>
                    <div style={{ fontSize: '16px', position: 'relative', top: '55px', textAlign: 'center' }} className="patient-Q15-dialogTitle"><span style={{ WebkitTextStroke: 'lightcyan' }}>Patient Name: </span>
                        <span>{patientOccupiedName}</span></div>
                    <div style={{ fontSize: '16px', position: 'relative', top: '65px', textAlign: 'center' }} className="patient-Q15-dialogTitle"><span style={{ WebkitTextStroke: 'lightcyan' }}>Assigned By: </span><span>{assignedOccupiedName}</span></div>
                    <div style={{ fontSize: '16px', position: 'relative', top: '75px', textAlign: 'center' }} className="patient-Q15-dialogTitle"><span style={{ WebkitTextStroke: 'lightcyan' }}>Admission Date: </span><span>{admitOccupiedName}</span></div>
                    <div style={{ fontSize: '16px', position: 'relative', top: '85px', textAlign: 'center' }} className="patient-Q15-dialogTitle"><span style={{ WebkitTextStroke: 'lightcyan' }}>Bed No: </span><span>{bedNumber}</span></div>
                    <DialogContentText >

                    </DialogContentText>
                </DialogContent>

            </Dialog>
            <Dialog maxWidth={'md'} PaperProps={{ sx: { width: '450px', position: 'absolute', height: '600px' } }} style={{ left: '826px', top: '-11px', height: '700px' }}
          open={showQ15CheckView}
          onClose={handleQ15Close}
        >
          <DialogTitle style={{ overflowX: 'hidden', marginBottom: '-35px' }}> <a style={{ cursor: 'pointer' }} onClick={() => { setQ15CheckView(false) }}><img style={{ width: '24px', height: '24px' }} src={ArrowForwardImage}></img></a>
            <div style={{ position: 'relative', left: '31px', top: '-27px' }} className="patient-Q15-dialogTitle">Q-15 Form</div></DialogTitle>
          <DialogContent style={{ padding: '0px', overflowX: 'hidden', background: '#F8FAFB' }}>
            <DialogContentText >
              <LocalizationProvider dateAdapter={AdapterDateFns}>
                {spinner &&
                  (<div className='overlay-content'>
                    <div className='wrapper'>
                      <img src={loaddingFile} style={{ position: 'absolute', width: '100%', zIndex: 2, opacity: '0.5' }} />
                    </div>
                  </div>
                  )}
                <div style={{ display: 'flex', flexDirection: 'row' }}>
                  <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarChange(1)}><div style={{ position: 'relative', left: '20px', top: '15px' }} className={calendarChange === 1 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '2px', top: '49px' }} className={calendarChange === 1 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                      <div style={{ position: 'relative', left: '16px', top: '-41px' }} className="patient-Q15-CalendarText">{firstDate}</div>
                      <div style={{ position: 'relative', left: '18px', top: '-32px', fontSize: '12px' }} className="patient-Q15-CalendarText">{firstDay}</div>
                    </div>
                  </div></a>
                  <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarChange(2)}><div style={{ position: 'relative', left: '39px', top: '15px' }} className={calendarChange === 2 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '1.5px', top: '49px' }} className={calendarChange === 2 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                      <div style={{ position: 'relative', left: '16px', top: '-41px' }} className="patient-Q15-CalendarText">{secondDate}</div>
                      <div style={{ position: 'relative', left: '18px', top: '-32px', fontSize: '12px' }} className="patient-Q15-CalendarText">{secondDay}</div>
                    </div>
                  </div></a>
                  <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarChange(3)}><div style={{ position: 'relative', left: '58px', top: '15px' }} className={calendarChange === 3 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '1.5px', top: '49px' }} className={calendarChange === 3 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                      <div style={{ position: 'relative', left: '16px', top: '-41px' }} className="patient-Q15-CalendarText">{thirdDate}</div>
                      <div style={{ position: 'relative', left: '18px', top: '-32px', fontSize: '12px' }} className="patient-Q15-CalendarText">{thirdDay}</div>
                    </div>
                  </div></a>
                  <a style={{ cursor: 'pointer' }} onClick={() => handleCalendarChange(4)}><div style={{ position: 'relative', left: '77px', top: '15px' }} className={calendarChange === 4 ? "patient-Q15-CalendarSelectOutline" : "patient-Q15-CalendarUnselectOutline"}>
                    <div style={{ position: 'relative', left: '1.5px', top: '49px' }} className={calendarChange === 4 ? "patient-Q15-CalendarSelectLine" : "patient-Q15-CalendarUnSelectLine"}>
                      <div style={{ position: 'relative', left: '16px', top: '-41px' }} className="patient-Q15-CalendarText">{forthDate}</div>
                      <div style={{ position: 'relative', left: '18px', top: '-32px', fontSize: '12px' }} className="patient-Q15-CalendarText">{forthDay}</div>
                    </div>
                  </div></a>
                  <a style={{ cursor: 'pointer' }} onClick={handleShowCalendar}><div style={{ position: 'relative', left: '96px', top: '15px' }} className="patient-Q15-CalendarUnselectOutline">
                    <img style={{ position: 'relative', left: '17px', top: '21px', width: '32px', height: '32px' }} src={calendarMuiImage} />
                  </div>
                  </a>
                </div>

                <div>
                  <div style={{ position: 'relative', left: '20px', top: '30px', display: 'flex', flexDirection: 'row' }}>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(1)}><div className={timeSlotChange === 1 ? "patient-Q15-TimeSlotSelect" : "patient-Q15-TimeSlotUnSelect"}>0:00 - 5:45</div></a>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(2)}><div style={{ position: 'relative', left: '25px' }} className={timeSlotChange === 2 ? "patient-Q15-TimeSlotSelect" : "patient-Q15-TimeSlotUnSelect"}>6:00 - 11:45</div></a>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(3)}><div style={{ position: 'relative', left: '50px' }} className={timeSlotChange === 3 ? "patient-Q15-TimeSlotSelect" : "patient-Q15-TimeSlotUnSelect"}>12:00 - 16:45</div></a>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(4)}><div style={{ position: 'relative', left: '73px' }} className={timeSlotChange === 4 ? "patient-Q15-TimeSlotSelect" : "patient-Q15-TimeSlotUnSelect"}>17:00 - 23:45</div></a>
                  </div>
                  <div className="patient-Q15-TimeSlotUnSelectLine" style={{ position: 'relative', left: '20px', top: '39px', display: 'flex', flexDirection: 'row' }}>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(1)}><div className={timeSlotChange === 1 ? "patient-Q15-TimeSlotSelectLine" : ""}></div></a>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(2)}><div style={{ position: 'relative', left: '99px' }} className={timeSlotChange === 2 ? "patient-Q15-TimeSlotSelectLine" : ""}></div></a>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(3)}><div style={{ position: 'relative', left: '208px' }} className={timeSlotChange === 3 ? "patient-Q15-TimeSlotSelectLine" : ""}></div></a>
                    <a style={{ cursor: 'pointer' }} onClick={() => handleTimeSlotChange(4)}><div style={{ position: 'relative', left: '322px' }} className={timeSlotChange === 4 ? "patient-Q15-TimeSlotSelectLine" : ""}></div></a>
                  </div>
                  <div>
                    {timeSlotChange === 1 ? <>
                      <div style={{ position: 'relative', left: '20px', top: '61px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A00", "0000-0015", k)}>
                            <div style={{ background: timeSlotSectionChange === "A00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A00", "0000-0015", "")}>
                            <div style={{ background: timeSlotSectionChange === "A00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A00" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">00.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B00", "0015-0030", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B00", "0015-0030", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B00" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">00.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C00", "0030-0045", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C00", "0030-0045", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C00" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">00.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D00" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D00", "0045-0100", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D00", "0045-0100", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D00" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D00" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">00.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '69px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A01", "0100-0115", k)}>
                            <div style={{ background: timeSlotSectionChange === "A01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A01", "0100-0115", "")}>
                            <div style={{ background: timeSlotSectionChange === "A01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A01" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">01.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B01", "0115-0130", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B01", "0115-0130", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B01" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">01.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C01", "0130-0145", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C01", "0130-0145", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C01" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">01.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D01" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D01", "0145-0200", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D01", "0145-0200", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D01" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D01" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">01.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '76px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A02", "0200-0215", k)}>
                            <div style={{ background: timeSlotSectionChange === "A02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A02", "0200-0215", "")}>
                            <div style={{ background: timeSlotSectionChange === "A02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A02" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">02.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B02", "0215-0230", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B02", "0215-0230", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B02" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">02.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C02", "0230-0245", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C02", "0230-0245", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C02" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">02.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D02" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D02", "0245-0300", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D02", "0245-0300", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D02" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D02" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">02.45</span>
                            </div></a>
                        }
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '83px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A03", "0300-0315", k)}>
                            <div style={{ background: timeSlotSectionChange === "A03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A03", "0300-0315", "")}>
                            <div style={{ background: timeSlotSectionChange === "A03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A03" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">03.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B03", "0315-0330", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B03", "0315-0330", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B03" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">03.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C03", "0330-0345", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C03", "0330-0345", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C03" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">03.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D03" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D03", "0345-0400", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D03", "0345-0400", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D03" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D03" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">03.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '90px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A04", "0400-0415", k)}>
                            <div style={{ background: timeSlotSectionChange === "A04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A04", "0400-0415", "")}>
                            <div style={{ background: timeSlotSectionChange === "A04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A04" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">04.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B04", "0415-0430", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B04", "0415-0430", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B04" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">04.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C04", "0430-0445", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C04", "0430-0445", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C04" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">04.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D04" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D04", "0445-0500", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D04", "0445-0500", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D04" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D04" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">04.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '97px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A05", "0500-0515", k)}>
                            <div style={{ background: timeSlotSectionChange === "A05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A05", "0500-0515", "")}>
                            <div style={{ background: timeSlotSectionChange === "A05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A05" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">05.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B05", "0515-0530", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B05", "0515-0530", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B05" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">05.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C05", "0530-0545", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C05", "0530-0545", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C05" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">05.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D05" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D05", "0545-0600", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D05", "0545-0600", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D05" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D05" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">05.45</span>
                            </div></a>}
                      </div>
                    </> : timeSlotChange === 2 ? <>
                      <div style={{ position: 'relative', left: '20px', top: '61px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A06", "0600-0615", k)}>
                            <div style={{ background: timeSlotSectionChange === "A06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A06", "0600-0615", "")}>
                            <div style={{ background: timeSlotSectionChange === "A06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A06" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">06.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B06", "0615-0630", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B06", "0615-0630", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B06" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">06.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C06", "0630-0645", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C06", "0630-0645", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C06" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">06.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D06" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D06", "0645-0700", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D06", "0645-0700", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D06" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D06" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">06.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '69px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A07", "0700-0715", k)}>
                            <div style={{ background: timeSlotSectionChange === "A07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A07", "0700-0715", "")}>
                            <div style={{ background: timeSlotSectionChange === "A07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A07" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">07.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B07", "0715-0730", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B07", "0715-0730", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B07" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">07.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C07", "0730-0745", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C07", "0730-0745", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C07" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">07.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D07" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D07", "0745-0800", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D07", "0745-0800", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D07" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D07" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">07.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '76px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A08", "0800-0815", k)}>
                            <div style={{ background: timeSlotSectionChange === "A08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A08", "0800-0815", "")}>
                            <div style={{ background: timeSlotSectionChange === "A08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A08" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">08.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B08", "0815-0830", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B08", "0815-0830", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B08" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">08.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C08", "0830-0845", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C08", "0830-0845", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C08" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">08.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D08" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D08", "0845-0900", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D08", "0845-0900", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D08" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D08" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">08.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '83px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A09", "0900-0915", k)}>
                            <div style={{ background: timeSlotSectionChange === "A09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A09", "0900-0915", "")}>
                            <div style={{ background: timeSlotSectionChange === "A09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A09" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">09.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B09", "0915-0930", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B09", "0915-0930", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B09" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">09.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C09", "0930-0945", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C09", "0930-0945", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C09" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">09.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D09" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D09", "0945-1000", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D09", "0945-1000", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D09" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D09" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">09.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '90px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A10", "1000-1015", k)}>
                            <div style={{ background: timeSlotSectionChange === "A10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A10", "1000-1015", "")}>
                            <div style={{ background: timeSlotSectionChange === "A10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A10" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">10.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B10", "1015-1030", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B10", "1015-1030", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B10" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">10.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C10", "1030-1045", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C10", "1030-1045", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C10" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">10.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D10" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D10", "1045-1100", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D10", "1045-1100", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D10" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D10" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">10.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '97px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A11", "1100-1115", k)}>
                            <div style={{ background: timeSlotSectionChange === "A11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A11", "1100-1115", "")}>
                            <div style={{ background: timeSlotSectionChange === "A11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A11" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">11.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B11", "1115-1130", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B11", "1115-1130", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B11" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">11.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C11", "1130-1145", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C11", "1130-1145", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C11" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">11.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D11" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D11", "1145-1200", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D11", "1145-1200", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D11" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D11" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">11.45</span>
                            </div></a>}
                      </div>
                    </> : timeSlotChange === 3 ? <>
                      <div style={{ position: 'relative', left: '20px', top: '61px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A12", "1200-1215", k)}>
                            <div style={{ background: timeSlotSectionChange === "A12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A12", "1200-1215", "")}>
                            <div style={{ background: timeSlotSectionChange === "A12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A12" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">12.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B12", "1215-1230", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B12", "1215-1230", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B12" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">12.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C12", "1230-1245", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C12", "1230-1245", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C12" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">12.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D12" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D12", "1245-1300", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D12", "1245-1300", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D12" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D12" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">12.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '69px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A13", "1300-1315", k)}>
                            <div style={{ background: timeSlotSectionChange === "A13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A13", "1300-1315", "")}>
                            <div style={{ background: timeSlotSectionChange === "A13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A13" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">13.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B13", "1315-1330", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B13", "1315-1330", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B13" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">13.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C13", "1330-1345", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C13", "1330-1345", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C13" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">13.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D13" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D13", "1345-1400", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D13", "1345-1400", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D13" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D13" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">13.45</span>
                            </div></a>
                        }
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '76px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A14", "1400-1415", k)}>
                            <div style={{ background: timeSlotSectionChange === "A14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A14", "1400-1415", "")}>
                            <div style={{ background: timeSlotSectionChange === "A14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A14" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">14.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B14", "1415-1430", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B14", "1415-1430", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B14" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">14.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C14", "1430-1445", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C14", "1430-1445", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C14" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">14.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D14" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D14", "1445-1500", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D14", "1445-1500", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D14" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D14" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">14.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '83px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A15", "1500-1515", k)}>
                            <div style={{ background: timeSlotSectionChange === "A15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A15", "1500-1515", "")}>
                            <div style={{ background: timeSlotSectionChange === "A15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A15" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">15.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B15", "1515-1530", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B15", "1515-1530", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B15" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">15.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C15", "1530-1545", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C15", "1530-1545", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C15" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">15.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D15" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D15", "1545-1600", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D15", "1545-1600", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D15" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D15" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">15.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '90px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A16", "1600-1615", k)}>
                            <div style={{ background: timeSlotSectionChange === "A16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A16", "1600-1615", "")}>
                            <div style={{ background: timeSlotSectionChange === "A16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A16" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">16.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B16", "1615-1630", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B16", "1615-1630", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B16" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">16.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C16", "1630-1645", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C16", "1630-1645", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C16" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">16.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D16" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D16", "1645-1700", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D16", "1645-1700", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D16" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D16" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">16.45</span>
                            </div></a>
                        }
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '97px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A17", "1700-1715", k)}>
                            <div style={{ background: timeSlotSectionChange === "A17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A17", "1700-1715", "")}>
                            <div style={{ background: timeSlotSectionChange === "A17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A17" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">17.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B17", "1715-1730", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B17", "1715-1730", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B17" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">17.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C17", "1730-1745", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C17", "1730-1745", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C17" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">17.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D17" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D17", "1745-1800", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D17", "1745-1800", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D17" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D17" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">17.45</span>
                            </div></a>}
                      </div>
                    </> : timeSlotChange === 4 ? <>
                      <div style={{ position: 'relative', left: '20px', top: '61px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A18", "1800-1815", k)}>
                            <div style={{ background: timeSlotSectionChange === "A18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A18", "1800-1815", "")}>
                            <div style={{ background: timeSlotSectionChange === "A18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A18" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">18.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B18", "1815-1830", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B18", "1815-1830", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B18" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">18.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C18", "1830-1845", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C18", "1830-1845", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C18" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">18.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D18" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D18", "1845-1900", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D18", "1845-1900", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D18" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D18" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">18.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '69px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A19", "1900-1915", k)}>
                            <div style={{ background: timeSlotSectionChange === "A19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A19", "1900-1915", "")}>
                            <div style={{ background: timeSlotSectionChange === "A19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A19" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">19.00</span>
                            </div></a>}

                        {displayData.filter(i => i.q15Slot === "B19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B19", "1915-1930", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B19", "1915-1930", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B19" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">19.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C19", "1930-1945", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C19", "1930-1945", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C19" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">19.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D19" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D19", "1945-2000", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D19", "1945-2000", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D19" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D19" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">19.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '76px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A20", "2000-2015", k)}>
                            <div style={{ background: timeSlotSectionChange === "A20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A20", "2000-2015", "")}>
                            <div style={{ background: timeSlotSectionChange === "A20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A20" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">20.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B20", "2015-2030", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B20", "2015-2030", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B20" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">20.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C20", "2030-2045", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C20", "2030-2045", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C20" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">20.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D20" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D20", "2045-2100", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D20", "2045-2100", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D20" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D20" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">20.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '83px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A21", "2100-2115", k)}>
                            <div style={{ background: timeSlotSectionChange === "A21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A21", "2100-2115", "")}>
                            <div style={{ background: timeSlotSectionChange === "A21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A21" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">21.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B21", "2115-2130", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B21", "2115-2130", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B21" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">21.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C21", "2130-2145", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C21", "2130-2145", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C21" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">21.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D21" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D21", "2145-2200", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D21", "2145-2200", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D21" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D21" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">21.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '90px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A22", "2200-2215", k)}>
                            <div style={{ background: timeSlotSectionChange === "A22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A22", "2200-2215", "")}>
                            <div style={{ background: timeSlotSectionChange === "A22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A22" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">22.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B22", "2215-2230", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B22", "2215-2230", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B22" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">22.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C22", "2230-2245", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C22", "2230-2245", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C22" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">22.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D22" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D22", "2245-2200", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D22", "2245-2200", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D22" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D22" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">22.45</span>
                            </div></a>}
                      </div>
                      <div style={{ position: 'relative', left: '20px', top: '97px', display: 'flex', flexDirection: 'row' }}>
                        {displayData.filter(i => i.q15Slot === "A23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "A23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A23", "2300-2315", k)}>
                            <div style={{ background: timeSlotSectionChange === "A23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("A23", "2300-2315", "")}>
                            <div style={{ background: timeSlotSectionChange === "A23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "A23" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">23.00</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "B23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "B23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B23", "2315-2330", k)}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("B23", "2315-2330", "")}>
                            <div style={{ position: 'relative', left: '10px', background: timeSlotSectionChange === "B23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "B23" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">23.15</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "C23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "C23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C23", "2330-2345", k)}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("C23", "2330-2345", "")}>
                            <div style={{ position: 'relative', left: '20px', background: timeSlotSectionChange === "C23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "C23" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">23.30</span>
                            </div></a>}
                        {displayData.filter(i => i.q15Slot === "D23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map((k) => { return k; }).length > 0 ? displayData.filter(i => i.q15Slot === "D23" && i.q15Date === moment(inputQ15Data.q15Date).format("YYYYMMDD")).map(k => (
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D23", "2345-0000", k)}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <><img src={MaskGroupImage} style={{ width: '103px', height: '51px', borderRadius: '5px', position: 'relative', left: '-35px', top: '-13.1px' }}></img>
                                <span style={{ position: 'relative', top: '-51px' }} className="patient-Q15-OccupiedSlot-Text">{k.location + "-" + k.activity}</span></>
                            </div></a>)) :
                          <a style={{ cursor: 'pointer' }} onClick={() => handleDisplayDialogQ15Data("D23", "2345-0000", "")}>
                            <div style={{ position: 'relative', left: '30px', background: timeSlotSectionChange === "D23" ? "#4977D9" : "" }} className="patient-Q15-SlotSection">
                              <span style={{ color: timeSlotSectionChange === "D23" ? "#FFF" : "" }} className="patient-Q15-SlotSection-Text">23.45</span>
                            </div></a>}
                      </div>
                    </> : <></>}
                  </div>
                  {showCalendarView &&
                    <div style={{ position: 'relative', left: '51px', top: '-337px' }}><DateCalendar className="patient-Q15-Calendar"
                      value={calendarDate}
                      onChange={(newValue: any) => {
                        calendarDate = newValue;
                        setCalendarDate(calendarDate);
                        inputQ15Data.q15Date = calendarDate;
                        setInputQ15Data({ ...inputQ15Data });
                        setShowCalendarVew(false);
                      }}
                    />  </div>
                  }
                </div>
              </LocalizationProvider>
            </DialogContentText>
          </DialogContent>

        </Dialog>
        <Dialog maxWidth={'md'} PaperProps={{ sx: { position: 'absolute', width: '397px', height: '570px' } }} style={{ left: '826px', top: '22px', height: '570px' }}
          open={displayDialogQ15Data}
          onClose={handleNewClose}
        >
          <DialogContent style={{ padding: '0px', overflow: 'hidden' }}>
            <DialogContentText>
              <LocalizationProvider dateAdapter={AdapterDateFns}>
                <div style={{ position: 'relative', left: '22px', top: '20px' }}>
                  <div style={{ fontSize: '16px' }} className="patient-Q15-dialogTitle">Enter Date and Time</div>
                  <div style={{ fontSize: '16px', position: 'relative', left: '0px', top: '1px', opacity: '0.5' }} className="patient-Q15-dialogTitle">{inputQ15Data.q15Time.slice(0, 2) + "." + inputQ15Data.q15Time.slice(2, 4)} - {inputQ15Data.q15Time.slice(5, 7) + "." + inputQ15Data.q15Time.slice(7, 9)}</div>

                  <div style={{ width: '354px', position: 'relative', top: '22px', left: '1px', height: '48px' }}>
                    <DatePicker autoFocus={displayDialogQ15Data}
                      label="Date"
                      value={inputQ15Data.q15Date}
                      onChange={(newValue) => {
                        inputQ15Data.q15Date = newValue;
                        setInputQ15Data({ ...inputQ15Data });
                      }}
                      slotProps={{
                        textField: {
                          variant: "outlined",
                          size: "medium",
                          fullWidth: true,
                          color: "primary",
                        },
                      }}
                    />
                  </div>

                  <div style={{ display: 'flex', flexDirection: 'row', height: '48px' }}>
                    <TextField
                      id="q15TimePeriod" value={inputQ15Data.q15Time.slice(0, 2) + "." + inputQ15Data.q15Time.slice(2, 4)} onChange={null}
                      style={{ position: 'relative', left: '1px', top: '46px', width: '170px' }}
                      color="primary"
                      variant="outlined"
                      type="text"
                      label="Start Time"
                      placeholder="Placeholder"
                      size="medium"
                      margin="none"
                    />
                    <TextField
                      id="q15TimePeriod1" value={inputQ15Data.q15Time.slice(5, 7) + "." + inputQ15Data.q15Time.slice(7, 9)} onChange={null}
                      style={{ position: 'relative', left: '14px', top: '46px', width: '170px' }}
                      color="primary"
                      variant="outlined"
                      type="text"
                      label="End Time"
                      placeholder="Placeholder"
                      size="medium"
                      margin="none"
                    />
                  </div>

                  <div style={{ position: 'relative', top: '70px' }}>
                    <TextField
                      id="q15EnteredBy" value={inputQ15Data.enteredBy} disabled={true} onChange={null}
                      style={{ width: '354px' }}
                      color="primary"
                      variant="outlined"
                      type="text"
                      label="Enter Staff Name"
                      placeholder="Placeholder"
                      size="medium"
                      margin="none"
                      required
                    />
                  </div>
                  <div style={{ position: 'relative', top: '85px', height: '48px' }}>
                    <FormControl style={{ width: '354px' }} variant="outlined">
                      <InputLabel color="primary">Location Legend</InputLabel>
                      <Select color="primary" size="medium" label="Location Legend" name="q15Location" value={inputQ15Data.location} onChange={(e) => {
                        inputQ15Data.location = e.target.value;
                        setInputQ15Data({ ...inputQ15Data });
                      }}>
                        {displayLocationData.map((newData, i) => {
                          return (
                            <MenuItem key={i} value={newData.value}>{newData.label}</MenuItem>
                          )
                        })}
                      </Select>
                      <FormHelperText />
                    </FormControl>
                    <FormControl style={{ width: '354px', top: '12px' }} className="name-input41" variant="outlined">
                      <InputLabel color="primary">Condition Legend</InputLabel>
                      <Select color="primary" size="medium" label="Condition Legend" name="q15Activity" value={inputQ15Data.activity} onChange={(e) => {
                        inputQ15Data.activity = e.target.value;
                        setInputQ15Data({ ...inputQ15Data });
                      }}>
                        {displayActivityData.map((newData, i) => {
                          return (
                            <MenuItem key={i} value={newData.value}>{newData.label}</MenuItem>
                          )
                        })}
                      </Select>
                      <FormHelperText />
                    </FormControl>
                  </div>
                  <div style={{ position: 'relative', left: '60px', top: '183px' }}>
                    <div className="cancel-group">
                      <SecondaryButton
                        label="Cancel"
                        secondaryButtonCursor="pointer"
                        onCancelContainerClick={handleNewClose}
                      />
                      <div className="previous1">
                        <img className="bg-icon3" alt="" src={bottomImage} />
                        <div className="label5">Previous</div>
                      </div>
                      <PrimaryButton
                        label="Save"
                        primaryButtonCursor="pointer"
                        onNextContainerClick={handleQ15ClickChange}
                      />
                    </div>

                  </div>
                </div>
              </LocalizationProvider>
            </DialogContentText>
          </DialogContent>
        </Dialog>
        </div>


    );


};
const mapStateToProps = (state: any) => {
    const { deviceFormData, getAllPatientData, getAllStaffData, getBedAssignmentByOrgIdData,createDynamicBedAssignData,
        getPatientAdmitData, getTransferPatientData, createPatientAdmitData, createq15configData, getDischargePatientData } = state;
    return {
        deviceFormData, getAllPatientData, getAllStaffData, getBedAssignmentByOrgIdData,createDynamicBedAssignData,
        getPatientAdmitData, getTransferPatientData, createPatientAdmitData, createq15configData, getDischargePatientData
    };
};
export default connect(mapStateToProps)(VisitPatientdata)