{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_BED_ASSIGNMENT_COMPLETED, CREATE_BED_ASSIGNMENT_FAILED, GETALL_BED_ASSIGNMENT_COMPLETED, GETALL_BED_ASSIGNMENT_FAILED, GET_BYORGID_BED_ASSIGNMENT_COMPLETED, GET_BYORGID_BED_ASSIGNMENT_FAILED } from \"../actions/BedAssignment\";\nimport { createBedAssignmentAPI, getAllBedAssignmentAPI, getBedAssignmentByOrgIdAPI } from \"../../utils/api/BedAssignmentAPI\";\nexport function* createBedAssignment(request) {\n  try {\n    const result = yield call(createBedAssignmentAPI.createBedAssignment, request.input);\n    yield put({\n      type: CREATE_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: CREATE_BED_ASSIGNMENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllBedAssignment(request) {\n  try {\n    const result = yield call(getAllBedAssignmentAPI.getAllBedAssignment, request.input);\n    yield put({\n      type: GETALL_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: GETALL_BED_ASSIGNMENT_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* getBedAssignmentByOrgId(request) {\n  try {\n    const result = yield call(getBedAssignmentByOrgIdAPI.getBedAssignmentByOrgId, request.input);\n    yield put({\n      type: GET_BYORGID_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: GET_BYORGID_BED_ASSIGNMENT_FAILED,\n      payload: e.message\n    });\n  }\n}","map":{"version":3,"names":["put","call","CREATE_BED_ASSIGNMENT_COMPLETED","CREATE_BED_ASSIGNMENT_FAILED","GETALL_BED_ASSIGNMENT_COMPLETED","GETALL_BED_ASSIGNMENT_FAILED","GET_BYORGID_BED_ASSIGNMENT_COMPLETED","GET_BYORGID_BED_ASSIGNMENT_FAILED","createBedAssignmentAPI","getAllBedAssignmentAPI","getBedAssignmentByOrgIdAPI","createBedAssignment","request","result","input","type","payload","data","e","getAllBedAssignment","message","getBedAssignmentByOrgId"],"sources":["E:/react/WebUI_MH/src/store/sagas/BedAssignment.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\n\r\nimport { \r\n    CREATE_BED_ASSIGNMENT_COMPLETED,\r\n    CREATE_BED_ASSIGNMENT_FAILED,\r\n    GETALL_BED_ASSIGNMENT_COMPLETED,\r\n    GETALL_BED_ASSIGNMENT_FAILED,\r\n    GET_BYORGID_BED_ASSIGNMENT_COMPLETED,\r\n    GET_BYORGID_BED_ASSIGNMENT_FAILED\r\n   \r\n} from \"../actions/BedAssignment\";\r\n\r\nimport { createBedAssignmentAPI,getAllBedAssignmentAPI,getBedAssignmentByOrgIdAPI} from \"../../utils/api/BedAssignmentAPI\"; \r\n\r\n\r\nexport function* createBedAssignment(request: any) {    \r\n    try {  \r\n         const result=yield call(createBedAssignmentAPI.createBedAssignment, request.input);        \r\n        yield put({ \r\n            type: CREATE_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: CREATE_BED_ASSIGNMENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\nexport function* getAllBedAssignment(request: any) {\r\n    try {  \r\n         const result=yield call(getAllBedAssignmentAPI.getAllBedAssignment, request.input);        \r\n        yield put({\r\n            \r\n            type: GETALL_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GETALL_BED_ASSIGNMENT_FAILED, payload: e.message });\r\n       \r\n    \r\n    }\r\n}\r\n\r\nexport function* getBedAssignmentByOrgId(request: any) {\r\n    try {  \r\n         const result=yield call(getBedAssignmentByOrgIdAPI.getBedAssignmentByOrgId, request.input);        \r\n        yield put({\r\n            \r\n            type: GET_BYORGID_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_BYORGID_BED_ASSIGNMENT_FAILED, payload: e.message });\r\n       \r\n    \r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAE9C,SACIC,+BAA+B,EAC/BC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,4BAA4B,EAC5BC,oCAAoC,EACpCC,iCAAiC,QAE9B,0BAA0B;AAEjC,SAASC,sBAAsB,EAACC,sBAAsB,EAACC,0BAA0B,QAAO,kCAAkC;AAG1H,OAAO,UAAUC,mBAAmBA,CAACC,OAAY,EAAE;EAC/C,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMZ,IAAI,CAACO,sBAAsB,CAACG,mBAAmB,EAAEC,OAAO,CAACE,KAAK,CAAC;IACnF,MAAMd,GAAG,CAAC;MACNe,IAAI,EAAEb,+BAA+B;MACrCc,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMlB,GAAG,CAAC;MAAEe,IAAI,EAAEZ,4BAA4B;MAAEa,OAAO,EAAEE;IAAE,CAAC,CAAC;IACjE,OAAQA,CAAC;EAET;AACJ;AACA,OAAO,UAAUC,mBAAmBA,CAACP,OAAY,EAAE;EAC/C,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMZ,IAAI,CAACQ,sBAAsB,CAACU,mBAAmB,EAAEP,OAAO,CAACE,KAAK,CAAC;IACnF,MAAMd,GAAG,CAAC;MAENe,IAAI,EAAEX,+BAA+B;MACrCY,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMlB,GAAG,CAAC;MAAEe,IAAI,EAAEV,4BAA4B;MAAEW,OAAO,EAAEE,CAAC,CAACE;IAAQ,CAAC,CAAC;EAGzE;AACJ;AAEA,OAAO,UAAUC,uBAAuBA,CAACT,OAAY,EAAE;EACnD,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMZ,IAAI,CAACS,0BAA0B,CAACW,uBAAuB,EAAET,OAAO,CAACE,KAAK,CAAC;IAC3F,MAAMd,GAAG,CAAC;MAENe,IAAI,EAAET,oCAAoC;MAC1CU,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMlB,GAAG,CAAC;MAAEe,IAAI,EAAER,iCAAiC;MAAES,OAAO,EAAEE,CAAC,CAACE;IAAQ,CAAC,CAAC;EAG9E;AACJ"},"metadata":{},"sourceType":"module"}