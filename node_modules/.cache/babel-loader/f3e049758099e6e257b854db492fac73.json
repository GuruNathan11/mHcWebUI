{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_ALLERGY_COMPLETED, CREATE_PATIENT_ALLERGY_FAILED, GETALL_PATIENT_ALLERGY_COMPLETED, GETALL_PATIENT_ALLERGY_FAILED, GETBYINPUT_PATIENT_ALLERGY_COMPLETED, GETBYINPUT_PATIENT_ALLERGY_FAILED, UPDATE_PATIENT_ALLERGY_COMPLETED, UPDATE_PATIENT_ALLERGY_FAILED, DELETE_PATIENT_ALLERGY_COMPLETED, DELETE_PATIENT_ALLERGY_FAILED, GET_PATIENTBYINPUTID_ALLERGY_COMPLETED, GET_PATIENTBYINPUTID_ALLERGY_FAILED } from \"../actions/PatientAllergy\";\nimport { CreatePatientAllergyAPI, GetAllPatientAllergyAPI, GetAllergyByPatientAPI, GetAllergyByPatientInputAPI, UpdatePatientAllergyAPI, DeletePatientAllergyAPI } from \"../../utils/api/PatientAllergyAPI\";\nexport function* createPatientAllergy(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientAllergyAPI.createPatientAllergy, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_ALLERGY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_ALLERGY_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllPatientAllergy(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllPatientAllergyAPI.getAllPatientAllergy, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_PATIENT_ALLERGY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_PATIENT_ALLERGY_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllergyByPatientInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllergyByPatientAPI.getAllergyByPatientInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_PATIENT_ALLERGY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_PATIENT_ALLERGY_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllergyByPatientInputId(request) {\n  try {\n    const {\n      data\n    } = yield call(GetAllergyByPatientInputAPI.getAllergyByPatientInputId, request);\n    yield put({\n      type: GET_PATIENTBYINPUTID_ALLERGY_COMPLETED,\n      payload: data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_PATIENTBYINPUTID_ALLERGY_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* updatePatientAllergy(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdatePatientAllergyAPI.updatePatientAllergy, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_PATIENT_ALLERGY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_PATIENT_ALLERGY_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deletePatientAllergy(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeletePatientAllergyAPI.deletePatientAllergy, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_PATIENT_ALLERGY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_PATIENT_ALLERGY_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_ALLERGY_COMPLETED","CREATE_PATIENT_ALLERGY_FAILED","GETALL_PATIENT_ALLERGY_COMPLETED","GETALL_PATIENT_ALLERGY_FAILED","GETBYINPUT_PATIENT_ALLERGY_COMPLETED","GETBYINPUT_PATIENT_ALLERGY_FAILED","UPDATE_PATIENT_ALLERGY_COMPLETED","UPDATE_PATIENT_ALLERGY_FAILED","DELETE_PATIENT_ALLERGY_COMPLETED","DELETE_PATIENT_ALLERGY_FAILED","GET_PATIENTBYINPUTID_ALLERGY_COMPLETED","GET_PATIENTBYINPUTID_ALLERGY_FAILED","CreatePatientAllergyAPI","GetAllPatientAllergyAPI","GetAllergyByPatientAPI","GetAllergyByPatientInputAPI","UpdatePatientAllergyAPI","DeletePatientAllergyAPI","createPatientAllergy","request","result","input","type","payload","data","e","getAllPatientAllergy","getAllergyByPatientInput","getAllergyByPatientInputId","message","updatePatientAllergy","deletePatientAllergy"],"sources":["E:/WebUI_MH/src/store/sagas/PatientAllergy.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_ALLERGY_COMPLETED,CREATE_PATIENT_ALLERGY_FAILED,GETALL_PATIENT_ALLERGY_COMPLETED,GETALL_PATIENT_ALLERGY_FAILED,\r\n     GETBYINPUT_PATIENT_ALLERGY_COMPLETED,GETBYINPUT_PATIENT_ALLERGY_FAILED, UPDATE_PATIENT_ALLERGY_COMPLETED,\r\n    UPDATE_PATIENT_ALLERGY_FAILED,DELETE_PATIENT_ALLERGY_COMPLETED,DELETE_PATIENT_ALLERGY_FAILED,GET_PATIENTBYINPUTID_ALLERGY_COMPLETED,\r\n    GET_PATIENTBYINPUTID_ALLERGY_FAILED  } from \"../actions/PatientAllergy\";\r\nimport {CreatePatientAllergyAPI,GetAllPatientAllergyAPI,GetAllergyByPatientAPI,GetAllergyByPatientInputAPI,UpdatePatientAllergyAPI,DeletePatientAllergyAPI} from \"../../utils/api/PatientAllergyAPI\"; \r\n\r\nexport function* createPatientAllergy(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientAllergyAPI.createPatientAllergy, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_ALLERGY_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_ALLERGY_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllPatientAllergy(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllPatientAllergyAPI.getAllPatientAllergy, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_PATIENT_ALLERGY_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_PATIENT_ALLERGY_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getAllergyByPatientInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllergyByPatientAPI.getAllergyByPatientInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_PATIENT_ALLERGY_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_PATIENT_ALLERGY_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function*getAllergyByPatientInputId (request:any) {\r\n    try {\r\n      \r\n        const { data } = yield call(GetAllergyByPatientInputAPI.getAllergyByPatientInputId,request);\r\n    \r\n      yield put({\r\n          type: GET_PATIENTBYINPUTID_ALLERGY_COMPLETED,\r\n          payload: data \r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_PATIENTBYINPUTID_ALLERGY_FAILED, payload: e.message });\r\n    }\r\n  }\r\n\r\nexport function* updatePatientAllergy(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdatePatientAllergyAPI.updatePatientAllergy, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_PATIENT_ALLERGY_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_PATIENT_ALLERGY_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deletePatientAllergy(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeletePatientAllergyAPI.deletePatientAllergy, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_PATIENT_ALLERGY_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_PATIENT_ALLERGY_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}