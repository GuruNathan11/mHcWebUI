{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_IMAGING_COMPLETED, CREATE_PATIENT_IMAGING_FAILED, GETALL_PATIENT_IMAGING_COMPLETED, GETALL_PATIENT_IMAGING_FAILED, GETBYINPUT_PATIENT_IMAGING_COMPLETED, GETBYINPUT_PATIENT_IMAGING_FAILED, UPDATE_PATIENT_IMAGING_COMPLETED, UPDATE_PATIENT_IMAGING_FAILED, DELETE_PATIENT_IMAGING_COMPLETED, DELETE_PATIENT_IMAGING_FAILED } from \"../actions/PatientImagingOrder\";\nimport { CreatePatientImagingAPI, GetAllPatientImagingAPI, GetPatientImagingAPI, UpdatePatientImagingAPI, DeletePatientImagingAPI } from \"../../utils/api/PatientImagingOrderAPI\";\nexport function* createPatientImaging(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientImagingAPI.createPatientImaging, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_IMAGING_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_IMAGING_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllPatientImaging(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllPatientImagingAPI.getAllPatientImaging, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_PATIENT_IMAGING_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_PATIENT_IMAGING_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getPatientImagingInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetPatientImagingAPI.getPatientImagingInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_PATIENT_IMAGING_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_PATIENT_IMAGING_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* updatePatientImaging(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdatePatientImagingAPI.updatePatientImaging, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_PATIENT_IMAGING_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_PATIENT_IMAGING_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deletePatientImaging(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeletePatientImagingAPI.deletePatientImaging, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_PATIENT_IMAGING_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_PATIENT_IMAGING_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_IMAGING_COMPLETED","CREATE_PATIENT_IMAGING_FAILED","GETALL_PATIENT_IMAGING_COMPLETED","GETALL_PATIENT_IMAGING_FAILED","GETBYINPUT_PATIENT_IMAGING_COMPLETED","GETBYINPUT_PATIENT_IMAGING_FAILED","UPDATE_PATIENT_IMAGING_COMPLETED","UPDATE_PATIENT_IMAGING_FAILED","DELETE_PATIENT_IMAGING_COMPLETED","DELETE_PATIENT_IMAGING_FAILED","CreatePatientImagingAPI","GetAllPatientImagingAPI","GetPatientImagingAPI","UpdatePatientImagingAPI","DeletePatientImagingAPI","createPatientImaging","request","result","input","type","payload","data","e","getAllPatientImaging","getPatientImagingInput","updatePatientImaging","deletePatientImaging"],"sources":["E:/WebUI_MH/src/store/sagas/PatientImagingOrder.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_IMAGING_COMPLETED,CREATE_PATIENT_IMAGING_FAILED,GETALL_PATIENT_IMAGING_COMPLETED,GETALL_PATIENT_IMAGING_FAILED,\r\n     GETBYINPUT_PATIENT_IMAGING_COMPLETED,GETBYINPUT_PATIENT_IMAGING_FAILED, UPDATE_PATIENT_IMAGING_COMPLETED,\r\n    UPDATE_PATIENT_IMAGING_FAILED,DELETE_PATIENT_IMAGING_COMPLETED,DELETE_PATIENT_IMAGING_FAILED } from \"../actions/PatientImagingOrder\";\r\nimport {CreatePatientImagingAPI,GetAllPatientImagingAPI,GetPatientImagingAPI,UpdatePatientImagingAPI,DeletePatientImagingAPI} from \"../../utils/api/PatientImagingOrderAPI\"; \r\n\r\nexport function* createPatientImaging(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientImagingAPI.createPatientImaging, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_IMAGING_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_IMAGING_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllPatientImaging(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllPatientImagingAPI.getAllPatientImaging, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_PATIENT_IMAGING_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_PATIENT_IMAGING_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getPatientImagingInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetPatientImagingAPI.getPatientImagingInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_PATIENT_IMAGING_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_PATIENT_IMAGING_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* updatePatientImaging(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdatePatientImagingAPI.updatePatientImaging, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_PATIENT_IMAGING_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_PATIENT_IMAGING_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deletePatientImaging(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeletePatientImagingAPI.deletePatientImaging, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_PATIENT_IMAGING_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_PATIENT_IMAGING_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}