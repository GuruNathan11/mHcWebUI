{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_VITALS_COMPLETED, CREATE_PATIENT_VITALS_FAILED, GETALL_PATIENT_VITALS_COMPLETED, GETALL_PATIENT_VITALS_FAILED, GETBYINPUT_PATIENT_VITALS_COMPLETED, GETBYINPUT_PATIENT_VITALS_FAILED, UPDATE_PATIENT_VITALS_COMPLETED, UPDATE_PATIENT_VITALS_FAILED, DELETE_PATIENT_VITALS_COMPLETED, DELETE_PATIENT_VITALS_FAILED, GET_PATIENTBYINPUTID_VITALS_COMPLETED, GET_PATIENTBYINPUTID_VITALS_FAILED } from \"../actions/PatientVitals\";\nimport { CreatePatientVitalsAPI, GetAllPatientVitalsAPI, GetVitalsByPatientAPI, GetVitalsByPatientInputAPI, UpdatePatientVitalsAPI, DeletePatientVitalsAPI } from \"../../utils/api/PatientVitalsAPI\";\nexport function* createPatientVitals(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientVitalsAPI.createPatientVitals, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_VITALS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_VITALS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllPatientVitals(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllPatientVitalsAPI.getAllPatientVitals, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_PATIENT_VITALS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_PATIENT_VITALS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getVitalsByPatientInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetVitalsByPatientAPI.getVitalsByPatientInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_PATIENT_VITALS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_PATIENT_VITALS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getVitalsByPatientInputId(request) {\n  try {\n    const {\n      data\n    } = yield call(GetVitalsByPatientInputAPI.getVitalsByPatientInputId, request);\n    yield put({\n      type: GET_PATIENTBYINPUTID_VITALS_COMPLETED,\n      payload: data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_PATIENTBYINPUTID_VITALS_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* updatePatientVitals(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdatePatientVitalsAPI.updatePatientVitals, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_PATIENT_VITALS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_PATIENT_VITALS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deletePatientVitals(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeletePatientVitalsAPI.deletePatientVitals, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_PATIENT_VITALS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_PATIENT_VITALS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_VITALS_COMPLETED","CREATE_PATIENT_VITALS_FAILED","GETALL_PATIENT_VITALS_COMPLETED","GETALL_PATIENT_VITALS_FAILED","GETBYINPUT_PATIENT_VITALS_COMPLETED","GETBYINPUT_PATIENT_VITALS_FAILED","UPDATE_PATIENT_VITALS_COMPLETED","UPDATE_PATIENT_VITALS_FAILED","DELETE_PATIENT_VITALS_COMPLETED","DELETE_PATIENT_VITALS_FAILED","GET_PATIENTBYINPUTID_VITALS_COMPLETED","GET_PATIENTBYINPUTID_VITALS_FAILED","CreatePatientVitalsAPI","GetAllPatientVitalsAPI","GetVitalsByPatientAPI","GetVitalsByPatientInputAPI","UpdatePatientVitalsAPI","DeletePatientVitalsAPI","createPatientVitals","request","result","input","type","payload","data","e","getAllPatientVitals","getVitalsByPatientInput","getVitalsByPatientInputId","message","updatePatientVitals","deletePatientVitals"],"sources":["E:/react/WebUI_MH/src/store/sagas/PatientVitals.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_VITALS_COMPLETED,CREATE_PATIENT_VITALS_FAILED,GETALL_PATIENT_VITALS_COMPLETED,GETALL_PATIENT_VITALS_FAILED,\r\n     GETBYINPUT_PATIENT_VITALS_COMPLETED,GETBYINPUT_PATIENT_VITALS_FAILED, UPDATE_PATIENT_VITALS_COMPLETED,\r\n    UPDATE_PATIENT_VITALS_FAILED,DELETE_PATIENT_VITALS_COMPLETED,DELETE_PATIENT_VITALS_FAILED,\r\n    GET_PATIENTBYINPUTID_VITALS_COMPLETED, GET_PATIENTBYINPUTID_VITALS_FAILED  } from \"../actions/PatientVitals\";\r\nimport { CreatePatientVitalsAPI,GetAllPatientVitalsAPI,GetVitalsByPatientAPI,GetVitalsByPatientInputAPI,UpdatePatientVitalsAPI,DeletePatientVitalsAPI } from \"../../utils/api/PatientVitalsAPI\";\r\n\r\nexport function* createPatientVitals(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientVitalsAPI.createPatientVitals, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_VITALS_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_VITALS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllPatientVitals(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllPatientVitalsAPI.getAllPatientVitals, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_PATIENT_VITALS_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_PATIENT_VITALS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getVitalsByPatientInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetVitalsByPatientAPI.getVitalsByPatientInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_PATIENT_VITALS_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_PATIENT_VITALS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getVitalsByPatientInputId (request:any) {\r\n    try {\r\n      \r\n        const { data } = yield call(GetVitalsByPatientInputAPI.getVitalsByPatientInputId,request);\r\n    \r\n      yield put({\r\n          type: GET_PATIENTBYINPUTID_VITALS_COMPLETED,\r\n          payload: data \r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_PATIENTBYINPUTID_VITALS_FAILED, payload: e.message });\r\n    }\r\n  }\r\n\r\n\r\nexport function* updatePatientVitals(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdatePatientVitalsAPI.updatePatientVitals, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_PATIENT_VITALS_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_PATIENT_VITALS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deletePatientVitals(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeletePatientVitalsAPI.deletePatientVitals, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_PATIENT_VITALS_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_PATIENT_VITALS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}