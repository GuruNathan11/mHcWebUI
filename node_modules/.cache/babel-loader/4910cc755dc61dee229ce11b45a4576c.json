{"ast":null,"code":"import { CREATE_PATIENTSTAFF_COMPLETED, CREATE_PATIENTSTAFF_FAILED, CREATE_PATIENTSTAFF_STARTED, GETID_PATIENTSTAFF_COMPLETED, GETID_PATIENTSTAFF_FAILED, GETID_PATIENTSTAFF_STARTED, GET_PATIENTSTAFF_COMPLETED, GET_PATIENTSTAFF_FAILED, GET_PATIENTSTAFF_STARTED, CREATE_STAFFPATIENT_STARTED, CREATE_STAFFPATIENT_COMPLETED, CREATE_STAFFPATIENT_FAILED } from '../actions/PatientStaffAssignController';\nconst intialLoginData = {\n  status: {\n    statusCode: 300,\n    statusDisplay: \"\",\n    statusValue: true\n  },\n  items: [],\n  loginInput: {\n    userId: \"\",\n    password: \"\",\n    username: \"\",\n    jwtToken: \"\",\n    secretKey: \"\",\n    securityQuestion: \"\",\n    email: \"\",\n    otp: \"\",\n    newPassword: \"\",\n    confirmNewPass: \"\",\n    answer: \"\",\n    roleFkId: {\n      roleId: 0,\n      roleName: \"\",\n      description: \"\",\n      status: 0,\n      createdAt: \"\",\n      createdBy: \"\",\n      updatedAt: \"\",\n      updatedBy: \"\"\n    },\n    status: 0,\n    createdAt: \"\",\n    createdBy: \"\",\n    updatedAt: \"\",\n    updatedBy: \"\"\n  },\n  isLoading: true,\n  isFormSubmit: false,\n  isLoggedIn: false,\n  error: ''\n};\nexport const assignpatientstaffData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case CREATE_PATIENTSTAFF_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case CREATE_PATIENTSTAFF_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case CREATE_PATIENTSTAFF_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const getIDpatientstaffData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GETID_PATIENTSTAFF_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GETID_PATIENTSTAFF_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GETID_PATIENTSTAFF_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const getallpatientstaffData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GET_PATIENTSTAFF_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GET_PATIENTSTAFF_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GET_PATIENTSTAFF_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const assignstaffpatientData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case CREATE_STAFFPATIENT_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case CREATE_STAFFPATIENT_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case CREATE_STAFFPATIENT_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CREATE_PATIENTSTAFF_COMPLETED","CREATE_PATIENTSTAFF_FAILED","CREATE_PATIENTSTAFF_STARTED","GETID_PATIENTSTAFF_COMPLETED","GETID_PATIENTSTAFF_FAILED","GETID_PATIENTSTAFF_STARTED","GET_PATIENTSTAFF_COMPLETED","GET_PATIENTSTAFF_FAILED","GET_PATIENTSTAFF_STARTED","CREATE_STAFFPATIENT_STARTED","CREATE_STAFFPATIENT_COMPLETED","CREATE_STAFFPATIENT_FAILED","intialLoginData","status","statusCode","statusDisplay","statusValue","items","loginInput","userId","password","username","jwtToken","secretKey","securityQuestion","email","otp","newPassword","confirmNewPass","answer","roleFkId","roleId","roleName","description","createdAt","createdBy","updatedAt","updatedBy","isLoading","isFormSubmit","isLoggedIn","error","assignpatientstaffData","state","action","type","input","payload","getIDpatientstaffData","getallpatientstaffData","assignstaffpatientData"],"sources":["E:/WebUI_MH/src/store/reducers/PatientStaffAssignController.ts"],"sourcesContent":["import {\r\n CREATE_PATIENTSTAFF_COMPLETED,CREATE_PATIENTSTAFF_FAILED,CREATE_PATIENTSTAFF_STARTED,GETID_PATIENTSTAFF_COMPLETED,GETID_PATIENTSTAFF_FAILED,GETID_PATIENTSTAFF_STARTED,GET_PATIENTSTAFF_COMPLETED,\r\n GET_PATIENTSTAFF_FAILED,GET_PATIENTSTAFF_STARTED,CREATE_STAFFPATIENT_STARTED,CREATE_STAFFPATIENT_COMPLETED,CREATE_STAFFPATIENT_FAILED\r\n    \r\n    } from '../actions/PatientStaffAssignController';\r\n    \r\n    \r\n    const intialLoginData = {\r\n        status: {\r\n            statusCode: 300,\r\n            statusDisplay: \"\",\r\n            statusValue: true\r\n        },\r\n        items: [],\r\n        loginInput: {       \r\n            userId: \"\",\r\n            password: \"\",\r\n            username:\"\",\r\n            jwtToken:\"\",\r\n            secretKey:\"\",\r\n            securityQuestion: \"\",\r\n            email:\"\",\r\n            otp:\"\",\r\n            newPassword:\"\",  \r\n            confirmNewPass: \"\",   \r\n            answer: \"\",\r\n            roleFkId:{roleId:0,roleName:\"\",description:\"\",status:0,createdAt:\"\",createdBy:\"\",updatedAt:\"\",updatedBy:\"\"},\r\n            status:0,\r\n            createdAt:\"\",\r\n            createdBy:\"\",\r\n            updatedAt:\"\",\r\n            updatedBy:\"\"\r\n        \r\n        },\r\n        isLoading: true,\r\n        isFormSubmit: false,\r\n        isLoggedIn: false,\r\n        error: ''\r\n    }\r\n    export const assignpatientstaffData = (state = intialLoginData, action: any) => {\r\n     \r\n        switch (action.type) {\r\n           \r\n            case CREATE_PATIENTSTAFF_STARTED:\r\n               return {\r\n                    ...state,\r\n                    isLoading: true,    \r\n                    isFormSubmit:true,\r\n                    items:[],\r\n                    loginInput: action.input\r\n                    \r\n                };\r\n    \r\n            case CREATE_PATIENTSTAFF_COMPLETED:\r\n                  return {\r\n                    ...state,\r\n                    isLoading: false,\r\n                    isFormSubmit:true,\r\n                    status: action.status,\r\n                    items: action.payload\r\n                    };\r\n                \r\n            case CREATE_PATIENTSTAFF_FAILED:\r\n                return {\r\n                    ...state,\r\n                    isLoading: true,\r\n                }; \r\n          \r\n                default:\r\n                    return state;\r\n            }\r\n            \r\n        };\r\n        export const getIDpatientstaffData = (state = intialLoginData, action: any) => {\r\n     \r\n            switch (action.type) {\r\n               \r\n                case GETID_PATIENTSTAFF_STARTED:\r\n                   return {\r\n                        ...state,\r\n                        isLoading: true,    \r\n                        isFormSubmit:true,\r\n                        items:[],\r\n                        loginInput: action.input\r\n                        \r\n                    };\r\n        \r\n                case GETID_PATIENTSTAFF_COMPLETED\r\n                :\r\n                      return {\r\n                        ...state,\r\n                        isLoading: false,\r\n                        isFormSubmit:true,\r\n                        status: action.status,\r\n                        items: action.payload\r\n                        };\r\n                    \r\n                case GETID_PATIENTSTAFF_FAILED:\r\n                    return {\r\n                        ...state,\r\n                        isLoading: true,\r\n                    }; \r\n              \r\n                    default:\r\n                        return state;\r\n                }\r\n                \r\n            };\r\n            export const getallpatientstaffData = (state = intialLoginData, action: any) => {               \r\n                switch (action.type) { \r\n                    case GET_PATIENTSTAFF_STARTED:  \r\n                  return {\r\n                    ...state,\r\n                    isLoading: true,    \r\n                    isFormSubmit:true,\r\n                    items:[],\r\n                    loginInput: action.input\r\n                  };\r\n                case GET_PATIENTSTAFF_COMPLETED:\r\n                  return {\r\n                    ...state,\r\n                    isLoading: false,\r\n                    isFormSubmit:true,\r\n                    status: action.status,\r\n                    items: action.payload\r\n                  };\r\n                case GET_PATIENTSTAFF_FAILED:\r\n                  return {\r\n                    ...state,\r\n                    isLoading: true,                  \r\n                  }; \r\n                  \r\n                        default:\r\n                            return state;\r\n                    }\r\n                    \r\n                };\r\n\r\n                export const assignstaffpatientData = (state = intialLoginData, action: any) => {\r\n     \r\n                    switch (action.type) {\r\n                       \r\n                        case CREATE_STAFFPATIENT_STARTED:\r\n                           return {\r\n                                ...state,\r\n                                isLoading: true,    \r\n                                isFormSubmit:true,\r\n                                items:[],\r\n                                loginInput: action.input\r\n                                \r\n                            };\r\n                \r\n                        case CREATE_STAFFPATIENT_COMPLETED:\r\n                              return {\r\n                                ...state,\r\n                                isLoading: false,\r\n                                isFormSubmit:true,\r\n                                status: action.status,\r\n                                items: action.payload\r\n                                };\r\n                            \r\n                        case CREATE_STAFFPATIENT_FAILED:\r\n                            return {\r\n                                ...state,\r\n                                isLoading: true,\r\n                            }; \r\n                      \r\n                            default:\r\n                                return state;\r\n                        }\r\n                        \r\n                    };"],"mappings":"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"},"metadata":{},"sourceType":"module"}