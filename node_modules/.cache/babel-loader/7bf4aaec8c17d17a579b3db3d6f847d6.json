{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_IMMUNIZATION_COMPLETED, CREATE_PATIENT_IMMUNIZATION_FAILED, GETALL_PATIENT_IMMUNIZATION_COMPLETED, GETALL_PATIENT_IMMUNIZATION_FAILED, GETBYINPUT_PATIENT_IMMUNIZATION_COMPLETED, GETBYINPUT_PATIENT_IMMUNIZATION_FAILED, UPDATE_PATIENT_IMMUNIZATION_COMPLETED, UPDATE_PATIENT_IMMUNIZATION_FAILED, DELETE_PATIENT_IMMUNIZATION_COMPLETED, DELETE_PATIENT_IMMUNIZATION_FAILED, GET_PATIENTBYINPUTID_IMMUNIZATION_COMPLETED, GET_PATIENTBYINPUTID_IMMUNIZATION_FAILED } from \"../actions/PatientImmunization\";\nimport { CreatePatientImmunizationAPI, GetAllPatientImmunizationAPI, GetImmunizationByPatientAPI, GetImmunizationByPatientInputAPI, UpdatePatientImmunizationAPI, DeletePatientImmunizationAPI } from \"../../utils/api/PatientImmunizationAPI\";\nexport function* createPatientImmunization(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientImmunizationAPI.createPatientImmunization, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_IMMUNIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_IMMUNIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllPatientImmunization(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllPatientImmunizationAPI.getAllPatientImmunization, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_PATIENT_IMMUNIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_PATIENT_IMMUNIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getImmunizationByPatientInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetImmunizationByPatientAPI.getImmunizationByPatientInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_PATIENT_IMMUNIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_PATIENT_IMMUNIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getImmunizationByPatientInputId(request) {\n  try {\n    const {\n      data\n    } = yield call(GetImmunizationByPatientInputAPI.getImmunizationByPatientInputId, request);\n    yield put({\n      type: GET_PATIENTBYINPUTID_IMMUNIZATION_COMPLETED,\n      payload: data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_PATIENTBYINPUTID_IMMUNIZATION_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* updatePatientImmunization(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdatePatientImmunizationAPI.updatePatientImmunization, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_PATIENT_IMMUNIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_PATIENT_IMMUNIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deletePatientImmunization(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeletePatientImmunizationAPI.deletePatientImmunization, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_PATIENT_IMMUNIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_PATIENT_IMMUNIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_IMMUNIZATION_COMPLETED","CREATE_PATIENT_IMMUNIZATION_FAILED","GETALL_PATIENT_IMMUNIZATION_COMPLETED","GETALL_PATIENT_IMMUNIZATION_FAILED","GETBYINPUT_PATIENT_IMMUNIZATION_COMPLETED","GETBYINPUT_PATIENT_IMMUNIZATION_FAILED","UPDATE_PATIENT_IMMUNIZATION_COMPLETED","UPDATE_PATIENT_IMMUNIZATION_FAILED","DELETE_PATIENT_IMMUNIZATION_COMPLETED","DELETE_PATIENT_IMMUNIZATION_FAILED","GET_PATIENTBYINPUTID_IMMUNIZATION_COMPLETED","GET_PATIENTBYINPUTID_IMMUNIZATION_FAILED","CreatePatientImmunizationAPI","GetAllPatientImmunizationAPI","GetImmunizationByPatientAPI","GetImmunizationByPatientInputAPI","UpdatePatientImmunizationAPI","DeletePatientImmunizationAPI","createPatientImmunization","request","result","input","type","payload","data","e","getAllPatientImmunization","getImmunizationByPatientInput","getImmunizationByPatientInputId","message","updatePatientImmunization","deletePatientImmunization"],"sources":["E:/react/WebUI_MH/src/store/sagas/PatientImmunization.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_IMMUNIZATION_COMPLETED,CREATE_PATIENT_IMMUNIZATION_FAILED,GETALL_PATIENT_IMMUNIZATION_COMPLETED,GETALL_PATIENT_IMMUNIZATION_FAILED,\r\n     GETBYINPUT_PATIENT_IMMUNIZATION_COMPLETED,GETBYINPUT_PATIENT_IMMUNIZATION_FAILED, UPDATE_PATIENT_IMMUNIZATION_COMPLETED,\r\n    UPDATE_PATIENT_IMMUNIZATION_FAILED,DELETE_PATIENT_IMMUNIZATION_COMPLETED,DELETE_PATIENT_IMMUNIZATION_FAILED,GET_PATIENTBYINPUTID_IMMUNIZATION_COMPLETED,\r\n    GET_PATIENTBYINPUTID_IMMUNIZATION_FAILED  } from \"../actions/PatientImmunization\";\r\nimport {CreatePatientImmunizationAPI,GetAllPatientImmunizationAPI,GetImmunizationByPatientAPI,GetImmunizationByPatientInputAPI,UpdatePatientImmunizationAPI,DeletePatientImmunizationAPI} from \"../../utils/api/PatientImmunizationAPI\"; \r\n\r\nexport function* createPatientImmunization(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientImmunizationAPI.createPatientImmunization, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_IMMUNIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_IMMUNIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllPatientImmunization(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllPatientImmunizationAPI.getAllPatientImmunization, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_PATIENT_IMMUNIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_PATIENT_IMMUNIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getImmunizationByPatientInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetImmunizationByPatientAPI.getImmunizationByPatientInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_PATIENT_IMMUNIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_PATIENT_IMMUNIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function*getImmunizationByPatientInputId (request:any) {\r\n    try {\r\n      \r\n        const { data } = yield call(GetImmunizationByPatientInputAPI.getImmunizationByPatientInputId,request);\r\n    \r\n      yield put({\r\n          type: GET_PATIENTBYINPUTID_IMMUNIZATION_COMPLETED,\r\n          payload: data \r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_PATIENTBYINPUTID_IMMUNIZATION_FAILED, payload: e.message });\r\n    }\r\n  }\r\n\r\nexport function* updatePatientImmunization(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdatePatientImmunizationAPI.updatePatientImmunization, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_PATIENT_IMMUNIZATION_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_PATIENT_IMMUNIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deletePatientImmunization(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeletePatientImmunizationAPI.deletePatientImmunization, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_PATIENT_IMMUNIZATION_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_PATIENT_IMMUNIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}