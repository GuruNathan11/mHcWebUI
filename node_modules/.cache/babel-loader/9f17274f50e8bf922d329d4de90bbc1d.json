{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { SAVE_LOGIN_COMPLETED, SAVE_LOGIN_FAILED, CHECK_SECURITY_COMPLETED, CHECK_SECURITY_FAILED, SAVE_FORGOTPASSWORD_COMPLETED, SAVE_FORGOTPASSWORD_FAILED, SAVE_RESETPASSWORD_COMPLETED, SAVE_RESETPASSWORD_FAILED, VERIFY_LOGIN_COMPLETED, VERIFY_LOGIN_FAILED, VERIFY_OTP_COMPLETED, VERIFY_OTP_FAILED, SAVE_RESETSECRTKEY_COMPLETED, SAVE_RESETSECRTKEY_FAILED, SAVE_RECREATEPASSWORD_COMPLETED, SAVE_RECREATEPASSWORD_FAILED } from \"../actions/Login\";\nimport { LoginAPI } from \"../../utils/api/LoginAPI\";\nexport function* saveLogin(request) {\n  try {\n    const result = yield call(LoginAPI.saveLogin, request.input);\n    yield put({\n      type: SAVE_LOGIN_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: SAVE_LOGIN_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* loginSecurity(request) {\n  try {\n    const result = yield call(LoginAPI.loginSecurity, request.input);\n    yield put({\n      type: CHECK_SECURITY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: CHECK_SECURITY_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* forgetPassword(request) {\n  try {\n    const result = yield call(LoginAPI.forgetPassword, request.input);\n    yield put({\n      type: SAVE_FORGOTPASSWORD_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: SAVE_FORGOTPASSWORD_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* saveResetPassword(request) {\n  try {\n    const result = yield call(LoginAPI.ResetPassword, request.input);\n    yield put({\n      type: SAVE_RESETPASSWORD_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: SAVE_RESETPASSWORD_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* verifyLogin(request) {\n  try {\n    const result = yield call(LoginAPI.verifyLogin, request.input);\n    yield put({\n      type: VERIFY_LOGIN_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: VERIFY_LOGIN_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* verifyOtp(request) {\n  try {\n    const result = yield call(LoginAPI.verifyotp, request.input);\n    yield put({\n      type: VERIFY_OTP_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: VERIFY_OTP_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* resetSecretKey(request) {\n  try {\n    // console.log(\"Input Data = \"+JSON.stringify(request.input));\n    const result = yield call(LoginAPI.resetSecretKey, request.input);\n    //  console.log(\"REsult\"+JSON.stringify(result.data));\n    yield put({\n      type: SAVE_RESETSECRTKEY_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: SAVE_RESETSECRTKEY_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* reCreatePassword(request) {\n  try {\n    //  console.log(\"Input Data = \"+JSON.stringify(request.input));\n    const result = yield call(LoginAPI.reCreatePassword, request.input);\n    yield put({\n      type: SAVE_RECREATEPASSWORD_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    // console.log(\"REsult\"+JSON.stringify(e));\n    yield put({\n      type: SAVE_RECREATEPASSWORD_FAILED,\n      payload: e.message\n    });\n  }\n}","map":{"version":3,"names":["put","call","SAVE_LOGIN_COMPLETED","SAVE_LOGIN_FAILED","CHECK_SECURITY_COMPLETED","CHECK_SECURITY_FAILED","SAVE_FORGOTPASSWORD_COMPLETED","SAVE_FORGOTPASSWORD_FAILED","SAVE_RESETPASSWORD_COMPLETED","SAVE_RESETPASSWORD_FAILED","VERIFY_LOGIN_COMPLETED","VERIFY_LOGIN_FAILED","VERIFY_OTP_COMPLETED","VERIFY_OTP_FAILED","SAVE_RESETSECRTKEY_COMPLETED","SAVE_RESETSECRTKEY_FAILED","SAVE_RECREATEPASSWORD_COMPLETED","SAVE_RECREATEPASSWORD_FAILED","LoginAPI","saveLogin","request","result","input","type","payload","data","e","loginSecurity","message","forgetPassword","saveResetPassword","ResetPassword","verifyLogin","verifyOtp","verifyotp","resetSecretKey","reCreatePassword"],"sources":["E:/WebUI_MH/src/store/sagas/Login.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\n\r\nimport { SAVE_LOGIN_COMPLETED,SAVE_LOGIN_FAILED,CHECK_SECURITY_COMPLETED,CHECK_SECURITY_FAILED,SAVE_FORGOTPASSWORD_COMPLETED,SAVE_FORGOTPASSWORD_FAILED,\r\n    SAVE_RESETPASSWORD_COMPLETED,SAVE_RESETPASSWORD_FAILED,VERIFY_LOGIN_COMPLETED, VERIFY_LOGIN_FAILED,VERIFY_OTP_COMPLETED,VERIFY_OTP_FAILED,SAVE_RESETSECRTKEY_COMPLETED,SAVE_RESETSECRTKEY_FAILED,\r\n    SAVE_RECREATEPASSWORD_COMPLETED,SAVE_RECREATEPASSWORD_FAILED\r\n} from \"../actions/Login\";\r\n\r\nimport { LoginAPI } from \"../../utils/api/LoginAPI\"; \r\n\r\n\r\nexport function* saveLogin(request: any) {\r\n \r\n    try {  \r\n         const result=yield call(LoginAPI.saveLogin, request.input);        \r\n        yield put({ \r\n            type: SAVE_LOGIN_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: SAVE_LOGIN_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\nexport function* loginSecurity(request: any) {\r\n    try {  \r\n         const result=yield call(LoginAPI.loginSecurity, request.input);        \r\n        yield put({\r\n            \r\n            type: CHECK_SECURITY_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: CHECK_SECURITY_FAILED, payload: e.message });\r\n       \r\n    \r\n    }\r\n}\r\nexport function* forgetPassword(request: any) {\r\n    try {  \r\n         const result=yield call(LoginAPI.forgetPassword, request.input);        \r\n        yield put({\r\n            \r\n            type: SAVE_FORGOTPASSWORD_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: SAVE_FORGOTPASSWORD_FAILED, payload: e.message });\r\n       \r\n    \r\n    }\r\n}\r\nexport function* saveResetPassword(request: any) {\r\n    \r\n    try {\r\n         const result=yield call(LoginAPI.ResetPassword, request.input);        \r\n        yield put({\r\n            \r\n            type: SAVE_RESETPASSWORD_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: SAVE_RESETPASSWORD_FAILED, payload: e.message });\r\n \r\n    }\r\n}\r\nexport function* verifyLogin(request: any) {\r\n     \r\n    try {\r\n         const result=yield call(LoginAPI.verifyLogin, request.input);\r\n         yield put({\r\n            \r\n            type: VERIFY_LOGIN_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n       \r\n        yield put({ type: VERIFY_LOGIN_FAILED, payload: e.message });\r\n    }\r\n}\r\nexport function* verifyOtp(request: any) {\r\n     \r\n    try {\r\n         const result=yield call(LoginAPI.verifyotp, request.input);\r\n         yield put({\r\n            \r\n            type: VERIFY_OTP_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n       \r\n        yield put({ type: VERIFY_OTP_FAILED, payload: e.message });\r\n    }\r\n}\r\nexport function* resetSecretKey(request: any) {\r\n     \r\n    try {\r\n        // console.log(\"Input Data = \"+JSON.stringify(request.input));\r\n         const result=yield call(LoginAPI.resetSecretKey, request.input);\r\n        //  console.log(\"REsult\"+JSON.stringify(result.data));\r\n         yield put({\r\n            \r\n            type: SAVE_RESETSECRTKEY_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n       \r\n        yield put({ type: SAVE_RESETSECRTKEY_FAILED, payload: e.message });\r\n    }\r\n}\r\n\r\n\r\nexport function* reCreatePassword(request: any) {\r\n     \r\n    try {\r\n        //  console.log(\"Input Data = \"+JSON.stringify(request.input));\r\n         const result=yield call(LoginAPI.reCreatePassword, request.input);\r\n          \r\n         yield put({\r\n            \r\n            type: SAVE_RECREATEPASSWORD_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        // console.log(\"REsult\"+JSON.stringify(e));\r\n        yield put({ type: SAVE_RECREATEPASSWORD_FAILED, payload: e.message });\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}