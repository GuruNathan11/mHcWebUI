{"ast":null,"code":"import moment from \"moment\";\nimport { HttpLogin } from \"../Http\";\nexport class UpdatePatientVisitAPI {\n  static updatePatientVisit(org) {\n    var url = \"/api/visit/update/\" + org.id;\n    org.visitStartDate = org.visitStartDate !== null && org.visitStartDate !== \"\" ? moment(org.visitStartDate).format('YYYYMMDDHHmm') : \"\";\n    org.visitEndDate = org.visitEndDate !== null && org.visitEndDate !== \"\" ? moment(org.visitEndDate).format('YYYYMMDDHHmm') : \"\";\n    org.admitDate = org.admitDate !== null && org.admitDate !== \"\" ? moment(org.admitDate).format('YYYYMMDDHHmm') : \"\";\n    org.dischargeDate = org.dischargeDate !== null && org.dischargeDate !== \"\" ? moment(org.dischargeDate).format('YYYYMMDDHHmm') : \"\";\n    var obj = JSON.stringify(org);\n    const resultMethod = HttpLogin.axios().put(url, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    }).then(res => {\n      //  console.log(\"API Response in post \" +JSON.stringify(res.data));\n      return res;\n    }).catch(e => {\n      //  console.log(\"Error in post \" +JSON.stringify(e));\n      return e;\n    });\n    return resultMethod;\n  }\n}\nexport class CreatePatientVisitAPI {\n  static createPatientVisit(org) {\n    var url = \"/api/visit/register\";\n    org.visitStartDate = org.visitStartDate !== null && org.visitStartDate !== \"\" ? moment(org.visitStartDate).format('YYYYMMDDHHmm') : \"\";\n    org.visitEndDate = org.visitEndDate !== null && org.visitEndDate !== \"\" ? moment(org.visitEndDate).format('YYYYMMDDHHmm') : \"\";\n    org.admitDate = org.admitDate !== null && org.admitDate !== \"\" ? moment(org.admitDate).format('YYYYMMDDHHmm') : \"\";\n    org.dischargeDate = org.dischargeDate !== null && org.dischargeDate !== \"\" ? moment(org.dischargeDate).format('YYYYMMDDHHmm') : \"\";\n    var obj = JSON.stringify(org);\n    console.log(obj);\n    const resultMethod = HttpLogin.axios().post(url, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    }).then(res => {\n      console.log(\"API Response in post \" + JSON.stringify(res.data));\n      return res;\n    }).catch(e => {\n      console.log(\"Error in post \" + JSON.stringify(e));\n      return e;\n    });\n    return resultMethod;\n  }\n}\nexport class GetallPatientVisitAPI {\n  static getAllPatientVisit(org) {\n    var url = \"/api/visit/getAll\";\n    var obj = JSON.stringify(org);\n    const resultMethod = HttpLogin.axios().get(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    }).then(res => {\n      //  console.log(\"API Response in post \" +JSON.stringify(res.data));\n      return res;\n    }).catch(e => {\n      //  console.log(\"Error in post \" +JSON.stringify(e));\n      return e;\n    });\n    return resultMethod;\n  }\n}\nexport class GetPatientVisitByPidAPI {\n  static getidPatientVisitByPid(org) {\n    var url = \"/api/visit/ByPid/\" + org;\n    var obj = JSON.stringify(org);\n    const resultMethod = HttpLogin.axios().get(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    }).then(res => {\n      //  console.log(\"API Response in post \" +JSON.stringify(res.data));\n      return res;\n    }).catch(e => {\n      //  console.log(\"Error in post \" +JSON.stringify(e));\n      return e;\n    });\n    return resultMethod;\n  }\n}\nexport class GetPatientVisitByIdAPI {\n  static getPatientVisitById(org) {\n    var url = \"/api/visit/ById/\" + org;\n    var obj = JSON.stringify(org);\n    const resultMethod = HttpLogin.axios().get(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    }).then(res => {\n      //  console.log(\"API Response in post \" +JSON.stringify(res.data));\n      return res;\n    }).catch(e => {\n      //  console.log(\"Error in post \" +JSON.stringify(e));\n      return e;\n    });\n    return resultMethod;\n  }\n}\nexport class DeletePatientVisitAPI {\n  static deletePatientVisit(org) {\n    var url = \"/api/visit/delete/\" + org;\n    const resultMethod = HttpLogin.axios().delete(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\"\n      }\n    }).then(res => {\n      //  console.log(\"API Response in post \" +JSON.stringify(res.data));\n      return res;\n    }).catch(e => {\n      //  console.log(\"Error in post \" +JSON.stringify(e));\n      return e;\n    });\n    return resultMethod;\n  }\n}","map":{"version":3,"names":["moment","HttpLogin","UpdatePatientVisitAPI","updatePatientVisit","org","url","id","visitStartDate","format","visitEndDate","admitDate","dischargeDate","obj","JSON","stringify","resultMethod","axios","put","headers","then","res","catch","e","CreatePatientVisitAPI","createPatientVisit","console","log","post","data","GetallPatientVisitAPI","getAllPatientVisit","get","GetPatientVisitByPidAPI","getidPatientVisitByPid","GetPatientVisitByIdAPI","getPatientVisitById","DeletePatientVisitAPI","deletePatientVisit","delete"],"sources":["E:/react/WebUI_MH/src/utils/api/PatientVisitAdminControllerAPI.ts"],"sourcesContent":["import moment from \"moment\";\r\nimport { HttpLogin } from \"../Http\";\r\nexport class UpdatePatientVisitAPI {\r\n    public static updatePatientVisit(org: any) { \r\n        var url = \"/api/visit/update/\"+org.id;     \r\n        org.visitStartDate = (org.visitStartDate !== null && org.visitStartDate !== \"\") ? moment(org.visitStartDate).format('YYYYMMDDHHmm') : \"\";\r\n        org.visitEndDate = (org.visitEndDate !== null && org.visitEndDate !== \"\") ? moment(org.visitEndDate).format('YYYYMMDDHHmm') : \"\";\r\n        org.admitDate = (org.admitDate !== null && org.admitDate !== \"\") ? moment(org.admitDate).format('YYYYMMDDHHmm') : \"\";\r\n        org.dischargeDate = (org.dischargeDate !== null && org.dischargeDate !== \"\") ? moment(org.dischargeDate).format('YYYYMMDDHHmm') : \"\";           \r\n        var obj = JSON.stringify(org);\r\n        const resultMethod =   HttpLogin.axios().put(url,obj, {\r\n              headers: { \r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"*\",\r\n                \"Access-Control-Allow-Headers\": \"*\"\r\n              }\r\n            })\r\n            .then(res => {       \r\n              \r\n            \r\n              //  console.log(\"API Response in post \" +JSON.stringify(res.data));\r\n                 return res;   \r\n            })\r\n            .catch((e: any) => {\r\n              //  console.log(\"Error in post \" +JSON.stringify(e));\r\n              return e;               \r\n            });\r\n            return resultMethod;\r\n      }\r\n  \r\n  }\r\n\r\n  export class CreatePatientVisitAPI {\r\n    public static createPatientVisit(org: any) { \r\n        var url = \"/api/visit/register\" ;    \r\n        org.visitStartDate = (org.visitStartDate !== null && org.visitStartDate !== \"\") ? moment(org.visitStartDate).format('YYYYMMDDHHmm') : \"\";\r\n        org.visitEndDate = (org.visitEndDate !== null && org.visitEndDate !== \"\") ? moment(org.visitEndDate).format('YYYYMMDDHHmm') : \"\";\r\n        org.admitDate = (org.admitDate !== null && org.admitDate !== \"\") ? moment(org.admitDate).format('YYYYMMDDHHmm') : \"\";\r\n        org.dischargeDate = (org.dischargeDate !== null && org.dischargeDate !== \"\") ? moment(org.dischargeDate).format('YYYYMMDDHHmm') : \"\";               \r\n        var obj = JSON.stringify(org);\r\n          console.log(obj);\r\n     \r\n   const resultMethod =   HttpLogin.axios().post(url,obj, {\r\n              headers: { \r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"*\",\r\n                \"Access-Control-Allow-Headers\": \"*\"\r\n              }\r\n            })\r\n            .then(res => {                \r\n                console.log(\"API Response in post \" +JSON.stringify(res.data));\r\n                 return res;   \r\n            })\r\n            .catch((e: any) => {\r\n                console.log(\"Error in post \" +JSON.stringify(e));\r\n              return e;               \r\n            });\r\n            return resultMethod;\r\n    \r\n      }\r\n  \r\n  }\r\n  export class GetallPatientVisitAPI {\r\n    public static getAllPatientVisit(org: any) { \r\n        var url = \"/api/visit/getAll\";   \r\n        var obj = JSON.stringify(org);\r\n     \r\n        const resultMethod =   HttpLogin.axios().get(url,   {\r\n              headers: { \r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"*\",\r\n                \"Access-Control-Allow-Headers\": \"*\"\r\n              }\r\n            })\r\n            .then(res => {       \r\n              \r\n            \r\n              //  console.log(\"API Response in post \" +JSON.stringify(res.data));\r\n                 return res;   \r\n            })\r\n            .catch((e: any) => {\r\n              //  console.log(\"Error in post \" +JSON.stringify(e));\r\n              return e;               \r\n            });\r\n            return resultMethod;\r\n      }\r\n\r\n}\r\nexport class GetPatientVisitByPidAPI {\r\n    public static getidPatientVisitByPid(org: any) { \r\n        var url = \"/api/visit/ByPid/\"  +org ;\r\n        var obj = JSON.stringify(org);\r\n     \r\n        const resultMethod =   HttpLogin.axios().get(url,   {\r\n              headers: { \r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"*\",\r\n                \"Access-Control-Allow-Headers\": \"*\"\r\n              }\r\n            })\r\n            .then(res => {       \r\n              \r\n            \r\n              //  console.log(\"API Response in post \" +JSON.stringify(res.data));\r\n                 return res;   \r\n            })\r\n            .catch((e: any) => {\r\n              //  console.log(\"Error in post \" +JSON.stringify(e));\r\n              return e;               \r\n            });\r\n            return resultMethod;\r\n      }\r\n\r\n}\r\n\r\nexport class GetPatientVisitByIdAPI {\r\n  public static getPatientVisitById(org: any) { \r\n      var url = \"/api/visit/ById/\"  +org ;\r\n      var obj = JSON.stringify(org);\r\n   \r\n      const resultMethod =   HttpLogin.axios().get(url,   {\r\n            headers: { \r\n              'Content-Type': 'application/json',\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Access-Control-Allow-Methods\": \"*\",\r\n              \"Access-Control-Allow-Headers\": \"*\"\r\n            }\r\n          })\r\n          .then(res => {       \r\n            \r\n          \r\n            //  console.log(\"API Response in post \" +JSON.stringify(res.data));\r\n               return res;   \r\n          })\r\n          .catch((e: any) => {\r\n            //  console.log(\"Error in post \" +JSON.stringify(e));\r\n            return e;               \r\n          });\r\n          return resultMethod;\r\n    }\r\n\r\n}\r\n\r\nexport class DeletePatientVisitAPI {\r\n  public static deletePatientVisit(org: any) { \r\n      var url = \"/api/visit/delete/\"+org;         \r\n   \r\n      const resultMethod =   HttpLogin.axios().delete(url, {\r\n            headers: { \r\n              'Content-Type': 'application/json',\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Access-Control-Allow-Methods\": \"*\",\r\n              \"Access-Control-Allow-Headers\": \"*\"\r\n            }\r\n          })\r\n          .then(res => {       \r\n            \r\n          \r\n          //  console.log(\"API Response in post \" +JSON.stringify(res.data));\r\n               return res;   \r\n          })\r\n          .catch((e: any) => {\r\n          //  console.log(\"Error in post \" +JSON.stringify(e));\r\n            return e;               \r\n          });\r\n          return resultMethod;\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}