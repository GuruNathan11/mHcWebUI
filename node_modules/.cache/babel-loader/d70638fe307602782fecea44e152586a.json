{"ast":null,"code":"import { CREATE_BED_ASSIGNMENT_STARTED, CREATE_BED_ASSIGNMENT_COMPLETED, CREATE_BED_ASSIGNMENT_FAILED, GETALL_BED_ASSIGNMENT_STARTED, GETALL_BED_ASSIGNMENT_COMPLETED, GETALL_BED_ASSIGNMENT_FAILED, CREATE_PATIENT_BED_ASSIGNMENT_STARTED, CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED, CREATE_PATIENT_BED_ASSIGNMENT_FAILED, GET_PATIENT_BED_ASSIGNMENT_STARTED, GET_PATIENT_BED_ASSIGNMENT_COMPLETED, GET_PATIENT_BED_ASSIGNMENT_FAILED } from '../actions/BedAssignment';\nconst intialLoginData = {\n  status: {\n    statusCode: 300,\n    statusDisplay: \"\",\n    statusValue: true\n  },\n  items: [],\n  loginInput: {\n    userId: \"\",\n    password: \"\",\n    username: \"\",\n    jwtToken: \"\",\n    secretKey: \"\",\n    securityQuestion: \"\",\n    email: \"\",\n    otp: \"\",\n    newPassword: \"\",\n    confirmNewPass: \"\",\n    answer: \"\",\n    roleFkId: {\n      roleId: 0,\n      roleName: \"\",\n      description: \"\",\n      status: 0,\n      createdAt: \"\",\n      createdBy: \"\",\n      updatedAt: \"\",\n      updatedBy: \"\"\n    },\n    status: 0,\n    createdAt: \"\",\n    createdBy: \"\",\n    updatedAt: \"\",\n    updatedBy: \"\"\n  },\n  isLoading: true,\n  isFormSubmit: false,\n  isLoggedIn: false,\n  loggedStatus: false,\n  error: ''\n};\nexport const createBedAssignmentData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case CREATE_BED_ASSIGNMENT_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case CREATE_BED_ASSIGNMENT_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload,\n        loggedStatus: true\n      };\n    case CREATE_BED_ASSIGNMENT_FAILED:\n      return {\n        ...state,\n        isLoading: true,\n        loggedStatus: false\n      };\n    default:\n      return state;\n  }\n};\nexport const getallBedAssignmentData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GETALL_BED_ASSIGNMENT_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GETALL_BED_ASSIGNMENT_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GETALL_BED_ASSIGNMENT_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const createPatientBedAssignData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case CREATE_PATIENT_BED_ASSIGNMENT_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload,\n        loggedStatus: true\n      };\n    case CREATE_PATIENT_BED_ASSIGNMENT_FAILED:\n      return {\n        ...state,\n        isLoading: true,\n        loggedStatus: false\n      };\n    default:\n      return state;\n  }\n};\nexport const getPatientBedAssignmentData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GET_PATIENT_BED_ASSIGNMENT_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GET_PATIENT_BED_ASSIGNMENT_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GET_PATIENT_BED_ASSIGNMENT_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CREATE_BED_ASSIGNMENT_STARTED","CREATE_BED_ASSIGNMENT_COMPLETED","CREATE_BED_ASSIGNMENT_FAILED","GETALL_BED_ASSIGNMENT_STARTED","GETALL_BED_ASSIGNMENT_COMPLETED","GETALL_BED_ASSIGNMENT_FAILED","CREATE_PATIENT_BED_ASSIGNMENT_STARTED","CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED","CREATE_PATIENT_BED_ASSIGNMENT_FAILED","GET_PATIENT_BED_ASSIGNMENT_STARTED","GET_PATIENT_BED_ASSIGNMENT_COMPLETED","GET_PATIENT_BED_ASSIGNMENT_FAILED","intialLoginData","status","statusCode","statusDisplay","statusValue","items","loginInput","userId","password","username","jwtToken","secretKey","securityQuestion","email","otp","newPassword","confirmNewPass","answer","roleFkId","roleId","roleName","description","createdAt","createdBy","updatedAt","updatedBy","isLoading","isFormSubmit","isLoggedIn","loggedStatus","error","createBedAssignmentData","state","action","type","input","payload","getallBedAssignmentData","createPatientBedAssignData","getPatientBedAssignmentData"],"sources":["E:/WebUI_MH/src/store/reducers/BedAssignment.ts"],"sourcesContent":["import {\r\n    CREATE_BED_ASSIGNMENT_STARTED,\r\n    CREATE_BED_ASSIGNMENT_COMPLETED,\r\n    CREATE_BED_ASSIGNMENT_FAILED,\r\n    GETALL_BED_ASSIGNMENT_STARTED ,\r\n    GETALL_BED_ASSIGNMENT_COMPLETED,\r\n    GETALL_BED_ASSIGNMENT_FAILED,\r\n    CREATE_PATIENT_BED_ASSIGNMENT_STARTED,\r\n    CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED,\r\n    CREATE_PATIENT_BED_ASSIGNMENT_FAILED,\r\n    GET_PATIENT_BED_ASSIGNMENT_STARTED,\r\n    GET_PATIENT_BED_ASSIGNMENT_COMPLETED,\r\n    GET_PATIENT_BED_ASSIGNMENT_FAILED\r\n} from '../actions/BedAssignment';   \r\n    \r\n    \r\n    \r\nconst intialLoginData = {\r\n    status: {\r\n        statusCode: 300,\r\n        statusDisplay: \"\",\r\n        statusValue: true\r\n    },\r\n    items: [],\r\n    loginInput: {       \r\n        userId: \"\",\r\n        password: \"\",\r\n        username:\"\",\r\n        jwtToken:\"\",\r\n        secretKey:\"\",\r\n        securityQuestion: \"\",\r\n        email:\"\",\r\n        otp:\"\",\r\n        newPassword:\"\",  \r\n        confirmNewPass: \"\",   \r\n        answer: \"\",\r\n        roleFkId:{roleId:0,roleName:\"\",description:\"\",status:0,createdAt:\"\",createdBy:\"\",updatedAt:\"\",updatedBy:\"\"},\r\n        status:0,\r\n        createdAt:\"\",\r\n        createdBy:\"\",\r\n        updatedAt:\"\",\r\n        updatedBy:\"\"\r\n    \r\n    },\r\n    isLoading: true,\r\n    isFormSubmit: false,\r\n    isLoggedIn: false,\r\n    loggedStatus: false,\r\n    error: ''\r\n}\r\n\r\n\r\n\r\nexport const createBedAssignmentData = (state = intialLoginData, action: any) => {\r\n    switch (action.type) {\r\n       \r\n        case CREATE_BED_ASSIGNMENT_STARTED:\r\n           return {\r\n                ...state,\r\n                isLoading: true,    \r\n                isFormSubmit:true,\r\n                items:[],\r\n                loginInput: action.input\r\n                \r\n            };\r\n\r\n        case CREATE_BED_ASSIGNMENT_COMPLETED:\r\n              return {\r\n                ...state,\r\n                isLoading: false,\r\n                isFormSubmit:true,\r\n                status: action.status,\r\n                items: action.payload,\r\n                loggedStatus: true\r\n                };\r\n            \r\n        case CREATE_BED_ASSIGNMENT_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loggedStatus: false\r\n            }; \r\n      \r\n            default:\r\n                return state;\r\n        }\r\n        \r\n    };\r\n\r\n    export const getallBedAssignmentData = (state = intialLoginData, action: any) => {               \r\n        switch (action.type) { \r\n            case GETALL_BED_ASSIGNMENT_STARTED:  \r\n          return {\r\n            ...state,\r\n            isLoading: true,    \r\n            isFormSubmit:true,\r\n            items:[],\r\n            loginInput: action.input\r\n          };\r\n        case GETALL_BED_ASSIGNMENT_COMPLETED:\r\n          return {\r\n            ...state,\r\n            isLoading: false,\r\n            isFormSubmit:true,\r\n            status: action.status,\r\n            items: action.payload\r\n          };\r\n        case GETALL_BED_ASSIGNMENT_FAILED:\r\n          return {\r\n            ...state,\r\n            isLoading: true,                  \r\n          }; \r\n          \r\n                default:\r\n                    return state;\r\n            }\r\n            \r\n        };\r\n\r\n        export const createPatientBedAssignData = (state = intialLoginData, action: any) => {\r\n          switch (action.type) {\r\n             \r\n              case CREATE_PATIENT_BED_ASSIGNMENT_STARTED:\r\n                 return {\r\n                      ...state,\r\n                      isLoading: true,    \r\n                      isFormSubmit:true,\r\n                      items:[],\r\n                      loginInput: action.input\r\n                      \r\n                  };\r\n      \r\n              case CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED:\r\n                    return {\r\n                      ...state,\r\n                      isLoading: false,\r\n                      isFormSubmit:true,\r\n                      status: action.status,\r\n                      items: action.payload,\r\n                      loggedStatus: true\r\n                      };\r\n                  \r\n              case CREATE_PATIENT_BED_ASSIGNMENT_FAILED:\r\n                  return {\r\n                      ...state,\r\n                      isLoading: true,\r\n                      loggedStatus: false\r\n                  }; \r\n            \r\n                  default:\r\n                      return state;\r\n              }\r\n              \r\n          };\r\n      \r\n          export const getPatientBedAssignmentData = (state = intialLoginData, action: any) => {               \r\n              switch (action.type) { \r\n                  case GET_PATIENT_BED_ASSIGNMENT_STARTED:  \r\n                return {\r\n                  ...state,\r\n                  isLoading: true,    \r\n                  isFormSubmit:true,\r\n                  items:[],\r\n                  loginInput: action.input\r\n                };\r\n              case GET_PATIENT_BED_ASSIGNMENT_COMPLETED:\r\n                return {\r\n                  ...state,\r\n                  isLoading: false,\r\n                  isFormSubmit:true,\r\n                  status: action.status,\r\n                  items: action.payload\r\n                };\r\n              case GET_PATIENT_BED_ASSIGNMENT_FAILED:\r\n                return {\r\n                  ...state,\r\n                  isLoading: true,                  \r\n                }; \r\n                \r\n                      default:\r\n                          return state;\r\n                  }\r\n                  \r\n              };"],"mappings":"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"},"metadata":{},"sourceType":"module"}