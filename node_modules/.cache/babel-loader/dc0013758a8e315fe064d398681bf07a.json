{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_ADMIT_COMPLETED, CREATE_PATIENT_ADMIT_FAILED, CREATE_TRANSFER_PATIENT_COMPLETED, CREATE_TRANSFER_PATIENT_FAILED, CREATE_DISCHARGE_PATIENT_COMPLETED, CREATE_DISCHARGE_PATIENT_FAILED, GET_PATIENT_ADMIT_COMPLETED, GET_PATIENT_ADMIT_FAILED, GET_TRANSFER_PATIENT_COMPLETED, GET_TRANSFER_PATIENT_FAILED, GET_DISCHARGE_PATIENT_COMPLETED, GET_DISCHARGE_PATIENT_FAILED } from \"../actions/PatientADT\";\nimport { CreatePatientAdmitAPI, CreateDischargePatientAPI, createTransferPatientAPI, getTransferPatientAPI, getDischargePatientAPI, getAdmitPatientAPI } from \"../../utils/api/PatientADTAPI\";\nexport function* createPatientAdmit(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientAdmitAPI.createPatientAdmit, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_ADMIT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_ADMIT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* createDischargePatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreateDischargePatientAPI.createDischargePatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_TRANSFER_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_TRANSFER_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* createTransferPatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(createTransferPatientAPI.createTransferPatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_DISCHARGE_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_DISCHARGE_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getTransferPatient(request) {\n  try {\n    const {\n      data\n    } = yield call(getTransferPatientAPI.getTransferPatient, request);\n    yield put({\n      type: GET_TRANSFER_PATIENT_COMPLETED,\n      payload: data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_TRANSFER_PATIENT_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* getDischargePatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(getDischargePatientAPI.getDischargePatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GET_DISCHARGE_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GET_DISCHARGE_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAdmitPatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(getAdmitPatientAPI.getAdmitPatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GET_PATIENT_ADMIT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GET_PATIENT_ADMIT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_ADMIT_COMPLETED","CREATE_PATIENT_ADMIT_FAILED","CREATE_TRANSFER_PATIENT_COMPLETED","CREATE_TRANSFER_PATIENT_FAILED","CREATE_DISCHARGE_PATIENT_COMPLETED","CREATE_DISCHARGE_PATIENT_FAILED","GET_PATIENT_ADMIT_COMPLETED","GET_PATIENT_ADMIT_FAILED","GET_TRANSFER_PATIENT_COMPLETED","GET_TRANSFER_PATIENT_FAILED","GET_DISCHARGE_PATIENT_COMPLETED","GET_DISCHARGE_PATIENT_FAILED","CreatePatientAdmitAPI","CreateDischargePatientAPI","createTransferPatientAPI","getTransferPatientAPI","getDischargePatientAPI","getAdmitPatientAPI","createPatientAdmit","request","result","input","type","payload","data","e","createDischargePatient","createTransferPatient","getTransferPatient","message","getDischargePatient","getAdmitPatient"],"sources":["E:/react/WebUI_MH/src/store/sagas/PatientADT.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_ADMIT_COMPLETED,CREATE_PATIENT_ADMIT_FAILED,CREATE_TRANSFER_PATIENT_COMPLETED,CREATE_TRANSFER_PATIENT_FAILED,\r\n    CREATE_DISCHARGE_PATIENT_COMPLETED,CREATE_DISCHARGE_PATIENT_FAILED, GET_PATIENT_ADMIT_COMPLETED,\r\n    GET_PATIENT_ADMIT_FAILED,GET_TRANSFER_PATIENT_COMPLETED,GET_TRANSFER_PATIENT_FAILED,GET_DISCHARGE_PATIENT_COMPLETED,\r\n    GET_DISCHARGE_PATIENT_FAILED  } from \"../actions/PatientADT\";\r\nimport {CreatePatientAdmitAPI,CreateDischargePatientAPI,createTransferPatientAPI,getTransferPatientAPI,getDischargePatientAPI,getAdmitPatientAPI} from \"../../utils/api/PatientADTAPI\"; \r\n\r\nexport function* createPatientAdmit(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientAdmitAPI.createPatientAdmit, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_ADMIT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_ADMIT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* createDischargePatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreateDischargePatientAPI.createDischargePatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_TRANSFER_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_TRANSFER_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* createTransferPatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(createTransferPatientAPI.createTransferPatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_DISCHARGE_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_DISCHARGE_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getTransferPatient (request:any) {\r\n    try {\r\n      \r\n        const { data } = yield call(getTransferPatientAPI.getTransferPatient,request);\r\n    \r\n      yield put({\r\n          type: GET_TRANSFER_PATIENT_COMPLETED,\r\n          payload: data \r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_TRANSFER_PATIENT_FAILED, payload: e.message });\r\n    }\r\n  }\r\n\r\nexport function* getDischargePatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(getDischargePatientAPI.getDischargePatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  GET_DISCHARGE_PATIENT_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GET_DISCHARGE_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getAdmitPatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(getAdmitPatientAPI.getAdmitPatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  GET_PATIENT_ADMIT_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GET_PATIENT_ADMIT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}