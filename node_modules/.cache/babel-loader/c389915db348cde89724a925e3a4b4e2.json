{"ast":null,"code":"import { CREATE_Q15CONFIG_COMPLETED, CREATE_Q15CONFIG_FAILED, CREATE_Q15CONFIG_STARTED, GETID_Q15CONFIG_COMPLETED, GETID_Q15CONFIG_FAILED, GETID_Q15CONFIG_STARTED, GET_Q15CONFIG_COMPLETED, GET_Q15CONFIG_FAILED, GET_Q15CONFIG_STARTED, GETSLOT_Q15CONFIG_COMPLETED, GETSLOT_Q15CONFIG_FAILED, GETSLOT_Q15CONFIG_STARTED } from '../actions/Q15ConfigController';\nconst intialLoginData = {\n  status: {\n    statusCode: 300,\n    statusDisplay: \"\",\n    statusValue: true\n  },\n  items: [],\n  loginInput: {\n    userId: \"\",\n    password: \"\",\n    username: \"\",\n    jwtToken: \"\",\n    secretKey: \"\",\n    securityQuestion: \"\",\n    email: \"\",\n    otp: \"\",\n    newPassword: \"\",\n    confirmNewPass: \"\",\n    answer: \"\",\n    roleFkId: {\n      roleId: 0,\n      roleName: \"\",\n      description: \"\",\n      status: 0,\n      createdAt: \"\",\n      createdBy: \"\",\n      updatedAt: \"\",\n      updatedBy: \"\"\n    },\n    status: 0,\n    createdAt: \"\",\n    createdBy: \"\",\n    updatedAt: \"\",\n    updatedBy: \"\"\n  },\n  isLoading: true,\n  isFormSubmit: false,\n  isLoggedIn: false,\n  error: ''\n};\nexport const createq15configData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case CREATE_Q15CONFIG_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case CREATE_Q15CONFIG_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case CREATE_Q15CONFIG_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const getallq15configData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GET_Q15CONFIG_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GET_Q15CONFIG_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GET_Q15CONFIG_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const getidq15configData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GETID_Q15CONFIG_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GETID_Q15CONFIG_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GETID_Q15CONFIG_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};\nexport const getSLOTq15configData = (state = intialLoginData, action) => {\n  switch (action.type) {\n    case GETSLOT_Q15CONFIG_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        isFormSubmit: true,\n        items: [],\n        loginInput: action.input\n      };\n    case GETSLOT_Q15CONFIG_COMPLETED:\n      return {\n        ...state,\n        isLoading: false,\n        isFormSubmit: true,\n        status: action.status,\n        items: action.payload\n      };\n    case GETSLOT_Q15CONFIG_FAILED:\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CREATE_Q15CONFIG_COMPLETED","CREATE_Q15CONFIG_FAILED","CREATE_Q15CONFIG_STARTED","GETID_Q15CONFIG_COMPLETED","GETID_Q15CONFIG_FAILED","GETID_Q15CONFIG_STARTED","GET_Q15CONFIG_COMPLETED","GET_Q15CONFIG_FAILED","GET_Q15CONFIG_STARTED","GETSLOT_Q15CONFIG_COMPLETED","GETSLOT_Q15CONFIG_FAILED","GETSLOT_Q15CONFIG_STARTED","intialLoginData","status","statusCode","statusDisplay","statusValue","items","loginInput","userId","password","username","jwtToken","secretKey","securityQuestion","email","otp","newPassword","confirmNewPass","answer","roleFkId","roleId","roleName","description","createdAt","createdBy","updatedAt","updatedBy","isLoading","isFormSubmit","isLoggedIn","error","createq15configData","state","action","type","input","payload","getallq15configData","getidq15configData","getSLOTq15configData"],"sources":["E:/react/WebUI_MH/src/store/reducers/Q15ConfigController.ts"],"sourcesContent":["import {\r\n    CREATE_Q15CONFIG_COMPLETED,CREATE_Q15CONFIG_FAILED,CREATE_Q15CONFIG_STARTED,GETID_Q15CONFIG_COMPLETED,GETID_Q15CONFIG_FAILED,GETID_Q15CONFIG_STARTED,GET_Q15CONFIG_COMPLETED,GET_Q15CONFIG_FAILED,GET_Q15CONFIG_STARTED,\r\n  GETSLOT_Q15CONFIG_COMPLETED,GETSLOT_Q15CONFIG_FAILED,GETSLOT_Q15CONFIG_STARTED\r\n       } from '../actions/Q15ConfigController';\r\n       \r\n       \r\n       const intialLoginData = {\r\n           status: {\r\n               statusCode: 300,\r\n               statusDisplay: \"\",\r\n               statusValue: true\r\n           },\r\n           items: [],\r\n           loginInput: {       \r\n               userId: \"\",\r\n               password: \"\",\r\n               username:\"\",\r\n               jwtToken:\"\",\r\n               secretKey:\"\",\r\n               securityQuestion: \"\",\r\n               email:\"\",\r\n               otp:\"\",\r\n               newPassword:\"\",  \r\n               confirmNewPass: \"\",   \r\n               answer: \"\",\r\n               roleFkId:{roleId:0,roleName:\"\",description:\"\",status:0,createdAt:\"\",createdBy:\"\",updatedAt:\"\",updatedBy:\"\"},\r\n               status:0,\r\n               createdAt:\"\",\r\n               createdBy:\"\",\r\n               updatedAt:\"\",\r\n               updatedBy:\"\"\r\n           \r\n           },\r\n           isLoading: true,\r\n           isFormSubmit: false,\r\n           isLoggedIn: false,\r\n           error: ''\r\n       }\r\n       export const createq15configData = (state = intialLoginData, action: any) => {\r\n        \r\n           switch (action.type) {\r\n              \r\n               case CREATE_Q15CONFIG_STARTED:\r\n                  return {\r\n                       ...state,\r\n                       isLoading: true,    \r\n                       isFormSubmit:true,\r\n                       items:[],\r\n                       loginInput: action.input\r\n                       \r\n                   };\r\n       \r\n               case CREATE_Q15CONFIG_COMPLETED:\r\n                     return {\r\n                       ...state,\r\n                       isLoading: false,\r\n                       isFormSubmit:true,\r\n                       status: action.status,\r\n                       items: action.payload\r\n                       };\r\n                   \r\n               case CREATE_Q15CONFIG_FAILED:\r\n                   return {\r\n                       ...state,\r\n                       isLoading: true,\r\n                   }; \r\n             \r\n                   default:\r\n                       return state;\r\n               }\r\n               \r\n           };\r\n           export const getallq15configData = (state = intialLoginData, action: any) => {\r\n        \r\n            switch (action.type) {\r\n               \r\n                case GET_Q15CONFIG_STARTED:\r\n                   return {\r\n                        ...state,\r\n                        isLoading: true,    \r\n                        isFormSubmit:true,\r\n                        items:[],\r\n                        loginInput: action.input\r\n                        \r\n                    };\r\n        \r\n                case GET_Q15CONFIG_COMPLETED:\r\n                      return {\r\n                        ...state,\r\n                        isLoading: false,\r\n                        isFormSubmit:true,\r\n                        status: action.status,\r\n                        items: action.payload\r\n                        };\r\n                    \r\n                case GET_Q15CONFIG_FAILED:\r\n                    return {\r\n                        ...state,\r\n                        isLoading: true,\r\n                    }; \r\n              \r\n                    default:\r\n                        return state;\r\n                }\r\n                \r\n            };\r\n            export const getidq15configData = (state = intialLoginData, action: any) => {\r\n        \r\n                switch (action.type) {\r\n                   \r\n                    case GETID_Q15CONFIG_STARTED:\r\n                       return {\r\n                            ...state,\r\n                            isLoading: true,    \r\n                            isFormSubmit:true,\r\n                            items:[],\r\n                            loginInput: action.input\r\n                            \r\n                        };\r\n            \r\n                    case GETID_Q15CONFIG_COMPLETED:\r\n                          return {\r\n                            ...state,\r\n                            isLoading: false,\r\n                            isFormSubmit:true,\r\n                            status: action.status,\r\n                            items: action.payload\r\n                            };\r\n                        \r\n                    case GETID_Q15CONFIG_FAILED:\r\n                        return {\r\n                            ...state,\r\n                            isLoading: true,\r\n                        }; \r\n                  \r\n                        default:\r\n                            return state;\r\n                    }\r\n                    \r\n                };\r\n                export const getSLOTq15configData = (state = intialLoginData, action: any) => {\r\n        \r\n                    switch (action.type) {\r\n                       \r\n                        case GETSLOT_Q15CONFIG_STARTED:\r\n                           return {\r\n                                ...state,\r\n                                isLoading: true,    \r\n                                isFormSubmit:true,\r\n                                items:[],\r\n                                loginInput: action.input\r\n                                \r\n                            };\r\n                \r\n                        case GETSLOT_Q15CONFIG_COMPLETED:\r\n                              return {\r\n                                ...state,\r\n                                isLoading: false,\r\n                                isFormSubmit:true,\r\n                                status: action.status,\r\n                                items: action.payload\r\n                                };\r\n                            \r\n                        case GETSLOT_Q15CONFIG_FAILED:\r\n                            return {\r\n                                ...state,\r\n                                isLoading: true,\r\n                            }; \r\n                      \r\n                            default:\r\n                                return state;\r\n                        }\r\n                        \r\n                    };"],"mappings":"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"},"metadata":{},"sourceType":"module"}