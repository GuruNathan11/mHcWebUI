{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_BED_ASSIGNMENT_COMPLETED, CREATE_BED_ASSIGNMENT_FAILED, GETALL_BED_ASSIGNMENT_COMPLETED, GETALL_BED_ASSIGNMENT_FAILED, CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED, CREATE_PATIENT_BED_ASSIGNMENT_FAILED, GET_PATIENT_BED_ASSIGNMENT_COMPLETED, GET_PATIENT_BED_ASSIGNMENT_FAILED } from \"../actions/BedAssignment\";\nimport { createBedAssignmentAPI, getAllBedAssignmentAPI, createPatientBedAssignAPI, getPatientBedAssignmentAPI } from \"../../utils/api/BedAssignmentAPI\";\nexport function* createBedAssignment(request) {\n  try {\n    const result = yield call(createBedAssignmentAPI.createBedAssignment, request.input);\n    yield put({\n      type: CREATE_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: CREATE_BED_ASSIGNMENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllBedAssignment(request) {\n  try {\n    const result = yield call(getAllBedAssignmentAPI.getAllBedAssignment, request.input);\n    yield put({\n      type: GETALL_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: GETALL_BED_ASSIGNMENT_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* createPatientBedAssign(request) {\n  try {\n    const result = yield call(createPatientBedAssignAPI.createPatientBedAssign, request.input);\n    yield put({\n      type: CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: CREATE_PATIENT_BED_ASSIGNMENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getPatientBedAssignment(request) {\n  try {\n    const result = yield call(getPatientBedAssignmentAPI.getPatientBedAssignment, request.input);\n    yield put({\n      type: GET_PATIENT_BED_ASSIGNMENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: GET_PATIENT_BED_ASSIGNMENT_FAILED,\n      payload: e.message\n    });\n  }\n}","map":{"version":3,"names":["put","call","CREATE_BED_ASSIGNMENT_COMPLETED","CREATE_BED_ASSIGNMENT_FAILED","GETALL_BED_ASSIGNMENT_COMPLETED","GETALL_BED_ASSIGNMENT_FAILED","CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED","CREATE_PATIENT_BED_ASSIGNMENT_FAILED","GET_PATIENT_BED_ASSIGNMENT_COMPLETED","GET_PATIENT_BED_ASSIGNMENT_FAILED","createBedAssignmentAPI","getAllBedAssignmentAPI","createPatientBedAssignAPI","getPatientBedAssignmentAPI","createBedAssignment","request","result","input","type","payload","data","e","getAllBedAssignment","message","createPatientBedAssign","getPatientBedAssignment"],"sources":["E:/WebUI_MH/src/store/sagas/BedAssignment.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\n\r\nimport { \r\n    CREATE_BED_ASSIGNMENT_COMPLETED,\r\n    CREATE_BED_ASSIGNMENT_FAILED,\r\n    GETALL_BED_ASSIGNMENT_COMPLETED,\r\n    GETALL_BED_ASSIGNMENT_FAILED,\r\n    CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED,\r\n    CREATE_PATIENT_BED_ASSIGNMENT_FAILED,\r\n    GET_PATIENT_BED_ASSIGNMENT_COMPLETED,\r\n    GET_PATIENT_BED_ASSIGNMENT_FAILED\r\n} from \"../actions/BedAssignment\";\r\n\r\nimport { createBedAssignmentAPI,getAllBedAssignmentAPI,createPatientBedAssignAPI,getPatientBedAssignmentAPI } from \"../../utils/api/BedAssignmentAPI\"; \r\n\r\n\r\nexport function* createBedAssignment(request: any) {    \r\n    try {  \r\n         const result=yield call(createBedAssignmentAPI.createBedAssignment, request.input);        \r\n        yield put({ \r\n            type: CREATE_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: CREATE_BED_ASSIGNMENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\nexport function* getAllBedAssignment(request: any) {\r\n    try {  \r\n         const result=yield call(getAllBedAssignmentAPI.getAllBedAssignment, request.input);        \r\n        yield put({\r\n            \r\n            type: GETALL_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GETALL_BED_ASSIGNMENT_FAILED, payload: e.message });\r\n       \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* createPatientBedAssign(request: any) {    \r\n    try {  \r\n         const result=yield call(createPatientBedAssignAPI.createPatientBedAssign, request.input);        \r\n        yield put({ \r\n            type: CREATE_PATIENT_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: CREATE_PATIENT_BED_ASSIGNMENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\nexport function* getPatientBedAssignment(request: any) {\r\n    try {  \r\n         const result=yield call(getPatientBedAssignmentAPI.getPatientBedAssignment, request.input);        \r\n        yield put({\r\n            \r\n            type: GET_PATIENT_BED_ASSIGNMENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_PATIENT_BED_ASSIGNMENT_FAILED, payload: e.message });\r\n       \r\n    \r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAE9C,SACIC,+BAA+B,EAC/BC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,4BAA4B,EAC5BC,uCAAuC,EACvCC,oCAAoC,EACpCC,oCAAoC,EACpCC,iCAAiC,QAC9B,0BAA0B;AAEjC,SAASC,sBAAsB,EAACC,sBAAsB,EAACC,yBAAyB,EAACC,0BAA0B,QAAQ,kCAAkC;AAGrJ,OAAO,UAAUC,mBAAmBA,CAACC,OAAY,EAAE;EAC/C,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACS,sBAAsB,CAACI,mBAAmB,EAAEC,OAAO,CAACE,KAAK,CAAC;IACnF,MAAMjB,GAAG,CAAC;MACNkB,IAAI,EAAEhB,+BAA+B;MACrCiB,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAEf,4BAA4B;MAAEgB,OAAO,EAAEE;IAAE,CAAC,CAAC;IACjE,OAAQA,CAAC;EAET;AACJ;AACA,OAAO,UAAUC,mBAAmBA,CAACP,OAAY,EAAE;EAC/C,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACU,sBAAsB,CAACW,mBAAmB,EAAEP,OAAO,CAACE,KAAK,CAAC;IACnF,MAAMjB,GAAG,CAAC;MAENkB,IAAI,EAAEd,+BAA+B;MACrCe,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAEb,4BAA4B;MAAEc,OAAO,EAAEE,CAAC,CAACE;IAAQ,CAAC,CAAC;EAGzE;AACJ;AAGA,OAAO,UAAUC,sBAAsBA,CAACT,OAAY,EAAE;EAClD,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACW,yBAAyB,CAACY,sBAAsB,EAAET,OAAO,CAACE,KAAK,CAAC;IACzF,MAAMjB,GAAG,CAAC;MACNkB,IAAI,EAAEZ,uCAAuC;MAC7Ca,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAEX,oCAAoC;MAAEY,OAAO,EAAEE;IAAE,CAAC,CAAC;IACzE,OAAQA,CAAC;EAET;AACJ;AACA,OAAO,UAAUI,uBAAuBA,CAACV,OAAY,EAAE;EACnD,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACY,0BAA0B,CAACY,uBAAuB,EAAEV,OAAO,CAACE,KAAK,CAAC;IAC3F,MAAMjB,GAAG,CAAC;MAENkB,IAAI,EAAEV,oCAAoC;MAC1CW,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAET,iCAAiC;MAAEU,OAAO,EAAEE,CAAC,CAACE;IAAQ,CAAC,CAAC;EAG9E;AACJ"},"metadata":{},"sourceType":"module"}