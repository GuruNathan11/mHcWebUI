{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_COMPLETED, CREATE_PATIENT_FAILED, GETALL_PATIENT_COMPLETED, GETALL_PATIENT_FAILED, GETBYID_PATIENT_COMPLETED, GETBYID_PATIENT_FAILED, GETBYINPUT_PATIENT_COMPLETED, GETBYINPUT_PATIENT_FAILED, DISCHARGEBYID_PATIENT_COMPLETED, DISCHARGEBYID_PATIENT_FAILED, UPDATE_PATIENT_COMPLETED, UPDATE_PATIENT_FAILED, DELETE_PATIENT_COMPLETED, DELETE_PATIENT_FAILED } from \"../actions/Patient\";\nimport { CreatePatientAPI, GetAllPatientAPI, GetByIdPatientAPI, GetByPatientAPI, DischargePatientByIdAPI, UpdatePatientAPI, DeletePatientAPI } from \"../../utils/api/PatientAPI\";\nexport function* createPatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientAPI.createPatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllPatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllPatientAPI.getAllPatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getByIdPatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetByIdPatientAPI.getByIdPatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYID_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYID_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getPatientByInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetByPatientAPI.getPatientByInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* dischargePatientById(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DischargePatientByIdAPI.dischargePatientById, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DISCHARGEBYID_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DISCHARGEBYID_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* updatePatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdatePatientAPI.updatePatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deletePatient(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeletePatientAPI.deletePatient, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_PATIENT_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_PATIENT_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_COMPLETED","CREATE_PATIENT_FAILED","GETALL_PATIENT_COMPLETED","GETALL_PATIENT_FAILED","GETBYID_PATIENT_COMPLETED","GETBYID_PATIENT_FAILED","GETBYINPUT_PATIENT_COMPLETED","GETBYINPUT_PATIENT_FAILED","DISCHARGEBYID_PATIENT_COMPLETED","DISCHARGEBYID_PATIENT_FAILED","UPDATE_PATIENT_COMPLETED","UPDATE_PATIENT_FAILED","DELETE_PATIENT_COMPLETED","DELETE_PATIENT_FAILED","CreatePatientAPI","GetAllPatientAPI","GetByIdPatientAPI","GetByPatientAPI","DischargePatientByIdAPI","UpdatePatientAPI","DeletePatientAPI","createPatient","request","result","input","type","payload","data","e","getAllPatient","getByIdPatient","getPatientByInput","dischargePatientById","updatePatient","deletePatient"],"sources":["E:/react/WebUI_MH/src/store/sagas/Patient.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_COMPLETED,CREATE_PATIENT_FAILED,GETALL_PATIENT_COMPLETED,GETALL_PATIENT_FAILED,GETBYID_PATIENT_COMPLETED,\r\n    GETBYID_PATIENT_FAILED, GETBYINPUT_PATIENT_COMPLETED,GETBYINPUT_PATIENT_FAILED, DISCHARGEBYID_PATIENT_COMPLETED,DISCHARGEBYID_PATIENT_FAILED, UPDATE_PATIENT_COMPLETED,\r\n    UPDATE_PATIENT_FAILED,DELETE_PATIENT_COMPLETED,DELETE_PATIENT_FAILED  } from \"../actions/Patient\";\r\nimport {CreatePatientAPI,GetAllPatientAPI,GetByIdPatientAPI,GetByPatientAPI,DischargePatientByIdAPI,UpdatePatientAPI,DeletePatientAPI} from \"../../utils/api/PatientAPI\"; \r\n\r\nexport function* createPatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientAPI.createPatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllPatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllPatientAPI.getAllPatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getByIdPatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetByIdPatientAPI.getByIdPatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYID_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYID_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getPatientByInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetByPatientAPI.getPatientByInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* dischargePatientById(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DischargePatientByIdAPI.dischargePatientById, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: DISCHARGEBYID_PATIENT_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DISCHARGEBYID_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* updatePatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdatePatientAPI.updatePatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_PATIENT_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deletePatient(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeletePatientAPI.deletePatient, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_PATIENT_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_PATIENT_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}