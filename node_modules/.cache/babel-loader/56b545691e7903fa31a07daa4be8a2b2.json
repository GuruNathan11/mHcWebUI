{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { GETALL_ORGANIZATION_COMPLETED, GETALL_ORGANIZATION_FAILED, UPDATE_ORGANIZATION_COMPLETED, UPDATE_ORGANIZATION_FAILED, CREATE_ORGANIZATION_COMPLETED, CREATE_ORGANIZATION_FAILED, GETBYID_ORGANIZATION_COMPLETED, GETBYID_ORGANIZATION_FAILED } from \"../actions/Organization\";\nimport { OrganizationAPI, UpdateOrganizationAPI, CreateOrganizationAPI, GetByIdOrganizationAPI } from \"../../utils/api/OrganizationAPI\";\nexport function* getAllOrganization(request) {\n  //console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(OrganizationAPI.getAllOrganization, request.input);\n    //console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_ORGANIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    // console.log(e);\n    yield put({\n      type: GETALL_ORGANIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* updateOrganization(request) {\n  // console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdateOrganizationAPI.updateOrganization, request.input);\n    // console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_ORGANIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    // console.log(e);\n    yield put({\n      type: UPDATE_ORGANIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* createOrganization(request) {\n  // console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreateOrganizationAPI.createOrganization, request.input);\n    //   console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_ORGANIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //    console.log(e);\n    yield put({\n      type: CREATE_ORGANIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getByIdOrganization(request) {\n  //console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetByIdOrganizationAPI.getByIdOrganization, request.input);\n    //   console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYID_ORGANIZATION_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //    console.log(e);\n    yield put({\n      type: GETBYID_ORGANIZATION_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","GETALL_ORGANIZATION_COMPLETED","GETALL_ORGANIZATION_FAILED","UPDATE_ORGANIZATION_COMPLETED","UPDATE_ORGANIZATION_FAILED","CREATE_ORGANIZATION_COMPLETED","CREATE_ORGANIZATION_FAILED","GETBYID_ORGANIZATION_COMPLETED","GETBYID_ORGANIZATION_FAILED","OrganizationAPI","UpdateOrganizationAPI","CreateOrganizationAPI","GetByIdOrganizationAPI","getAllOrganization","request","result","input","type","payload","data","e","updateOrganization","createOrganization","getByIdOrganization"],"sources":["E:/WebUI_MH/src/store/sagas/Organization.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport { GETALL_ORGANIZATION_COMPLETED,GETALL_ORGANIZATION_FAILED,UPDATE_ORGANIZATION_COMPLETED,UPDATE_ORGANIZATION_FAILED,CREATE_ORGANIZATION_COMPLETED,CREATE_ORGANIZATION_FAILED,GETBYID_ORGANIZATION_COMPLETED,GETBYID_ORGANIZATION_FAILED} from \"../actions/Organization\";\r\nimport { OrganizationAPI,UpdateOrganizationAPI,CreateOrganizationAPI,GetByIdOrganizationAPI } from \"../../utils/api/OrganizationAPI\"; \r\n\r\nexport function* getAllOrganization(request: any) {\r\n    //console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(OrganizationAPI.getAllOrganization, request.input);        \r\n       //console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_ORGANIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n       // console.log(e);\r\n        yield put({ type: GETALL_ORGANIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* updateOrganization(request: any) {\r\n   // console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdateOrganizationAPI.updateOrganization, request.input);        \r\n      // console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: UPDATE_ORGANIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n       // console.log(e);\r\n        yield put({ type: UPDATE_ORGANIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* createOrganization(request: any) {\r\n   // console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreateOrganizationAPI.createOrganization, request.input);        \r\n    //   console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_ORGANIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n    //    console.log(e);\r\n        yield put({ type: CREATE_ORGANIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getByIdOrganization(request: any) {\r\n    //console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetByIdOrganizationAPI.getByIdOrganization, request.input);        \r\n    //   console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYID_ORGANIZATION_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n    //    console.log(e);\r\n        yield put({ type: GETBYID_ORGANIZATION_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAC9C,SAASC,6BAA6B,EAACC,0BAA0B,EAACC,6BAA6B,EAACC,0BAA0B,EAACC,6BAA6B,EAACC,0BAA0B,EAACC,8BAA8B,EAACC,2BAA2B,QAAO,yBAAyB;AAC9Q,SAASC,eAAe,EAACC,qBAAqB,EAACC,qBAAqB,EAACC,sBAAsB,QAAQ,iCAAiC;AAEpI,OAAO,UAAUC,kBAAkBA,CAACC,OAAY,EAAE;EAC9C;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACS,eAAe,CAACI,kBAAkB,EAAEC,OAAO,CAACE,KAAK,CAAC;IAC5E;IACC,MAAMjB,GAAG,CAAC;MACNkB,IAAI,EAAEhB,6BAA6B;MACnCiB,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACT;IACC,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAEf,0BAA0B;MAAEgB,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC/D,OAAQA,CAAC;EAET;AACJ;AAEA,OAAO,UAAUC,kBAAkBA,CAACP,OAAY,EAAE;EAC/C;;EAEC,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACU,qBAAqB,CAACW,kBAAkB,EAAEP,OAAO,CAACE,KAAK,CAAC;IACnF;IACE,MAAMjB,GAAG,CAAC;MACNkB,IAAI,EAAEd,6BAA6B;MACnCe,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACT;IACC,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAEb,0BAA0B;MAAEc,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC/D,OAAQA,CAAC;EAET;AACJ;AAEA,OAAO,UAAUE,kBAAkBA,CAACR,OAAY,EAAE;EAC/C;;EAEC,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACW,qBAAqB,CAACW,kBAAkB,EAAER,OAAO,CAACE,KAAK,CAAC;IACrF;IACI,MAAMjB,GAAG,CAAC;MACNkB,IAAI,EAAEZ,6BAA6B;MACnCa,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACZ;IACI,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAEX,0BAA0B;MAAEY,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC/D,OAAQA,CAAC;EAET;AACJ;AAEA,OAAO,UAAUG,mBAAmBA,CAACT,OAAY,EAAE;EAC/C;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMf,IAAI,CAACY,sBAAsB,CAACW,mBAAmB,EAAET,OAAO,CAACE,KAAK,CAAC;IACvF;IACI,MAAMjB,GAAG,CAAC;MACNkB,IAAI,EAAEV,8BAA8B;MACpCW,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACZ;IACI,MAAMrB,GAAG,CAAC;MAAEkB,IAAI,EAAET,2BAA2B;MAAEU,OAAO,EAAEE;IAAE,CAAC,CAAC;IAChE,OAAQA,CAAC;EAET;AACJ"},"metadata":{},"sourceType":"module"}