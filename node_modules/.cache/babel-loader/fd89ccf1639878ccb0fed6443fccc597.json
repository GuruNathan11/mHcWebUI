{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_ORDERPROCEDURE_PROBLEMS_COMPLETED, CREATE_ORDERPROCEDURE_PROBLEMS_FAILED, GETALL_ORDERPROCEDURE_PROBLEMS_COMPLETED, GETALL_ORDERPROCEDURE_PROBLEMS_FAILED, GETBYINPUT_ORDERPROCEDURE_PROBLEMS_COMPLETED, GETBYINPUT_ORDERPROCEDURE_PROBLEMS_FAILED, UPDATE_ORDERPROCEDURE_PROBLEMS_COMPLETED, UPDATE_ORDERPROCEDURE_PROBLEMS_FAILED, DELETE_ORDERPROCEDURE_PROBLEMS_COMPLETED, DELETE_ORDERPROCEDURE_PROBLEMS_FAILED } from \"../actions/OrderProcedureControl\";\nimport { CreateOrderProcedureProblemAPI, GetAllOrderProcedureProblemsAPI, GetOrderProcedureByControlAPI, UpdateOrderProcedureProblemsAPI, DeleteOrderProcedureProblemsAPI } from \"../../utils/api/OrderProcedureControlAPI\";\nexport function* createOrderProcedureProblem(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreateOrderProcedureProblemAPI.createOrderProcedureProblem, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_ORDERPROCEDURE_PROBLEMS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_ORDERPROCEDURE_PROBLEMS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllOrderProcedureProblems(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllOrderProcedureProblemsAPI.getAllOrderProcedureProblems, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_ORDERPROCEDURE_PROBLEMS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_ORDERPROCEDURE_PROBLEMS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getOrderProcedureByControlInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetOrderProcedureByControlAPI.getOrderProcedureByControlInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_ORDERPROCEDURE_PROBLEMS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_ORDERPROCEDURE_PROBLEMS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* updateOrderProcedureProblems(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdateOrderProcedureProblemsAPI.updateOrderProcedureProblems, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_ORDERPROCEDURE_PROBLEMS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_ORDERPROCEDURE_PROBLEMS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deleteOrderProcedureProblems(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeleteOrderProcedureProblemsAPI.deleteOrderProcedureProblems, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_ORDERPROCEDURE_PROBLEMS_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_ORDERPROCEDURE_PROBLEMS_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_ORDERPROCEDURE_PROBLEMS_COMPLETED","CREATE_ORDERPROCEDURE_PROBLEMS_FAILED","GETALL_ORDERPROCEDURE_PROBLEMS_COMPLETED","GETALL_ORDERPROCEDURE_PROBLEMS_FAILED","GETBYINPUT_ORDERPROCEDURE_PROBLEMS_COMPLETED","GETBYINPUT_ORDERPROCEDURE_PROBLEMS_FAILED","UPDATE_ORDERPROCEDURE_PROBLEMS_COMPLETED","UPDATE_ORDERPROCEDURE_PROBLEMS_FAILED","DELETE_ORDERPROCEDURE_PROBLEMS_COMPLETED","DELETE_ORDERPROCEDURE_PROBLEMS_FAILED","CreateOrderProcedureProblemAPI","GetAllOrderProcedureProblemsAPI","GetOrderProcedureByControlAPI","UpdateOrderProcedureProblemsAPI","DeleteOrderProcedureProblemsAPI","createOrderProcedureProblem","request","result","input","type","payload","data","e","getAllOrderProcedureProblems","getOrderProcedureByControlInput","updateOrderProcedureProblems","deleteOrderProcedureProblems"],"sources":["E:/WebUI_MH/src/store/sagas/OrderProcedureControl.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {\r\n    CREATE_ORDERPROCEDURE_PROBLEMS_COMPLETED,\r\n    CREATE_ORDERPROCEDURE_PROBLEMS_FAILED,\r\n    GETALL_ORDERPROCEDURE_PROBLEMS_COMPLETED,\r\n    GETALL_ORDERPROCEDURE_PROBLEMS_FAILED,\r\n    GETBYINPUT_ORDERPROCEDURE_PROBLEMS_COMPLETED,\r\n    GETBYINPUT_ORDERPROCEDURE_PROBLEMS_FAILED,   \r\n    UPDATE_ORDERPROCEDURE_PROBLEMS_COMPLETED,\r\n    UPDATE_ORDERPROCEDURE_PROBLEMS_FAILED,\r\n    DELETE_ORDERPROCEDURE_PROBLEMS_COMPLETED,\r\n    DELETE_ORDERPROCEDURE_PROBLEMS_FAILED} from \"../actions/OrderProcedureControl\";\r\nimport {CreateOrderProcedureProblemAPI,GetAllOrderProcedureProblemsAPI,GetOrderProcedureByControlAPI,UpdateOrderProcedureProblemsAPI,DeleteOrderProcedureProblemsAPI} from \"../../utils/api/OrderProcedureControlAPI\"; \r\n\r\nexport function* createOrderProcedureProblem(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreateOrderProcedureProblemAPI.createOrderProcedureProblem, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_ORDERPROCEDURE_PROBLEMS_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_ORDERPROCEDURE_PROBLEMS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllOrderProcedureProblems(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllOrderProcedureProblemsAPI.getAllOrderProcedureProblems, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_ORDERPROCEDURE_PROBLEMS_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_ORDERPROCEDURE_PROBLEMS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getOrderProcedureByControlInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetOrderProcedureByControlAPI.getOrderProcedureByControlInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_ORDERPROCEDURE_PROBLEMS_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_ORDERPROCEDURE_PROBLEMS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* updateOrderProcedureProblems(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdateOrderProcedureProblemsAPI.updateOrderProcedureProblems, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_ORDERPROCEDURE_PROBLEMS_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_ORDERPROCEDURE_PROBLEMS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deleteOrderProcedureProblems(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeleteOrderProcedureProblemsAPI.deleteOrderProcedureProblems, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_ORDERPROCEDURE_PROBLEMS_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_ORDERPROCEDURE_PROBLEMS_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAC9C,SACIC,wCAAwC,EACxCC,qCAAqC,EACrCC,wCAAwC,EACxCC,qCAAqC,EACrCC,4CAA4C,EAC5CC,yCAAyC,EACzCC,wCAAwC,EACxCC,qCAAqC,EACrCC,wCAAwC,EACxCC,qCAAqC,QAAO,kCAAkC;AAClF,SAAQC,8BAA8B,EAACC,+BAA+B,EAACC,6BAA6B,EAACC,+BAA+B,EAACC,+BAA+B,QAAO,0CAA0C;AAErN,OAAO,UAAUC,2BAA2BA,CAACC,OAAY,EAAE;EACvD;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMlB,IAAI,CAACW,8BAA8B,CAACK,2BAA2B,EAAEC,OAAO,CAACE,KAAK,CAAC;IACpG;IACC,MAAMpB,GAAG,CAAC;MACNqB,IAAI,EAAEnB,wCAAwC;MAC9CoB,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR;IACA,MAAMxB,GAAG,CAAC;MAAEqB,IAAI,EAAElB,qCAAqC;MAAEmB,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC1E,OAAQA,CAAC;EAET;AACJ;AAEA,OAAO,UAAUC,4BAA4BA,CAACP,OAAY,EAAE;EACxD;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMlB,IAAI,CAACY,+BAA+B,CAACY,4BAA4B,EAAEP,OAAO,CAACE,KAAK,CAAC;IACtG;IACC,MAAMpB,GAAG,CAAC;MACNqB,IAAI,EAAEjB,wCAAwC;MAC9CkB,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR;IACA,MAAMxB,GAAG,CAAC;MAAEqB,IAAI,EAAEhB,qCAAqC;MAAEiB,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC1E,OAAQA,CAAC;EAET;AACJ;AAGA,OAAO,UAAUE,+BAA+BA,CAACR,OAAY,EAAE;EAC3D;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMlB,IAAI,CAACa,6BAA6B,CAACY,+BAA+B,EAAER,OAAO,CAACE,KAAK,CAAC;IACvG;IACC,MAAMpB,GAAG,CAAC;MACNqB,IAAI,EAAEf,4CAA4C;MAClDgB,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR;IACA,MAAMxB,GAAG,CAAC;MAAEqB,IAAI,EAAEd,yCAAyC;MAAEe,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC9E,OAAQA,CAAC;EAET;AACJ;AAGA,OAAO,UAAUG,4BAA4BA,CAACT,OAAY,EAAE;EACxD;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMlB,IAAI,CAACc,+BAA+B,CAACY,4BAA4B,EAAET,OAAO,CAACE,KAAK,CAAC;IACtG;IACC,MAAMpB,GAAG,CAAC;MACNqB,IAAI,EAAGb,wCAAwC;MAC/Cc,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR;IACA,MAAMxB,GAAG,CAAC;MAAEqB,IAAI,EAAEZ,qCAAqC;MAAEa,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC1E,OAAQA,CAAC;EAET;AACJ;AAGA,OAAO,UAAUI,4BAA4BA,CAACV,OAAY,EAAE;EACxD;;EAEA,IAAI;IACC,MAAMC,MAAM,GAAC,MAAMlB,IAAI,CAACe,+BAA+B,CAACY,4BAA4B,EAAEV,OAAO,CAACE,KAAK,CAAC;IACtG;IACC,MAAMpB,GAAG,CAAC;MACNqB,IAAI,EAAGX,wCAAwC;MAC/CY,OAAO,EAAEH,MAAM,CAACI,IAAI;MACpBH,KAAK,EAAEF,OAAO,CAACE;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR;IACA,MAAMxB,GAAG,CAAC;MAAEqB,IAAI,EAAEV,qCAAqC;MAAEW,OAAO,EAAEE;IAAE,CAAC,CAAC;IAC1E,OAAQA,CAAC;EAET;AACJ"},"metadata":{},"sourceType":"module"}