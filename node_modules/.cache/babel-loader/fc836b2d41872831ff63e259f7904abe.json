{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { CREATE_PATIENT_LABORDER_COMPLETED, CREATE_PATIENT_LABORDER_FAILED, GETALL_PATIENT_LABORDER_COMPLETED, GETALL_PATIENT_LABORDER_FAILED, GETBYINPUT_PATIENT_LABORDER_COMPLETED, GETBYINPUT_PATIENT_LABORDER_FAILED, UPDATE_PATIENT_LABORDER_COMPLETED, UPDATE_PATIENT_LABORDER_FAILED, DELETE_PATIENT_LABORDER_COMPLETED, DELETE_PATIENT_LABORDER_FAILED, GET_PATIENTBYINPUTID_LABORDER_COMPLETED, GET_PATIENTBYINPUTID_LABORDER_FAILED } from \"../actions/PatientLabOrder\";\nimport { CreatePatientLabOrderAPI, GetAllPatientLabOrderAPI, GetLabOrderByPatientAPI, GetLabOrderByPatientInputAPI, UpdatePatientLabOrderAPI, DeletePatientLabOrderAPI } from \"../../utils/api/PatientLabOrderAPI\";\nexport function* createPatientLabOrder(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(CreatePatientLabOrderAPI.createPatientLabOrder, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: CREATE_PATIENT_LABORDER_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: CREATE_PATIENT_LABORDER_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getAllPatientLabOrder(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetAllPatientLabOrderAPI.getAllPatientLabOrder, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETALL_PATIENT_LABORDER_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETALL_PATIENT_LABORDER_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getLabOrderByPatientInput(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(GetLabOrderByPatientAPI.getLabOrderByPatientInput, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: GETBYINPUT_PATIENT_LABORDER_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: GETBYINPUT_PATIENT_LABORDER_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* getLabOrderByPatientInputId(request) {\n  try {\n    const result = yield call(GetLabOrderByPatientInputAPI.getLabOrderByPatientInputId, request.input);\n    yield put({\n      type: GET_PATIENTBYINPUTID_LABORDER_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    yield put({\n      type: GET_PATIENTBYINPUTID_LABORDER_FAILED,\n      payload: e.message\n    });\n  }\n}\nexport function* updatePatientLabOrder(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(UpdatePatientLabOrderAPI.updatePatientLabOrder, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: UPDATE_PATIENT_LABORDER_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: UPDATE_PATIENT_LABORDER_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}\nexport function* deletePatientLabOrder(request) {\n  //  console.log(\"Request Input = \"+JSON.stringify(request.input));\n\n  try {\n    const result = yield call(DeletePatientLabOrderAPI.deletePatientLabOrder, request.input);\n    //  console.log(\"Sagas Result Output = \"+result.data);\n    yield put({\n      type: DELETE_PATIENT_LABORDER_COMPLETED,\n      payload: result.data,\n      input: request.input\n    });\n  } catch (e) {\n    //  console.log(e);\n    yield put({\n      type: DELETE_PATIENT_LABORDER_FAILED,\n      payload: e\n    });\n    return e;\n  }\n}","map":{"version":3,"names":["put","call","CREATE_PATIENT_LABORDER_COMPLETED","CREATE_PATIENT_LABORDER_FAILED","GETALL_PATIENT_LABORDER_COMPLETED","GETALL_PATIENT_LABORDER_FAILED","GETBYINPUT_PATIENT_LABORDER_COMPLETED","GETBYINPUT_PATIENT_LABORDER_FAILED","UPDATE_PATIENT_LABORDER_COMPLETED","UPDATE_PATIENT_LABORDER_FAILED","DELETE_PATIENT_LABORDER_COMPLETED","DELETE_PATIENT_LABORDER_FAILED","GET_PATIENTBYINPUTID_LABORDER_COMPLETED","GET_PATIENTBYINPUTID_LABORDER_FAILED","CreatePatientLabOrderAPI","GetAllPatientLabOrderAPI","GetLabOrderByPatientAPI","GetLabOrderByPatientInputAPI","UpdatePatientLabOrderAPI","DeletePatientLabOrderAPI","createPatientLabOrder","request","result","input","type","payload","data","e","getAllPatientLabOrder","getLabOrderByPatientInput","getLabOrderByPatientInputId","message","updatePatientLabOrder","deletePatientLabOrder"],"sources":["E:/react/WebUI_MH/src/store/sagas/PatientLabOrder.ts"],"sourcesContent":["import { put, call } from \"redux-saga/effects\";\r\nimport {CREATE_PATIENT_LABORDER_COMPLETED,CREATE_PATIENT_LABORDER_FAILED,GETALL_PATIENT_LABORDER_COMPLETED,GETALL_PATIENT_LABORDER_FAILED,\r\n     GETBYINPUT_PATIENT_LABORDER_COMPLETED,GETBYINPUT_PATIENT_LABORDER_FAILED, UPDATE_PATIENT_LABORDER_COMPLETED,\r\n    UPDATE_PATIENT_LABORDER_FAILED,DELETE_PATIENT_LABORDER_COMPLETED,DELETE_PATIENT_LABORDER_FAILED,GET_PATIENTBYINPUTID_LABORDER_COMPLETED,\r\n    GET_PATIENTBYINPUTID_LABORDER_FAILED  } from \"../actions/PatientLabOrder\";\r\nimport {CreatePatientLabOrderAPI,GetAllPatientLabOrderAPI,GetLabOrderByPatientAPI,GetLabOrderByPatientInputAPI,UpdatePatientLabOrderAPI,DeletePatientLabOrderAPI} from \"../../utils/api/PatientLabOrderAPI\"; \r\n\r\nexport function* createPatientLabOrder(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(CreatePatientLabOrderAPI.createPatientLabOrder, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: CREATE_PATIENT_LABORDER_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: CREATE_PATIENT_LABORDER_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function* getAllPatientLabOrder(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetAllPatientLabOrderAPI.getAllPatientLabOrder, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETALL_PATIENT_LABORDER_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETALL_PATIENT_LABORDER_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* getLabOrderByPatientInput(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(GetLabOrderByPatientAPI.getLabOrderByPatientInput, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type: GETBYINPUT_PATIENT_LABORDER_COMPLETED,     \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: GETBYINPUT_PATIENT_LABORDER_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\nexport function*getLabOrderByPatientInputId (request:any) {\r\n    try {\r\n      \r\n        const result = yield call(GetLabOrderByPatientInputAPI.getLabOrderByPatientInputId,request.input);\r\n    \r\n      yield put({\r\n          type: GET_PATIENTBYINPUTID_LABORDER_COMPLETED,\r\n          payload: result.data,\r\n          input: request.input\r\n        });\r\n    } catch (e) {\r\n        yield put({ type: GET_PATIENTBYINPUTID_LABORDER_FAILED, payload: e.message });\r\n    }\r\n  }\r\n\r\nexport function* updatePatientLabOrder(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(UpdatePatientLabOrderAPI.updatePatientLabOrder, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  UPDATE_PATIENT_LABORDER_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: UPDATE_PATIENT_LABORDER_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport function* deletePatientLabOrder(request: any) {\r\n    //  console.log(\"Request Input = \"+JSON.stringify(request.input));\r\n \r\n    try {  \r\n         const result=yield call(DeletePatientLabOrderAPI.deletePatientLabOrder, request.input);        \r\n       //  console.log(\"Sagas Result Output = \"+result.data);\r\n        yield put({ \r\n            type:  DELETE_PATIENT_LABORDER_COMPLETED, \r\n            payload: result.data,\r\n            input: request.input\r\n        });\r\n    } catch (e) {\r\n        //  console.log(e);\r\n        yield put({ type: DELETE_PATIENT_LABORDER_FAILED, payload: e });  \r\n    return  e; \r\n    \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}